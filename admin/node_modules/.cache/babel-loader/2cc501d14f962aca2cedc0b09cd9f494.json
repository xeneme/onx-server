{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/medium-editor/dist/js/medium-editor.js","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/medium-editor/dist/js/medium-editor.js","mtime":1513764572000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/medium-editor/dist/js/medium-editor.js"],"names":["document","createElement","view","classListProp","protoProp","elemCtrProto","Element","objCtr","Object","strTrim","String","trim","replace","arrIndexOf","Array","indexOf","item","i","len","length","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","classList","token","test","call","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","Error","contains","add","tokens","arguments","l","updated","remove","index","splice","toggle","force","result","method","join","defineProperty","classListPropDesc","get","enumerable","configurable","ex","number","__defineGetter__","self","URL","webkitURL","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","get_class","object","prototype","match","FakeBlobBuilder","data","FakeBlob","encoding","size","FBB_proto","FB_proto","FileReaderSync","FileException","file_ex_codes","file_ex_code","real_URL","real_create_object_URL","createObjectURL","real_revoke_object_URL","revokeObjectURL","btoa","atob","ArrayBuffer","Uint8Array","origin","fake","uri","uri_info","createElementNS","uri_origin","href","protocol","toLowerCase","blob","data_URI_header","decodeURIComponent","encodeURIComponent","object_URL","substring","append","bb","str","buf","buf_len","fromCharCode","fr","readAsBinaryString","unescape","getBlob","slice","start","end","args","close","blobParts","options","builder","buffer","webkitSlice","getPrototypeOf","__proto__","window","content","root","factory","isElectron","module","process","versions","electron","exports","define","amd","MediumEditor","elements","init","extensions","copyInto","overwrite","dest","prop","sources","source","hasOwnProperty","nodeContainsWorksWithTextNodes","testParent","testText","createTextNode","appendChild","exc","Util","isIE","navigator","appName","RegExp","exec","userAgent","isEdge","isFF","isMac","platform","toUpperCase","keyCode","BACKSPACE","TAB","ENTER","ESCAPE","SPACE","DELETE","K","M","V","isMetaCtrlKey","event","metaKey","ctrlKey","isKey","keys","getKeyCode","isArray","which","charCode","blockContainerElementNames","emptyElementNames","extend","concat","apply","defaults","createLink","textNodes","target","anchor","moveTextRangeIntoElement","findOrCreateMatchingTextNodes","element","treeWalker","createTreeWalker","NodeFilter","SHOW_ALL","matchedNodes","currentTextIndex","startReached","currentNode","newNode","nextNode","nodeType","nodeValue","splitStartNodeIfNeeded","splitEndNodeIfNeeded","tagName","matchStartIndex","splitText","matchEndIndex","textIndexOfEndOfFarthestNode","endSplitPoint","splitByBlockElements","toRet","blockElementQuery","util","querySelectorAll","childNodes","child","blockElements","findAdjacentTextNodeWithContent","rootNode","targetNode","ownerDocument","pastTarget","nodeIterator","createNodeIterator","SHOW_TEXT","findPreviousSibling","node","isMediumEditorElement","previousSibling","parentNode","isDescendant","parent","checkEquality","isElement","obj","throttle","func","wait","THROTTLE_INTERVAL","context","timeout","previous","later","Date","now","remaining","clearTimeout","setTimeout","traverseUp","current","testElementFunction","htmlEntities","insertHTMLCommand","doc","html","selection","range","el","fragment","lastNode","toReplace","res","ecArgs","queryCommandSupported","execCommand","ignore","getSelection","rangeCount","getRangeAt","commonAncestorContainer","firstChild","selectNode","startOffset","endOffset","innerHTML","deleteContents","createDocumentFragment","insertNode","cloneRange","setStartAfter","collapse","selectRange","callListeners","execFormatBlock","blockContainer","getTopBlockContainer","getSelectionStart","some","childNode","isBlockContainer","nodeName","setTargetBlank","anchorUrl","url","rel","getElementsByTagName","attributes","value","removeTargetBlank","removeAttribute","addClassToAnchors","buttonClass","j","aChildren","parentAnchor","getClosestTag","isListItem","cleanListDOM","list","parentElement","unwrap","moveCursor","textContent","splitOffDOMTree","leafNode","splitLeft","splitOnNode","createdNode","splitRight","currParent","newParent","cloneNode","appendLast","sibling","nextSibling","hasChildNodes","removeChild","startNode","endNode","newElement","findCommonRoot","temp","insertBefore","rootChildren","lastChild","afterLast","forEach","depthOfNode","inNode","theDepth","inNode1","inNode2","depth1","depth2","node1","node2","isElementAtBeginningOfBlock","textVal","getContainerEditorElement","getClosestBlockContainer","topBlock","getFirstSelectableLeafNode","firstCell","querySelector","getFirstTextNode","warn","_getFirstTextNode","textNode","ensureUrlHasProtocol","console","undefined","deprecated","oldName","newName","version","m","deprecatedMethod","cleanupAttrs","attrs","attr","cleanupTags","tags","unwrapTags","tag","nodes","replaceChild","guid","_s4","Math","floor","random","Extension","protoProps","constructor","Surrogate","base","checkState","destroy","queryCommandState","isActive","isAlreadyApplied","setActive","setInactive","getInteractionElements","getEditorElements","getEditorId","id","getEditorOption","option","helper","filterOnlyParentElements","FILTER_ACCEPT","FILTER_SKIP","Selection","findMatchingSelectionParent","contentWindow","getSelectionElement","exportSelection","selectionState","preSelectionRange","selectNodeContents","setEnd","startContainer","doesRangeStartWithImages","startsWithImage","trailingImageCount","getTrailingImageCount","endContainer","emptyBlocksIndex","getIndexRelativeToAdjacentEmptyBlocks","importSelection","favorLaterSelectionAnchor","createRange","setStart","nodeStack","charIndex","foundStart","foundEnd","stop","nextCharIndex","allowRangeToStartAtEndOfNode","lastTextNode","pop","endIndex","importSelectionMoveCursorPastBlocks","importSelectionMoveCursorPastAnchor","nodeInsideAnchorTagFunction","prevNode","currentNodeIndex","SHOW_ELEMENT","startBlock","currIndex","cursorContainer","cursorOffset","closestBlock","emptyBlocksCount","blockIsEmpty","img","next","trailingImages","selectionContainsContent","sel","isCollapsed","selectionNode","getSelectedParentElement","selectionInContentEditableFalse","sawtrue","sawfalse","ce","getSelectionHtml","container","cloneContents","getCaretOffsets","preCaretRange","postCaretRange","left","right","rangeSelectsSingleNode","getSelectedElements","currNode","filter","containsNode","select","clearSelection","moveCursorToStart","collapseToStart","collapseToEnd","offset","getSelectionRange","removeAllRanges","addRange","anchorNode","isElementDescendantOfExtension","extension","extensionElements","Events","instance","events","disabledEvents","customEvents","listeners","InputEventOnContenteditableSupported","attachDOMEvent","targets","listener","useCapture","win","addEventListener","bind","detachDOMEvent","indexOfListener","removeEventListener","n","detachAllDOMEvents","detachAllEventsFromElement","filtered","attachAllEventsToElement","contentCache","eventsCache","enableCustomEvent","disableCustomEvent","attachCustomEvent","setupListener","detachCustomEvent","indexOfCustomListener","detachAllCustomEvents","triggerCustomEvent","editable","detachExecCommand","attachToExecCommand","execCommandListener","execInfo","handleDocumentExecCommand","wrapExecCommand","unwrapExecCommand","command","wrapper","orig","body","handleBodyMousedown","handleBodyClick","handleBodyFocus","attachToEachElement","handleInput","keypressUpdateInput","handleDocumentSelectionChange","handleClick","handleBlur","handleKeypress","handleKeyup","handleKeydown","handleMouseover","handleDragging","handleDrop","handlePaste","handler","cleanupElement","focusElement","focus","updateFocus","eventObj","hadFocus","getFocusedElement","toFocus","lastMousedownTarget","externalEvent","updateInput","currentTarget","activeElement","Button","action","aria","tagNames","style","useQueryState","contentDefault","contentFA","isBuiltInButton","button","createButton","on","getButton","getAction","getAria","getTagNames","ariaLabel","buttonLabels","className","preventDefault","stopPropagation","execAction","knownState","queryState","isMatch","styleVals","computedStyle","getComputedStyle","getPropertyValue","val","FormExtension","formSaveLabel","formCloseLabel","activeClass","hasForm","getForm","isDisplayed","showForm","hideForm","showToolbarDefaultActions","toolbar","getExtensionByName","hideToolbarDefaultActions","setToolbarPosition","form","AnchorForm","customClassOption","customClassOptionText","linkValidation","placeholderText","targetCheckbox","targetCheckboxText","subscribe","shiftKey","createForm","getTemplate","template","getInput","opts","input","getAnchorTargetCheckbox","buttonCheckbox","getAnchorButtonCheckbox","saveSelection","checked","getFormOpts","checkLinkFormat","doFormSave","completeFormSave","restoreSelection","checkSelection","ensureEncodedUri","decodeURI","encodeURI","ensureEncodedUriComponent","ensureEncodedParam","param","key","ensureEncodedQuery","queryString","map","urlSchemeRegex","hasScheme","scheme","telRegex","urlParts","path","query","host","doFormCancel","attachFormEvents","save","handleFormClick","handleTextboxKeyup","handleCloseClick","handleSaveClick","AnchorPreview","hideDelay","previewValueSelector","showWhenToolbarIsVisible","showOnEmptyLinks","anchorPreview","createPreview","attachToEditables","getPreviewElement","hidePreview","activeAnchor","showPreview","anchorEl","positionPreview","attachPreviewHandlers","containerWidth","innerWidth","buttonHeight","offsetHeight","boundary","getBoundingClientRect","diffLeft","diffTop","elementsContainer","elementsContainerAbsolute","relativeBoundary","halfOffsetWidth","defaultLeft","middleBoundary","elementsContainerBoundary","top","offsetWidth","toolbarExtension","width","height","scrollTop","pageYOffset","round","handleEditableMouseover","handlePositionedToolbar","anchorExtension","selectElement","delay","handleAnchorMouseout","anchorToPreview","off","instanceHandleAnchorMouseout","outerHTML","detachPreviewHandlers","handlePreviewMouseover","lastOver","getTime","hovering","handlePreviewMouseout","relatedTarget","updatePreview","durr","clearInterval","intervalTimer","instanceHandlePreviewMouseover","instanceHandlePreviewMouseout","setInterval","WHITESPACE_CHARS","KNOWN_TLDS_FRAGMENT","LINK_REGEXP_TEXT","KNOWN_TLDS_REGEXP","LINK_REGEXP","nodeIsNotInsideAnchorTag","AutoLink","disableEventHandling","onKeypress","onBlur","isLastInstance","activeInstances","_mediumEditors","editor","blurEvent","performLinking","keyPressEvent","performLinkingTimeout","error","contenteditable","documentModified","removeObsoleteAutoLinkSpans","performLinkingWithinElement","spans","trimmedTextContent","charactersTrimmed","subtree","splitTextBeforeEnd","characterCount","lastChildNotExhausted","currentNodeValue","previousNode","matches","findLinkableText","linkCreated","matchIndex","matchingTextNodes","shouldNotLink","createAutoLink","matchOk","matchEnd","shift","span","autoLink","CLASS_DRAG_OVER","clearClassNames","existing","FileDragging","allowedTypes","handleDrag","dataTransfer","dropEffect","files","file","isAllowedFile","insertImageFile","fileType","FileReader","fileReader","readAsDataURL","addImageElement","src","fileDragging","KeyboardCommands","commands","meta","alt","charCodeAt","isMeta","isShift","isAlt","altKey","keyboardCommands","FontNameForm","fonts","fontName","queryCommandValue","display","getSelect","clearFontName","handleFontChange","hasAttribute","font","FontSizeForm","fontSize","clearFontSize","handleSliderChange","pasteBinDefaultContent","lastRange","keyboardPasteEditable","stopProp","createReplacements","getClipboardContent","clipboardData","getData","legacyText","types","contentType","PasteHandler","forcePlainText","cleanPastedHTML","preCleanReplacements","cleanReplacements","cleanAttrs","cleanTags","handleAddElement","removePasteBin","defaultPrevented","clipboardContent","pastedHTML","pastedPlain","doPaste","paragraphs","p","cleanPaste","handlePasteBinPaste","trigger","getPasteBinHtml","stopImmediatePropagation","createPasteBin","rects","getClientRects","pasteBinElm","pasteBinId","boundHandlePaste","getPasteBin","getElementById","pasteBinHtml","text","elList","tmp","workEl","multiline","replacements","pasteHTML","filterCommonBlocks","filterLineBreak","fragmentBody","pasteBlock","cleanupSpans","isCommonBlock","previousElementSibling","removeWithParent","childElementCount","containerEl","newEl","isCEF","paste","Placeholder","hideOnClick","initPlaceholders","attachEventHandlers","initElement","updatePlaceholder","handleRemoveElement","showPlaceholder","hidePlaceholder","dontShow","handleFocus","placeholder","Toolbar","align","allowMultiParagraphSelection","buttons","firstButtonClass","lastButtonClass","standardizeSelectionStart","sticky","stickyTopOffset","updateOnEmptySelection","relativeContainer","initThrottledMethods","getToolbarElement","forEachExtension","iterator","createToolbar","createToolbarButtons","ul","li","btn","buttonName","buttonOpts","addBuiltInExtension","getToolbarActionsElement","throttledPositionToolbar","positionToolbarIfShown","handleEditableClick","handleEditableKeyup","documentElement","handleDocumentMouseup","handleWindowScroll","handleWindowResize","hideTimeout","delayShowTimeout","hideToolbar","showToolbar","isToolbarDefaultActionsDisplayed","hideExtensionForms","multipleBlockElementsSelected","regexEmptyHTMLTags","regexBlockElements","selectionHTML","hasMultiParagraphs","modifySelection","selectionRange","adjacentNode","substr","preventSelectionUpdates","selectionElement","showAndUpdateToolbar","setToolbarButtonStates","checkActiveButtons","manualStateChecks","updateExtensionState","positionStaticToolbar","positionToolbar","windowWidth","toolbarElement","containerRect","containerTop","containerCenter","toolbarHeight","toolbarWidth","targetLeft","ceil","positions","isNaN","ImageDragging","onload","imageDragging","handleDisableExtraSpaces","caretPositions","handleDisabledEnterKeydown","disableReturn","disableDoubleReturn","handleTabKeydown","handleBlockDeleteKeydowns","isEmpty","isHeader","nextElementSibling","children","handleEditableInput","textarea","addToEditors","removeFromEditors","createElementsArray","selector","filterEditorElements","cleanupTextareaElement","setExtensionDefaults","initExtension","extensionDefaults","isToolbarEnabled","every","isAnchorPreviewEnabled","isPlaceholderEnabled","isAutoLinkEnabled","isImageDraggingEnabled","isKeyboardCommandsEnabled","shouldUseFileDraggingExtension","createContentEditable","div","uniqueId","atts","resetContent","editorId","instanceHandleEditableInput","disableEditing","spellcheck","instanceHandleEditableKeydownEnter","elementId","initialContent","attachHandlers","disableExtraSpaces","initExtensions","builtIns","toolbarOptions","mergeOptions","deprecatedProperties","pair","execActionInternal","appendAction","justifyAction","cmdValueArgument","cleanupJustifyDivFragments","textAlign","childDivs","isDiv","br","origElements","setup","addElements","unsubscribe","fn","serialize","elementid","ext","merged","stopSelectionUpdates","startSelectionUpdates","fullAction","selectAllContents","selElement","focused","editableElementIndex","editableElement","currentEditor","customEvent","targetUrl","currentSelection","currRange","exportedSelection","startContainerParentElement","endContainerParentElement","modifiedExportedSelection","leadingWhitespacesCount","targetBlank","createEvent","initEvent","dispatchEvent","setContent","checkContentChanged","getContent","idx","removeElements","toRemove","getEditorFromElement","defaultView","parentWindow","activeButtonClass","parseVersionString","release","preRelease","major","parseInt","minor","revision"],"mappings":"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","sourcesContent":["/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js */\n\n// Full polyfill for browsers with no classList support\nif (!(\"classList\" in document.createElement(\"_\"))) {\n  (function (view) {\n\n  \"use strict\";\n\n  if (!('Element' in view)) return;\n\n  var\n      classListProp = \"classList\"\n    , protoProp = \"prototype\"\n    , elemCtrProto = view.Element[protoProp]\n    , objCtr = Object\n    , strTrim = String[protoProp].trim || function () {\n      return this.replace(/^\\s+|\\s+$/g, \"\");\n    }\n    , arrIndexOf = Array[protoProp].indexOf || function (item) {\n      var\n          i = 0\n        , len = this.length\n      ;\n      for (; i < len; i++) {\n        if (i in this && this[i] === item) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    // Vendors: please allow content code to instantiate DOMExceptions\n    , DOMEx = function (type, message) {\n      this.name = type;\n      this.code = DOMException[type];\n      this.message = message;\n    }\n    , checkTokenAndGetIndex = function (classList, token) {\n      if (token === \"\") {\n        throw new DOMEx(\n            \"SYNTAX_ERR\"\n          , \"An invalid or illegal string was specified\"\n        );\n      }\n      if (/\\s/.test(token)) {\n        throw new DOMEx(\n            \"INVALID_CHARACTER_ERR\"\n          , \"String contains an invalid character\"\n        );\n      }\n      return arrIndexOf.call(classList, token);\n    }\n    , ClassList = function (elem) {\n      var\n          trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n        , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n        , i = 0\n        , len = classes.length\n      ;\n      for (; i < len; i++) {\n        this.push(classes[i]);\n      }\n      this._updateClassName = function () {\n        elem.setAttribute(\"class\", this.toString());\n      };\n    }\n    , classListProto = ClassList[protoProp] = []\n    , classListGetter = function () {\n      return new ClassList(this);\n    }\n  ;\n  // Most DOMException implementations don't allow calling DOMException's toString()\n  // on non-DOMExceptions. Error's toString() is sufficient here.\n  DOMEx[protoProp] = Error[protoProp];\n  classListProto.item = function (i) {\n    return this[i] || null;\n  };\n  classListProto.contains = function (token) {\n    token += \"\";\n    return checkTokenAndGetIndex(this, token) !== -1;\n  };\n  classListProto.add = function () {\n    var\n        tokens = arguments\n      , i = 0\n      , l = tokens.length\n      , token\n      , updated = false\n    ;\n    do {\n      token = tokens[i] + \"\";\n      if (checkTokenAndGetIndex(this, token) === -1) {\n        this.push(token);\n        updated = true;\n      }\n    }\n    while (++i < l);\n\n    if (updated) {\n      this._updateClassName();\n    }\n  };\n  classListProto.remove = function () {\n    var\n        tokens = arguments\n      , i = 0\n      , l = tokens.length\n      , token\n      , updated = false\n      , index\n    ;\n    do {\n      token = tokens[i] + \"\";\n      index = checkTokenAndGetIndex(this, token);\n      while (index !== -1) {\n        this.splice(index, 1);\n        updated = true;\n        index = checkTokenAndGetIndex(this, token);\n      }\n    }\n    while (++i < l);\n\n    if (updated) {\n      this._updateClassName();\n    }\n  };\n  classListProto.toggle = function (token, force) {\n    token += \"\";\n\n    var\n        result = this.contains(token)\n      , method = result ?\n        force !== true && \"remove\"\n      :\n        force !== false && \"add\"\n    ;\n\n    if (method) {\n      this[method](token);\n    }\n\n    if (force === true || force === false) {\n      return force;\n    } else {\n      return !result;\n    }\n  };\n  classListProto.toString = function () {\n    return this.join(\" \");\n  };\n\n  if (objCtr.defineProperty) {\n    var classListPropDesc = {\n        get: classListGetter\n      , enumerable: true\n      , configurable: true\n    };\n    try {\n      objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n    } catch (ex) { // IE 8 doesn't support enumerable:true\n      if (ex.number === -0x7FF5EC54) {\n        classListPropDesc.enumerable = false;\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n      }\n    }\n  } else if (objCtr[protoProp].__defineGetter__) {\n    elemCtrProto.__defineGetter__(classListProp, classListGetter);\n  }\n\n  }(self));\n}\n\n/* Blob.js\n * A Blob implementation.\n * 2014-07-24\n *\n * By Eli Grey, http://eligrey.com\n * By Devin Samarin, https://github.com/dsamarin\n * License: X11/MIT\n *   See https://github.com/eligrey/Blob.js/blob/master/LICENSE.md\n */\n\n/*global self, unescape */\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n  plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/Blob.js/blob/master/Blob.js */\n\n(function (view) {\n  \"use strict\";\n\n  view.URL = view.URL || view.webkitURL;\n\n  if (view.Blob && view.URL) {\n    try {\n      new Blob;\n      return;\n    } catch (e) {}\n  }\n\n  // Internally we use a BlobBuilder implementation to base Blob off of\n  // in order to support older browsers that only have BlobBuilder\n  var BlobBuilder = view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || (function(view) {\n    var\n        get_class = function(object) {\n        return Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\n      }\n      , FakeBlobBuilder = function BlobBuilder() {\n        this.data = [];\n      }\n      , FakeBlob = function Blob(data, type, encoding) {\n        this.data = data;\n        this.size = data.length;\n        this.type = type;\n        this.encoding = encoding;\n      }\n      , FBB_proto = FakeBlobBuilder.prototype\n      , FB_proto = FakeBlob.prototype\n      , FileReaderSync = view.FileReaderSync\n      , FileException = function(type) {\n        this.code = this[this.name = type];\n      }\n      , file_ex_codes = (\n          \"NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR \"\n        + \"NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR\"\n      ).split(\" \")\n      , file_ex_code = file_ex_codes.length\n      , real_URL = view.URL || view.webkitURL || view\n      , real_create_object_URL = real_URL.createObjectURL\n      , real_revoke_object_URL = real_URL.revokeObjectURL\n      , URL = real_URL\n      , btoa = view.btoa\n      , atob = view.atob\n\n      , ArrayBuffer = view.ArrayBuffer\n      , Uint8Array = view.Uint8Array\n\n      , origin = /^[\\w-]+:\\/*\\[?[\\w\\.:-]+\\]?(?::[0-9]+)?/\n    ;\n    FakeBlob.fake = FB_proto.fake = true;\n    while (file_ex_code--) {\n      FileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\n    }\n    // Polyfill URL\n    if (!real_URL.createObjectURL) {\n      URL = view.URL = function(uri) {\n        var\n            uri_info = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n          , uri_origin\n        ;\n        uri_info.href = uri;\n        if (!(\"origin\" in uri_info)) {\n          if (uri_info.protocol.toLowerCase() === \"data:\") {\n            uri_info.origin = null;\n          } else {\n            uri_origin = uri.match(origin);\n            uri_info.origin = uri_origin && uri_origin[1];\n          }\n        }\n        return uri_info;\n      };\n    }\n    URL.createObjectURL = function(blob) {\n      var\n          type = blob.type\n        , data_URI_header\n      ;\n      if (type === null) {\n        type = \"application/octet-stream\";\n      }\n      if (blob instanceof FakeBlob) {\n        data_URI_header = \"data:\" + type;\n        if (blob.encoding === \"base64\") {\n          return data_URI_header + \";base64,\" + blob.data;\n        } else if (blob.encoding === \"URI\") {\n          return data_URI_header + \",\" + decodeURIComponent(blob.data);\n        } if (btoa) {\n          return data_URI_header + \";base64,\" + btoa(blob.data);\n        } else {\n          return data_URI_header + \",\" + encodeURIComponent(blob.data);\n        }\n      } else if (real_create_object_URL) {\n        return real_create_object_URL.call(real_URL, blob);\n      }\n    };\n    URL.revokeObjectURL = function(object_URL) {\n      if (object_URL.substring(0, 5) !== \"data:\" && real_revoke_object_URL) {\n        real_revoke_object_URL.call(real_URL, object_URL);\n      }\n    };\n    FBB_proto.append = function(data/*, endings*/) {\n      var bb = this.data;\n      // decode data to a binary string\n      if (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\n        var\n            str = \"\"\n          , buf = new Uint8Array(data)\n          , i = 0\n          , buf_len = buf.length\n        ;\n        for (; i < buf_len; i++) {\n          str += String.fromCharCode(buf[i]);\n        }\n        bb.push(str);\n      } else if (get_class(data) === \"Blob\" || get_class(data) === \"File\") {\n        if (FileReaderSync) {\n          var fr = new FileReaderSync;\n          bb.push(fr.readAsBinaryString(data));\n        } else {\n          // async FileReader won't work as BlobBuilder is sync\n          throw new FileException(\"NOT_READABLE_ERR\");\n        }\n      } else if (data instanceof FakeBlob) {\n        if (data.encoding === \"base64\" && atob) {\n          bb.push(atob(data.data));\n        } else if (data.encoding === \"URI\") {\n          bb.push(decodeURIComponent(data.data));\n        } else if (data.encoding === \"raw\") {\n          bb.push(data.data);\n        }\n      } else {\n        if (typeof data !== \"string\") {\n          data += \"\"; // convert unsupported types to strings\n        }\n        // decode UTF-16 to binary string\n        bb.push(unescape(encodeURIComponent(data)));\n      }\n    };\n    FBB_proto.getBlob = function(type) {\n      if (!arguments.length) {\n        type = null;\n      }\n      return new FakeBlob(this.data.join(\"\"), type, \"raw\");\n    };\n    FBB_proto.toString = function() {\n      return \"[object BlobBuilder]\";\n    };\n    FB_proto.slice = function(start, end, type) {\n      var args = arguments.length;\n      if (args < 3) {\n        type = null;\n      }\n      return new FakeBlob(\n          this.data.slice(start, args > 1 ? end : this.data.length)\n        , type\n        , this.encoding\n      );\n    };\n    FB_proto.toString = function() {\n      return \"[object Blob]\";\n    };\n    FB_proto.close = function() {\n      this.size = 0;\n      delete this.data;\n    };\n    return FakeBlobBuilder;\n  }(view));\n\n  view.Blob = function(blobParts, options) {\n    var type = options ? (options.type || \"\") : \"\";\n    var builder = new BlobBuilder();\n    if (blobParts) {\n      for (var i = 0, len = blobParts.length; i < len; i++) {\n        if (Uint8Array && blobParts[i] instanceof Uint8Array) {\n          builder.append(blobParts[i].buffer);\n        }\n        else {\n          builder.append(blobParts[i]);\n        }\n      }\n    }\n    var blob = builder.getBlob(type);\n    if (!blob.slice && blob.webkitSlice) {\n      blob.slice = blob.webkitSlice;\n    }\n    return blob;\n  };\n\n  var getPrototypeOf = Object.getPrototypeOf || function(object) {\n    return object.__proto__;\n  };\n  view.Blob.prototype = getPrototypeOf(new view.Blob());\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content || this));\n\n(function (root, factory) {\n    'use strict';\n    var isElectron = typeof module === 'object' && typeof process !== 'undefined' && process && process.versions && process.versions.electron;\n    if (!isElectron && typeof module === 'object') {\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return factory;\n        });\n    } else {\n        root.MediumEditor = factory;\n    }\n}(this, function () {\n\n    'use strict';\n\nfunction MediumEditor(elements, options) {\n    'use strict';\n    return this.init(elements, options);\n}\n\nMediumEditor.extensions = {};\n/*jshint unused: true */\n(function (window) {\n    'use strict';\n\n    function copyInto(overwrite, dest) {\n        var prop,\n            sources = Array.prototype.slice.call(arguments, 2);\n        dest = dest || {};\n        for (var i = 0; i < sources.length; i++) {\n            var source = sources[i];\n            if (source) {\n                for (prop in source) {\n                    if (source.hasOwnProperty(prop) &&\n                        typeof source[prop] !== 'undefined' &&\n                        (overwrite || dest.hasOwnProperty(prop) === false)) {\n                        dest[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        return dest;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n    // Some browsers (including phantom) don't return true for Node.contains(child)\n    // if child is a text node.  Detect these cases here and use a fallback\n    // for calls to Util.isDescendant()\n    var nodeContainsWorksWithTextNodes = false;\n    try {\n        var testParent = document.createElement('div'),\n            testText = document.createTextNode(' ');\n        testParent.appendChild(testText);\n        nodeContainsWorksWithTextNodes = testParent.contains(testText);\n    } catch (exc) {}\n\n    var Util = {\n\n        // http://stackoverflow.com/questions/17907445/how-to-detect-ie11#comment30165888_17907562\n        // by rg89\n        isIE: ((navigator.appName === 'Microsoft Internet Explorer') || ((navigator.appName === 'Netscape') && (new RegExp('Trident/.*rv:([0-9]{1,}[.0-9]{0,})').exec(navigator.userAgent) !== null))),\n\n        isEdge: (/Edge\\/\\d+/).exec(navigator.userAgent) !== null,\n\n        // if firefox\n        isFF: (navigator.userAgent.toLowerCase().indexOf('firefox') > -1),\n\n        // http://stackoverflow.com/a/11752084/569101\n        isMac: (window.navigator.platform.toUpperCase().indexOf('MAC') >= 0),\n\n        // https://github.com/jashkenas/underscore\n        // Lonely letter MUST USE the uppercase code\n        keyCode: {\n            BACKSPACE: 8,\n            TAB: 9,\n            ENTER: 13,\n            ESCAPE: 27,\n            SPACE: 32,\n            DELETE: 46,\n            K: 75, // K keycode, and not k\n            M: 77,\n            V: 86\n        },\n\n        /**\n         * Returns true if it's metaKey on Mac, or ctrlKey on non-Mac.\n         * See #591\n         */\n        isMetaCtrlKey: function (event) {\n            if ((Util.isMac && event.metaKey) || (!Util.isMac && event.ctrlKey)) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Returns true if the key associated to the event is inside keys array\n         *\n         * @see : https://github.com/jquery/jquery/blob/0705be475092aede1eddae01319ec931fb9c65fc/src/event.js#L473-L484\n         * @see : http://stackoverflow.com/q/4471582/569101\n         */\n        isKey: function (event, keys) {\n            var keyCode = Util.getKeyCode(event);\n\n            // it's not an array let's just compare strings!\n            if (false === Array.isArray(keys)) {\n                return keyCode === keys;\n            }\n\n            if (-1 === keys.indexOf(keyCode)) {\n                return false;\n            }\n\n            return true;\n        },\n\n        getKeyCode: function (event) {\n            var keyCode = event.which;\n\n            // getting the key code from event\n            if (null === keyCode) {\n                keyCode = event.charCode !== null ? event.charCode : event.keyCode;\n            }\n\n            return keyCode;\n        },\n\n        blockContainerElementNames: [\n            // elements our editor generates\n            'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre', 'ul', 'li', 'ol',\n            // all other known block elements\n            'address', 'article', 'aside', 'audio', 'canvas', 'dd', 'dl', 'dt', 'fieldset',\n            'figcaption', 'figure', 'footer', 'form', 'header', 'hgroup', 'main', 'nav',\n            'noscript', 'output', 'section', 'video',\n            'table', 'thead', 'tbody', 'tfoot', 'tr', 'th', 'td'\n        ],\n\n        emptyElementNames: ['br', 'col', 'colgroup', 'hr', 'img', 'input', 'source', 'wbr'],\n\n        extend: function extend(/* dest, source1, source2, ...*/) {\n            var args = [true].concat(Array.prototype.slice.call(arguments));\n            return copyInto.apply(this, args);\n        },\n\n        defaults: function defaults(/*dest, source1, source2, ...*/) {\n            var args = [false].concat(Array.prototype.slice.call(arguments));\n            return copyInto.apply(this, args);\n        },\n\n        /*\n         * Create a link around the provided text nodes which must be adjacent to each other and all be\n         * descendants of the same closest block container. If the preconditions are not met, unexpected\n         * behavior will result.\n         */\n        createLink: function (document, textNodes, href, target) {\n            var anchor = document.createElement('a');\n            Util.moveTextRangeIntoElement(textNodes[0], textNodes[textNodes.length - 1], anchor);\n            anchor.setAttribute('href', href);\n            if (target) {\n                if (target === '_blank') {\n                    anchor.setAttribute('rel', 'noopener noreferrer');\n                }\n                anchor.setAttribute('target', target);\n            }\n            return anchor;\n        },\n\n        /*\n         * Given the provided match in the format {start: 1, end: 2} where start and end are indices into the\n         * textContent of the provided element argument, modify the DOM inside element to ensure that the text\n         * identified by the provided match can be returned as text nodes that contain exactly that text, without\n         * any additional text at the beginning or end of the returned array of adjacent text nodes.\n         *\n         * The only DOM manipulation performed by this function is splitting the text nodes, non-text nodes are\n         * not affected in any way.\n         */\n        findOrCreateMatchingTextNodes: function (document, element, match) {\n            var treeWalker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, null, false),\n                matchedNodes = [],\n                currentTextIndex = 0,\n                startReached = false,\n                currentNode = null,\n                newNode = null;\n\n            while ((currentNode = treeWalker.nextNode()) !== null) {\n                if (currentNode.nodeType > 3) {\n                    continue;\n                } else if (currentNode.nodeType === 3) {\n                    if (!startReached && match.start < (currentTextIndex + currentNode.nodeValue.length)) {\n                        startReached = true;\n                        newNode = Util.splitStartNodeIfNeeded(currentNode, match.start, currentTextIndex);\n                    }\n                    if (startReached) {\n                        Util.splitEndNodeIfNeeded(currentNode, newNode, match.end, currentTextIndex);\n                    }\n                    if (startReached && currentTextIndex === match.end) {\n                        break; // Found the node(s) corresponding to the link. Break out and move on to the next.\n                    } else if (startReached && currentTextIndex > (match.end + 1)) {\n                        throw new Error('PerformLinking overshot the target!'); // should never happen...\n                    }\n\n                    if (startReached) {\n                        matchedNodes.push(newNode || currentNode);\n                    }\n\n                    currentTextIndex += currentNode.nodeValue.length;\n                    if (newNode !== null) {\n                        currentTextIndex += newNode.nodeValue.length;\n                        // Skip the newNode as we'll already have pushed it to the matches\n                        treeWalker.nextNode();\n                    }\n                    newNode = null;\n                } else if (currentNode.tagName.toLowerCase() === 'img') {\n                    if (!startReached && (match.start <= currentTextIndex)) {\n                        startReached = true;\n                    }\n                    if (startReached) {\n                        matchedNodes.push(currentNode);\n                    }\n                }\n            }\n            return matchedNodes;\n        },\n\n        /*\n         * Given the provided text node and text coordinates, split the text node if needed to make it align\n         * precisely with the coordinates.\n         *\n         * This function is intended to be called from Util.findOrCreateMatchingTextNodes.\n         */\n        splitStartNodeIfNeeded: function (currentNode, matchStartIndex, currentTextIndex) {\n            if (matchStartIndex !== currentTextIndex) {\n                return currentNode.splitText(matchStartIndex - currentTextIndex);\n            }\n            return null;\n        },\n\n        /*\n         * Given the provided text node and text coordinates, split the text node if needed to make it align\n         * precisely with the coordinates. The newNode argument should from the result of Util.splitStartNodeIfNeeded,\n         * if that function has been called on the same currentNode.\n         *\n         * This function is intended to be called from Util.findOrCreateMatchingTextNodes.\n         */\n        splitEndNodeIfNeeded: function (currentNode, newNode, matchEndIndex, currentTextIndex) {\n            var textIndexOfEndOfFarthestNode,\n                endSplitPoint;\n            textIndexOfEndOfFarthestNode = currentTextIndex + currentNode.nodeValue.length +\n                    (newNode ? newNode.nodeValue.length : 0) - 1;\n            endSplitPoint = matchEndIndex - currentTextIndex -\n                    (newNode ? currentNode.nodeValue.length : 0);\n            if (textIndexOfEndOfFarthestNode >= matchEndIndex &&\n                    currentTextIndex !== textIndexOfEndOfFarthestNode &&\n                    endSplitPoint !== 0) {\n                (newNode || currentNode).splitText(endSplitPoint);\n            }\n        },\n\n        /*\n        * Take an element, and break up all of its text content into unique pieces such that:\n         * 1) All text content of the elements are in separate blocks. No piece of text content should span\n         *    across multiple blocks. This means no element return by this function should have\n         *    any blocks as children.\n         * 2) The union of the textcontent of all of the elements returned here covers all\n         *    of the text within the element.\n         *\n         *\n         * EXAMPLE:\n         * In the event that we have something like:\n         *\n         * <blockquote>\n         *   <p>Some Text</p>\n         *   <ol>\n         *     <li>List Item 1</li>\n         *     <li>List Item 2</li>\n         *   </ol>\n         * </blockquote>\n         *\n         * This function would return these elements as an array:\n         *   [ <p>Some Text</p>, <li>List Item 1</li>, <li>List Item 2</li> ]\n         *\n         * Since the <blockquote> and <ol> elements contain blocks within them they are not returned.\n         * Since the <p> and <li>'s don't contain block elements and cover all the text content of the\n         * <blockquote> container, they are the elements returned.\n         */\n        splitByBlockElements: function (element) {\n            if (element.nodeType !== 3 && element.nodeType !== 1) {\n                return [];\n            }\n\n            var toRet = [],\n                blockElementQuery = MediumEditor.util.blockContainerElementNames.join(',');\n\n            if (element.nodeType === 3 || element.querySelectorAll(blockElementQuery).length === 0) {\n                return [element];\n            }\n\n            for (var i = 0; i < element.childNodes.length; i++) {\n                var child = element.childNodes[i];\n                if (child.nodeType === 3) {\n                    toRet.push(child);\n                } else if (child.nodeType === 1) {\n                    var blockElements = child.querySelectorAll(blockElementQuery);\n                    if (blockElements.length === 0) {\n                        toRet.push(child);\n                    } else {\n                        toRet = toRet.concat(MediumEditor.util.splitByBlockElements(child));\n                    }\n                }\n            }\n\n            return toRet;\n        },\n\n        // Find the next node in the DOM tree that represents any text that is being\n        // displayed directly next to the targetNode (passed as an argument)\n        // Text that appears directly next to the current node can be:\n        //  - A sibling text node\n        //  - A descendant of a sibling element\n        //  - A sibling text node of an ancestor\n        //  - A descendant of a sibling element of an ancestor\n        findAdjacentTextNodeWithContent: function findAdjacentTextNodeWithContent(rootNode, targetNode, ownerDocument) {\n            var pastTarget = false,\n                nextNode,\n                nodeIterator = ownerDocument.createNodeIterator(rootNode, NodeFilter.SHOW_TEXT, null, false);\n\n            // Use a native NodeIterator to iterate over all the text nodes that are descendants\n            // of the rootNode.  Once past the targetNode, choose the first non-empty text node\n            nextNode = nodeIterator.nextNode();\n            while (nextNode) {\n                if (nextNode === targetNode) {\n                    pastTarget = true;\n                } else if (pastTarget) {\n                    if (nextNode.nodeType === 3 && nextNode.nodeValue && nextNode.nodeValue.trim().length > 0) {\n                        break;\n                    }\n                }\n                nextNode = nodeIterator.nextNode();\n            }\n\n            return nextNode;\n        },\n\n        // Find an element's previous sibling within a medium-editor element\n        // If one doesn't exist, find the closest ancestor's previous sibling\n        findPreviousSibling: function (node) {\n            if (!node || Util.isMediumEditorElement(node)) {\n                return false;\n            }\n\n            var previousSibling = node.previousSibling;\n            while (!previousSibling && !Util.isMediumEditorElement(node.parentNode)) {\n                node = node.parentNode;\n                previousSibling = node.previousSibling;\n            }\n\n            return previousSibling;\n        },\n\n        isDescendant: function isDescendant(parent, child, checkEquality) {\n            if (!parent || !child) {\n                return false;\n            }\n            if (parent === child) {\n                return !!checkEquality;\n            }\n            // If parent is not an element, it can't have any descendants\n            if (parent.nodeType !== 1) {\n                return false;\n            }\n            if (nodeContainsWorksWithTextNodes || child.nodeType !== 3) {\n                return parent.contains(child);\n            }\n            var node = child.parentNode;\n            while (node !== null) {\n                if (node === parent) {\n                    return true;\n                }\n                node = node.parentNode;\n            }\n            return false;\n        },\n\n        // https://github.com/jashkenas/underscore\n        isElement: function isElement(obj) {\n            return !!(obj && obj.nodeType === 1);\n        },\n\n        // https://github.com/jashkenas/underscore\n        throttle: function (func, wait) {\n            var THROTTLE_INTERVAL = 50,\n                context,\n                args,\n                result,\n                timeout = null,\n                previous = 0,\n                later = function () {\n                    previous = Date.now();\n                    timeout = null;\n                    result = func.apply(context, args);\n                    if (!timeout) {\n                        context = args = null;\n                    }\n                };\n\n            if (!wait && wait !== 0) {\n                wait = THROTTLE_INTERVAL;\n            }\n\n            return function () {\n                var now = Date.now(),\n                    remaining = wait - (now - previous);\n\n                context = this;\n                args = arguments;\n                if (remaining <= 0 || remaining > wait) {\n                    if (timeout) {\n                        clearTimeout(timeout);\n                        timeout = null;\n                    }\n                    previous = now;\n                    result = func.apply(context, args);\n                    if (!timeout) {\n                        context = args = null;\n                    }\n                } else if (!timeout) {\n                    timeout = setTimeout(later, remaining);\n                }\n                return result;\n            };\n        },\n\n        traverseUp: function (current, testElementFunction) {\n            if (!current) {\n                return false;\n            }\n\n            do {\n                if (current.nodeType === 1) {\n                    if (testElementFunction(current)) {\n                        return current;\n                    }\n                    // do not traverse upwards past the nearest containing editor\n                    if (Util.isMediumEditorElement(current)) {\n                        return false;\n                    }\n                }\n\n                current = current.parentNode;\n            } while (current);\n\n            return false;\n        },\n\n        htmlEntities: function (str) {\n            // converts special characters (like <) into their escaped/encoded values (like &lt;).\n            // This allows you to show to display the string without the browser reading it as HTML.\n            return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n        },\n\n        // http://stackoverflow.com/questions/6690752/insert-html-at-caret-in-a-contenteditable-div\n        insertHTMLCommand: function (doc, html) {\n            var selection, range, el, fragment, node, lastNode, toReplace,\n                res = false,\n                ecArgs = ['insertHTML', false, html];\n\n            /* Edge's implementation of insertHTML is just buggy right now:\n             * - Doesn't allow leading white space at the beginning of an element\n             * - Found a case when a <font size=\"2\"> tag was inserted when calling alignCenter inside a blockquote\n             *\n             * There are likely other bugs, these are just the ones we found so far.\n             * For now, let's just use the same fallback we did for IE\n             */\n            if (!MediumEditor.util.isEdge && doc.queryCommandSupported('insertHTML')) {\n                try {\n                    return doc.execCommand.apply(doc, ecArgs);\n                } catch (ignore) {}\n            }\n\n            selection = doc.getSelection();\n            if (selection.rangeCount) {\n                range = selection.getRangeAt(0);\n                toReplace = range.commonAncestorContainer;\n\n                // https://github.com/yabwe/medium-editor/issues/748\n                // If the selection is an empty editor element, create a temporary text node inside of the editor\n                // and select it so that we don't delete the editor element\n                if (Util.isMediumEditorElement(toReplace) && !toReplace.firstChild) {\n                    range.selectNode(toReplace.appendChild(doc.createTextNode('')));\n                } else if ((toReplace.nodeType === 3 && range.startOffset === 0 && range.endOffset === toReplace.nodeValue.length) ||\n                        (toReplace.nodeType !== 3 && toReplace.innerHTML === range.toString())) {\n                    // Ensure range covers maximum amount of nodes as possible\n                    // By moving up the DOM and selecting ancestors whose only child is the range\n                    while (!Util.isMediumEditorElement(toReplace) &&\n                            toReplace.parentNode &&\n                            toReplace.parentNode.childNodes.length === 1 &&\n                            !Util.isMediumEditorElement(toReplace.parentNode)) {\n                        toReplace = toReplace.parentNode;\n                    }\n                    range.selectNode(toReplace);\n                }\n                range.deleteContents();\n\n                el = doc.createElement('div');\n                el.innerHTML = html;\n                fragment = doc.createDocumentFragment();\n                while (el.firstChild) {\n                    node = el.firstChild;\n                    lastNode = fragment.appendChild(node);\n                }\n                range.insertNode(fragment);\n\n                // Preserve the selection:\n                if (lastNode) {\n                    range = range.cloneRange();\n                    range.setStartAfter(lastNode);\n                    range.collapse(true);\n                    MediumEditor.selection.selectRange(doc, range);\n                }\n                res = true;\n            }\n\n            // https://github.com/yabwe/medium-editor/issues/992\n            // If we're monitoring calls to execCommand, notify listeners as if a real call had happened\n            if (doc.execCommand.callListeners) {\n                doc.execCommand.callListeners(ecArgs, res);\n            }\n            return res;\n        },\n\n        execFormatBlock: function (doc, tagName) {\n            // Get the top level block element that contains the selection\n            var blockContainer = Util.getTopBlockContainer(MediumEditor.selection.getSelectionStart(doc)),\n                childNodes;\n\n            // Special handling for blockquote\n            if (tagName === 'blockquote') {\n                if (blockContainer) {\n                    childNodes = Array.prototype.slice.call(blockContainer.childNodes);\n                    // Check if the blockquote has a block element as a child (nested blocks)\n                    if (childNodes.some(function (childNode) {\n                        return Util.isBlockContainer(childNode);\n                    })) {\n                        // FF handles blockquote differently on formatBlock\n                        // allowing nesting, we need to use outdent\n                        // https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla\n                        return doc.execCommand('outdent', false, null);\n                    }\n                }\n\n                // When IE blockquote needs to be called as indent\n                // http://stackoverflow.com/questions/1816223/rich-text-editor-with-blockquote-function/1821777#1821777\n                if (Util.isIE) {\n                    return doc.execCommand('indent', false, tagName);\n                }\n            }\n\n            // If the blockContainer is already the element type being passed in\n            // treat it as 'undo' formatting and just convert it to a <p>\n            if (blockContainer && tagName === blockContainer.nodeName.toLowerCase()) {\n                tagName = 'p';\n            }\n\n            // When IE we need to add <> to heading elements\n            // http://stackoverflow.com/questions/10741831/execcommand-formatblock-headings-in-ie\n            if (Util.isIE) {\n                tagName = '<' + tagName + '>';\n            }\n\n            // When FF, IE and Edge, we have to handle blockquote node seperately as 'formatblock' does not work.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand#Commands\n            if (blockContainer && blockContainer.nodeName.toLowerCase() === 'blockquote') {\n                // For IE, just use outdent\n                if (Util.isIE && tagName === '<p>') {\n                    return doc.execCommand('outdent', false, tagName);\n                }\n\n                // For Firefox and Edge, make sure there's a nested block element before calling outdent\n                if ((Util.isFF || Util.isEdge) && tagName === 'p') {\n                    childNodes = Array.prototype.slice.call(blockContainer.childNodes);\n                    // If there are some non-block elements we need to wrap everything in a <p> before we outdent\n                    if (childNodes.some(function (childNode) {\n                        return !Util.isBlockContainer(childNode);\n                    })) {\n                        doc.execCommand('formatBlock', false, tagName);\n                    }\n                    return doc.execCommand('outdent', false, tagName);\n                }\n            }\n\n            return doc.execCommand('formatBlock', false, tagName);\n        },\n\n        /**\n         * Set target to blank on the given el element\n         *\n         * TODO: not sure if this should be here\n         *\n         * When creating a link (using core -> createLink) the selection returned by Firefox will be the parent of the created link\n         * instead of the created link itself (as it is for Chrome for example), so we retrieve all \"a\" children to grab the good one by\n         * using `anchorUrl` to ensure that we are adding target=\"_blank\" on the good one.\n         * This isn't a bulletproof solution anyway ..\n         */\n        setTargetBlank: function (el, anchorUrl) {\n            var i, url = anchorUrl || false;\n            if (el.nodeName.toLowerCase() === 'a') {\n                el.target = '_blank';\n                el.rel = 'noopener noreferrer';\n            } else {\n                el = el.getElementsByTagName('a');\n\n                for (i = 0; i < el.length; i += 1) {\n                    if (false === url || url === el[i].attributes.href.value) {\n                        el[i].target = '_blank';\n                        el[i].rel = 'noopener noreferrer';\n                    }\n                }\n            }\n        },\n\n        /*\n         * this function is called to explicitly remove the target='_blank' as FF holds on to _blank value even\n         * after unchecking the checkbox on anchor form\n         */\n        removeTargetBlank: function (el, anchorUrl) {\n            var i;\n            if (el.nodeName.toLowerCase() === 'a') {\n                el.removeAttribute('target');\n                el.removeAttribute('rel');\n            } else {\n                el = el.getElementsByTagName('a');\n\n                for (i = 0; i < el.length; i += 1) {\n                    if (anchorUrl === el[i].attributes.href.value) {\n                        el[i].removeAttribute('target');\n                        el[i].removeAttribute('rel');\n                    }\n                }\n            }\n        },\n\n        /*\n         * this function adds one or several classes on an a element.\n         * if el parameter is not an a, it will look for a children of el.\n         * if no a children are found, it will look for the a parent.\n         */\n        addClassToAnchors: function (el, buttonClass) {\n            var classes = buttonClass.split(' '),\n                i,\n                j;\n            if (el.nodeName.toLowerCase() === 'a') {\n                for (j = 0; j < classes.length; j += 1) {\n                    el.classList.add(classes[j]);\n                }\n            } else {\n                var aChildren = el.getElementsByTagName('a');\n                if (aChildren.length === 0) {\n                    var parentAnchor = Util.getClosestTag(el, 'a');\n                    el = parentAnchor ? [parentAnchor] : [];\n                } else {\n                    el = aChildren;\n                }\n                for (i = 0; i < el.length; i += 1) {\n                    for (j = 0; j < classes.length; j += 1) {\n                        el[i].classList.add(classes[j]);\n                    }\n                }\n            }\n        },\n\n        isListItem: function (node) {\n            if (!node) {\n                return false;\n            }\n            if (node.nodeName.toLowerCase() === 'li') {\n                return true;\n            }\n\n            var parentNode = node.parentNode,\n                tagName = parentNode.nodeName.toLowerCase();\n            while (tagName === 'li' || (!Util.isBlockContainer(parentNode) && tagName !== 'div')) {\n                if (tagName === 'li') {\n                    return true;\n                }\n                parentNode = parentNode.parentNode;\n                if (parentNode) {\n                    tagName = parentNode.nodeName.toLowerCase();\n                } else {\n                    return false;\n                }\n            }\n            return false;\n        },\n\n        cleanListDOM: function (ownerDocument, element) {\n            if (element.nodeName.toLowerCase() !== 'li') {\n                return;\n            }\n\n            var list = element.parentElement;\n\n            if (list.parentElement.nodeName.toLowerCase() === 'p') { // yes we need to clean up\n                Util.unwrap(list.parentElement, ownerDocument);\n\n                // move cursor at the end of the text inside the list\n                // for some unknown reason, the cursor is moved to end of the \"visual\" line\n                MediumEditor.selection.moveCursor(ownerDocument, element.firstChild, element.firstChild.textContent.length);\n            }\n        },\n\n        /* splitDOMTree\n         *\n         * Given a root element some descendant element, split the root element\n         * into its own element containing the descendant element and all elements\n         * on the left or right side of the descendant ('right' is default)\n         *\n         * example:\n         *\n         *         <div>\n         *      /    |   \\\n         *  <span> <span> <span>\n         *   / \\    / \\    / \\\n         *  1   2  3   4  5   6\n         *\n         *  If I wanted to split this tree given the <div> as the root and \"4\" as the leaf\n         *  the result would be (the prime ' marks indicates nodes that are created as clones):\n         *\n         *   SPLITTING OFF 'RIGHT' TREE       SPLITTING OFF 'LEFT' TREE\n         *\n         *     <div>            <div>'              <div>'      <div>\n         *      / \\              / \\                 / \\          |\n         * <span> <span>   <span>' <span>       <span> <span>   <span>\n         *   / \\    |        |      / \\           /\\     /\\       /\\\n         *  1   2   3        4     5   6         1  2   3  4     5  6\n         *\n         *  The above example represents splitting off the 'right' or 'left' part of a tree, where\n         *  the <div>' would be returned as an element not appended to the DOM, and the <div>\n         *  would remain in place where it was\n         *\n        */\n        splitOffDOMTree: function (rootNode, leafNode, splitLeft) {\n            var splitOnNode = leafNode,\n                createdNode = null,\n                splitRight = !splitLeft;\n\n            // loop until we hit the root\n            while (splitOnNode !== rootNode) {\n                var currParent = splitOnNode.parentNode,\n                    newParent = currParent.cloneNode(false),\n                    targetNode = (splitRight ? splitOnNode : currParent.firstChild),\n                    appendLast;\n\n                // Create a new parent element which is a clone of the current parent\n                if (createdNode) {\n                    if (splitRight) {\n                        // If we're splitting right, add previous created element before siblings\n                        newParent.appendChild(createdNode);\n                    } else {\n                        // If we're splitting left, add previous created element last\n                        appendLast = createdNode;\n                    }\n                }\n                createdNode = newParent;\n\n                while (targetNode) {\n                    var sibling = targetNode.nextSibling;\n                    // Special handling for the 'splitNode'\n                    if (targetNode === splitOnNode) {\n                        if (!targetNode.hasChildNodes()) {\n                            targetNode.parentNode.removeChild(targetNode);\n                        } else {\n                            // For the node we're splitting on, if it has children, we need to clone it\n                            // and not just move it\n                            targetNode = targetNode.cloneNode(false);\n                        }\n                        // If the resulting split node has content, add it\n                        if (targetNode.textContent) {\n                            createdNode.appendChild(targetNode);\n                        }\n\n                        targetNode = (splitRight ? sibling : null);\n                    } else {\n                        // For general case, just remove the element and only\n                        // add it to the split tree if it contains something\n                        targetNode.parentNode.removeChild(targetNode);\n                        if (targetNode.hasChildNodes() || targetNode.textContent) {\n                            createdNode.appendChild(targetNode);\n                        }\n\n                        targetNode = sibling;\n                    }\n                }\n\n                // If we had an element we wanted to append at the end, do that now\n                if (appendLast) {\n                    createdNode.appendChild(appendLast);\n                }\n\n                splitOnNode = currParent;\n            }\n\n            return createdNode;\n        },\n\n        moveTextRangeIntoElement: function (startNode, endNode, newElement) {\n            if (!startNode || !endNode) {\n                return false;\n            }\n\n            var rootNode = Util.findCommonRoot(startNode, endNode);\n            if (!rootNode) {\n                return false;\n            }\n\n            if (endNode === startNode) {\n                var temp = startNode.parentNode,\n                    sibling = startNode.nextSibling;\n                temp.removeChild(startNode);\n                newElement.appendChild(startNode);\n                if (sibling) {\n                    temp.insertBefore(newElement, sibling);\n                } else {\n                    temp.appendChild(newElement);\n                }\n                return newElement.hasChildNodes();\n            }\n\n            // create rootChildren array which includes all the children\n            // we care about\n            var rootChildren = [],\n                firstChild,\n                lastChild,\n                nextNode;\n            for (var i = 0; i < rootNode.childNodes.length; i++) {\n                nextNode = rootNode.childNodes[i];\n                if (!firstChild) {\n                    if (Util.isDescendant(nextNode, startNode, true)) {\n                        firstChild = nextNode;\n                    }\n                } else {\n                    if (Util.isDescendant(nextNode, endNode, true)) {\n                        lastChild = nextNode;\n                        break;\n                    } else {\n                        rootChildren.push(nextNode);\n                    }\n                }\n            }\n\n            var afterLast = lastChild.nextSibling,\n                fragment = rootNode.ownerDocument.createDocumentFragment();\n\n            // build up fragment on startNode side of tree\n            if (firstChild === startNode) {\n                firstChild.parentNode.removeChild(firstChild);\n                fragment.appendChild(firstChild);\n            } else {\n                fragment.appendChild(Util.splitOffDOMTree(firstChild, startNode));\n            }\n\n            // add any elements between firstChild & lastChild\n            rootChildren.forEach(function (element) {\n                element.parentNode.removeChild(element);\n                fragment.appendChild(element);\n            });\n\n            // build up fragment on endNode side of the tree\n            if (lastChild === endNode) {\n                lastChild.parentNode.removeChild(lastChild);\n                fragment.appendChild(lastChild);\n            } else {\n                fragment.appendChild(Util.splitOffDOMTree(lastChild, endNode, true));\n            }\n\n            // Add fragment into passed in element\n            newElement.appendChild(fragment);\n\n            if (lastChild.parentNode === rootNode) {\n                // If last child is in the root, insert newElement in front of it\n                rootNode.insertBefore(newElement, lastChild);\n            } else if (afterLast) {\n                // If last child was removed, but it had a sibling, insert in front of it\n                rootNode.insertBefore(newElement, afterLast);\n            } else {\n                // lastChild was removed and was the last actual element just append\n                rootNode.appendChild(newElement);\n            }\n\n            return newElement.hasChildNodes();\n        },\n\n        /* based on http://stackoverflow.com/a/6183069 */\n        depthOfNode: function (inNode) {\n            var theDepth = 0,\n                node = inNode;\n            while (node.parentNode !== null) {\n                node = node.parentNode;\n                theDepth++;\n            }\n            return theDepth;\n        },\n\n        findCommonRoot: function (inNode1, inNode2) {\n            var depth1 = Util.depthOfNode(inNode1),\n                depth2 = Util.depthOfNode(inNode2),\n                node1 = inNode1,\n                node2 = inNode2;\n\n            while (depth1 !== depth2) {\n                if (depth1 > depth2) {\n                    node1 = node1.parentNode;\n                    depth1 -= 1;\n                } else {\n                    node2 = node2.parentNode;\n                    depth2 -= 1;\n                }\n            }\n\n            while (node1 !== node2) {\n                node1 = node1.parentNode;\n                node2 = node2.parentNode;\n            }\n\n            return node1;\n        },\n        /* END - based on http://stackoverflow.com/a/6183069 */\n\n        isElementAtBeginningOfBlock: function (node) {\n            var textVal,\n                sibling;\n            while (!Util.isBlockContainer(node) && !Util.isMediumEditorElement(node)) {\n                sibling = node;\n                while (sibling = sibling.previousSibling) {\n                    textVal = sibling.nodeType === 3 ? sibling.nodeValue : sibling.textContent;\n                    if (textVal.length > 0) {\n                        return false;\n                    }\n                }\n                node = node.parentNode;\n            }\n            return true;\n        },\n\n        isMediumEditorElement: function (element) {\n            return element && element.getAttribute && !!element.getAttribute('data-medium-editor-element');\n        },\n\n        getContainerEditorElement: function (element) {\n            return Util.traverseUp(element, function (node) {\n                return Util.isMediumEditorElement(node);\n            });\n        },\n\n        isBlockContainer: function (element) {\n            return element && element.nodeType !== 3 && Util.blockContainerElementNames.indexOf(element.nodeName.toLowerCase()) !== -1;\n        },\n\n        /* Finds the closest ancestor which is a block container element\n         * If element is within editor element but not within any other block element,\n         * the editor element is returned\n         */\n        getClosestBlockContainer: function (node) {\n            return Util.traverseUp(node, function (node) {\n                return Util.isBlockContainer(node) || Util.isMediumEditorElement(node);\n            });\n        },\n\n        /* Finds highest level ancestor element which is a block container element\n         * If element is within editor element but not within any other block element,\n         * the editor element is returned\n         */\n        getTopBlockContainer: function (element) {\n            var topBlock = Util.isBlockContainer(element) ? element : false;\n            Util.traverseUp(element, function (el) {\n                if (Util.isBlockContainer(el)) {\n                    topBlock = el;\n                }\n                if (!topBlock && Util.isMediumEditorElement(el)) {\n                    topBlock = el;\n                    return true;\n                }\n                return false;\n            });\n            return topBlock;\n        },\n\n        getFirstSelectableLeafNode: function (element) {\n            while (element && element.firstChild) {\n                element = element.firstChild;\n            }\n\n            // We don't want to set the selection to an element that can't have children, this messes up Gecko.\n            element = Util.traverseUp(element, function (el) {\n                return Util.emptyElementNames.indexOf(el.nodeName.toLowerCase()) === -1;\n            });\n            // Selecting at the beginning of a table doesn't work in PhantomJS.\n            if (element.nodeName.toLowerCase() === 'table') {\n                var firstCell = element.querySelector('th, td');\n                if (firstCell) {\n                    element = firstCell;\n                }\n            }\n            return element;\n        },\n\n        // TODO: remove getFirstTextNode AND _getFirstTextNode when jumping in 6.0.0 (no code references)\n        getFirstTextNode: function (element) {\n            Util.warn('getFirstTextNode is deprecated and will be removed in version 6.0.0');\n            return Util._getFirstTextNode(element);\n        },\n\n        _getFirstTextNode: function (element) {\n            if (element.nodeType === 3) {\n                return element;\n            }\n\n            for (var i = 0; i < element.childNodes.length; i++) {\n                var textNode = Util._getFirstTextNode(element.childNodes[i]);\n                if (textNode !== null) {\n                    return textNode;\n                }\n            }\n            return null;\n        },\n\n        ensureUrlHasProtocol: function (url) {\n            if (url.indexOf('://') === -1) {\n                return 'http://' + url;\n            }\n            return url;\n        },\n\n        warn: function () {\n            if (window.console !== undefined && typeof window.console.warn === 'function') {\n                window.console.warn.apply(window.console, arguments);\n            }\n        },\n\n        deprecated: function (oldName, newName, version) {\n            // simple deprecation warning mechanism.\n            var m = oldName + ' is deprecated, please use ' + newName + ' instead.';\n            if (version) {\n                m += ' Will be removed in ' + version;\n            }\n            Util.warn(m);\n        },\n\n        deprecatedMethod: function (oldName, newName, args, version) {\n            // run the replacement and warn when someone calls a deprecated method\n            Util.deprecated(oldName, newName, version);\n            if (typeof this[newName] === 'function') {\n                this[newName].apply(this, args);\n            }\n        },\n\n        cleanupAttrs: function (el, attrs) {\n            attrs.forEach(function (attr) {\n                el.removeAttribute(attr);\n            });\n        },\n\n        cleanupTags: function (el, tags) {\n            if (tags.indexOf(el.nodeName.toLowerCase()) !== -1) {\n                el.parentNode.removeChild(el);\n            }\n        },\n\n        unwrapTags: function (el, tags) {\n            if (tags.indexOf(el.nodeName.toLowerCase()) !== -1) {\n                MediumEditor.util.unwrap(el, document);\n            }\n        },\n\n        // get the closest parent\n        getClosestTag: function (el, tag) {\n            return Util.traverseUp(el, function (element) {\n                return element.nodeName.toLowerCase() === tag.toLowerCase();\n            });\n        },\n\n        unwrap: function (el, doc) {\n            var fragment = doc.createDocumentFragment(),\n                nodes = Array.prototype.slice.call(el.childNodes);\n\n            // cast nodeList to array since appending child\n            // to a different node will alter length of el.childNodes\n            for (var i = 0; i < nodes.length; i++) {\n                fragment.appendChild(nodes[i]);\n            }\n\n            if (fragment.childNodes.length) {\n                el.parentNode.replaceChild(fragment, el);\n            } else {\n                el.parentNode.removeChild(el);\n            }\n        },\n\n        guid: function () {\n            function _s4() {\n                return Math\n                    .floor((1 + Math.random()) * 0x10000)\n                    .toString(16)\n                    .substring(1);\n            }\n\n            return _s4() + _s4() + '-' + _s4() + '-' + _s4() + '-' + _s4() + '-' + _s4() + _s4() + _s4();\n        }\n    };\n\n    MediumEditor.util = Util;\n}(window));\n\n(function () {\n    'use strict';\n\n    var Extension = function (options) {\n        MediumEditor.util.extend(this, options);\n    };\n\n    Extension.extend = function (protoProps) {\n        // magic extender thinger. mostly borrowed from backbone/goog.inherits\n        // place this function on some thing you want extend-able.\n        //\n        // example:\n        //\n        //      function Thing(args){\n        //          this.options = args;\n        //      }\n        //\n        //      Thing.prototype = { foo: \"bar\" };\n        //      Thing.extend = extenderify;\n        //\n        //      var ThingTwo = Thing.extend({ foo: \"baz\" });\n        //\n        //      var thingOne = new Thing(); // foo === \"bar\"\n        //      var thingTwo = new ThingTwo(); // foo === \"baz\"\n        //\n        //      which seems like some simply shallow copy nonsense\n        //      at first, but a lot more is going on there.\n        //\n        //      passing a `constructor` to the extend props\n        //      will cause the instance to instantiate through that\n        //      instead of the parent's constructor.\n\n        var parent = this,\n            child;\n\n        // The constructor function for the new subclass is either defined by you\n        // (the \"constructor\" property in your `extend` definition), or defaulted\n        // by us to simply call the parent's constructor.\n\n        if (protoProps && protoProps.hasOwnProperty('constructor')) {\n            child = protoProps.constructor;\n        } else {\n            child = function () {\n                return parent.apply(this, arguments);\n            };\n        }\n\n        // das statics (.extend comes over, so your subclass can have subclasses too)\n        MediumEditor.util.extend(child, parent);\n\n        // Set the prototype chain to inherit from `parent`, without calling\n        // `parent`'s constructor function.\n        var Surrogate = function () {\n            this.constructor = child;\n        };\n        Surrogate.prototype = parent.prototype;\n        child.prototype = new Surrogate();\n\n        if (protoProps) {\n            MediumEditor.util.extend(child.prototype, protoProps);\n        }\n\n        // todo: $super?\n\n        return child;\n    };\n\n    Extension.prototype = {\n        /* init: [function]\n         *\n         * Called by MediumEditor during initialization.\n         * The .base property will already have been set to\n         * current instance of MediumEditor when this is called.\n         * All helper methods will exist as well\n         */\n        init: function () {},\n\n        /* base: [MediumEditor instance]\n         *\n         * If not overriden, this will be set to the current instance\n         * of MediumEditor, before the init method is called\n         */\n        base: undefined,\n\n        /* name: [string]\n         *\n         * 'name' of the extension, used for retrieving the extension.\n         * If not set, MediumEditor will set this to be the key\n         * used when passing the extension into MediumEditor via the\n         * 'extensions' option\n         */\n        name: undefined,\n\n        /* checkState: [function (node)]\n         *\n         * If implemented, this function will be called one or more times\n         * the state of the editor & toolbar are updated.\n         * When the state is updated, the editor does the following:\n         *\n         * 1) Find the parent node containing the current selection\n         * 2) Call checkState on the extension, passing the node as an argument\n         * 3) Get the parent node of the previous node\n         * 4) Repeat steps #2 and #3 until we move outside the parent contenteditable\n         */\n        checkState: undefined,\n\n        /* destroy: [function ()]\n         *\n         * This method should remove any created html, custom event handlers\n         * or any other cleanup tasks that should be performed.\n         * If implemented, this function will be called when MediumEditor's\n         * destroy method has been called.\n         */\n        destroy: undefined,\n\n        /* As alternatives to checkState, these functions provide a more structured\n         * path to updating the state of an extension (usually a button) whenever\n         * the state of the editor & toolbar are updated.\n         */\n\n        /* queryCommandState: [function ()]\n         *\n         * If implemented, this function will be called once on each extension\n         * when the state of the editor/toolbar is being updated.\n         *\n         * If this function returns a non-null value, the extension will\n         * be ignored as the code climbs the dom tree.\n         *\n         * If this function returns true, and the setActive() function is defined\n         * setActive() will be called\n         */\n        queryCommandState: undefined,\n\n        /* isActive: [function ()]\n         *\n         * If implemented, this function will be called when MediumEditor\n         * has determined that this extension is 'active' for the current selection.\n         * This may be called when the editor & toolbar are being updated,\n         * but only if queryCommandState() or isAlreadyApplied() functions\n         * are implemented, and when called, return true.\n         */\n        isActive: undefined,\n\n        /* isAlreadyApplied: [function (node)]\n         *\n         * If implemented, this function is similar to checkState() in\n         * that it will be called repeatedly as MediumEditor moves up\n         * the DOM to update the editor & toolbar after a state change.\n         *\n         * NOTE: This function will NOT be called if checkState() has\n         * been implemented. This function will NOT be called if\n         * queryCommandState() is implemented and returns a non-null\n         * value when called\n         */\n        isAlreadyApplied: undefined,\n\n        /* setActive: [function ()]\n         *\n         * If implemented, this function is called when MediumEditor knows\n         * that this extension is currently enabled.  Currently, this\n         * function is called when updating the editor & toolbar, and\n         * only if queryCommandState() or isAlreadyApplied(node) return\n         * true when called\n         */\n        setActive: undefined,\n\n        /* setInactive: [function ()]\n         *\n         * If implemented, this function is called when MediumEditor knows\n         * that this extension is currently disabled.  Curently, this\n         * is called at the beginning of each state change for\n         * the editor & toolbar. After calling this, MediumEditor\n         * will attempt to update the extension, either via checkState()\n         * or the combination of queryCommandState(), isAlreadyApplied(node),\n         * isActive(), and setActive()\n         */\n        setInactive: undefined,\n\n        /* getInteractionElements: [function ()]\n         *\n         * If the extension renders any elements that the user can interact with,\n         * this method should be implemented and return the root element or an array\n         * containing all of the root elements. MediumEditor will call this function\n         * during interaction to see if the user clicked on something outside of the editor.\n         * The elements are used to check if the target element of a click or\n         * other user event is a descendant of any extension elements.\n         * This way, the editor can also count user interaction within editor elements as\n         * interactions with the editor, and thus not trigger 'blur'\n         */\n        getInteractionElements: undefined,\n\n        /************************ Helpers ************************\n         * The following are helpers that are either set by MediumEditor\n         * during initialization, or are helper methods which either\n         * route calls to the MediumEditor instance or provide common\n         * functionality for all extensions\n         *********************************************************/\n\n        /* window: [Window]\n         *\n         * If not overriden, this will be set to the window object\n         * to be used by MediumEditor and its extensions.  This is\n         * passed via the 'contentWindow' option to MediumEditor\n         * and is the global 'window' object by default\n         */\n        'window': undefined,\n\n        /* document: [Document]\n         *\n         * If not overriden, this will be set to the document object\n         * to be used by MediumEditor and its extensions. This is\n         * passed via the 'ownerDocument' optin to MediumEditor\n         * and is the global 'document' object by default\n         */\n        'document': undefined,\n\n        /* getEditorElements: [function ()]\n         *\n         * Helper function which returns an array containing\n         * all the contenteditable elements for this instance\n         * of MediumEditor\n         */\n        getEditorElements: function () {\n            return this.base.elements;\n        },\n\n        /* getEditorId: [function ()]\n         *\n         * Helper function which returns a unique identifier\n         * for this instance of MediumEditor\n         */\n        getEditorId: function () {\n            return this.base.id;\n        },\n\n        /* getEditorOptions: [function (option)]\n         *\n         * Helper function which returns the value of an option\n         * used to initialize this instance of MediumEditor\n         */\n        getEditorOption: function (option) {\n            return this.base.options[option];\n        }\n    };\n\n    /* List of method names to add to the prototype of Extension\n     * Each of these methods will be defined as helpers that\n     * just call directly into the MediumEditor instance.\n     *\n     * example for 'on' method:\n     * Extension.prototype.on = function () {\n     *     return this.base.on.apply(this.base, arguments);\n     * }\n     */\n    [\n        // general helpers\n        'execAction',\n\n        // event handling\n        'on',\n        'off',\n        'subscribe',\n        'trigger'\n\n    ].forEach(function (helper) {\n        Extension.prototype[helper] = function () {\n            return this.base[helper].apply(this.base, arguments);\n        };\n    });\n\n    MediumEditor.Extension = Extension;\n})();\n\n(function () {\n    'use strict';\n\n    function filterOnlyParentElements(node) {\n        if (MediumEditor.util.isBlockContainer(node)) {\n            return NodeFilter.FILTER_ACCEPT;\n        } else {\n            return NodeFilter.FILTER_SKIP;\n        }\n    }\n\n    var Selection = {\n        findMatchingSelectionParent: function (testElementFunction, contentWindow) {\n            var selection = contentWindow.getSelection(),\n                range,\n                current;\n\n            if (selection.rangeCount === 0) {\n                return false;\n            }\n\n            range = selection.getRangeAt(0);\n            current = range.commonAncestorContainer;\n\n            return MediumEditor.util.traverseUp(current, testElementFunction);\n        },\n\n        getSelectionElement: function (contentWindow) {\n            return this.findMatchingSelectionParent(function (el) {\n                return MediumEditor.util.isMediumEditorElement(el);\n            }, contentWindow);\n        },\n\n        // http://stackoverflow.com/questions/17678843/cant-restore-selection-after-html-modify-even-if-its-the-same-html\n        // Tim Down\n        exportSelection: function (root, doc) {\n            if (!root) {\n                return null;\n            }\n\n            var selectionState = null,\n                selection = doc.getSelection();\n\n            if (selection.rangeCount > 0) {\n                var range = selection.getRangeAt(0),\n                    preSelectionRange = range.cloneRange(),\n                    start;\n\n                preSelectionRange.selectNodeContents(root);\n                preSelectionRange.setEnd(range.startContainer, range.startOffset);\n                start = preSelectionRange.toString().length;\n\n                selectionState = {\n                    start: start,\n                    end: start + range.toString().length\n                };\n\n                // Check to see if the selection starts with any images\n                // if so we need to make sure the the beginning of the selection is\n                // set correctly when importing selection\n                if (this.doesRangeStartWithImages(range, doc)) {\n                    selectionState.startsWithImage = true;\n                }\n\n                // Check to see if the selection has any trailing images\n                // if so, this this means we need to look for them when we import selection\n                var trailingImageCount = this.getTrailingImageCount(root, selectionState, range.endContainer, range.endOffset);\n                if (trailingImageCount) {\n                    selectionState.trailingImageCount = trailingImageCount;\n                }\n\n                // If start = 0 there may still be an empty paragraph before it, but we don't care.\n                if (start !== 0) {\n                    var emptyBlocksIndex = this.getIndexRelativeToAdjacentEmptyBlocks(doc, root, range.startContainer, range.startOffset);\n                    if (emptyBlocksIndex !== -1) {\n                        selectionState.emptyBlocksIndex = emptyBlocksIndex;\n                    }\n                }\n            }\n\n            return selectionState;\n        },\n\n        // http://stackoverflow.com/questions/17678843/cant-restore-selection-after-html-modify-even-if-its-the-same-html\n        // Tim Down\n        //\n        // {object} selectionState - the selection to import\n        // {DOMElement} root - the root element the selection is being restored inside of\n        // {Document} doc - the document to use for managing selection\n        // {boolean} [favorLaterSelectionAnchor] - defaults to false. If true, import the cursor immediately\n        //      subsequent to an anchor tag if it would otherwise be placed right at the trailing edge inside the\n        //      anchor. This cursor positioning, even though visually equivalent to the user, can affect behavior\n        //      in MS IE.\n        importSelection: function (selectionState, root, doc, favorLaterSelectionAnchor) {\n            if (!selectionState || !root) {\n                return;\n            }\n\n            var range = doc.createRange();\n            range.setStart(root, 0);\n            range.collapse(true);\n\n            var node = root,\n                nodeStack = [],\n                charIndex = 0,\n                foundStart = false,\n                foundEnd = false,\n                trailingImageCount = 0,\n                stop = false,\n                nextCharIndex,\n                allowRangeToStartAtEndOfNode = false,\n                lastTextNode = null;\n\n            // When importing selection, the start of the selection may lie at the end of an element\n            // or at the beginning of an element.  Since visually there is no difference between these 2\n            // we will try to move the selection to the beginning of an element since this is generally\n            // what users will expect and it's a more predictable behavior.\n            //\n            // However, there are some specific cases when we don't want to do this:\n            //  1) We're attempting to move the cursor outside of the end of an anchor [favorLaterSelectionAnchor = true]\n            //  2) The selection starts with an image, which is special since an image doesn't have any 'content'\n            //     as far as selection and ranges are concerned\n            //  3) The selection starts after a specified number of empty block elements (selectionState.emptyBlocksIndex)\n            //\n            // For these cases, we want the selection to start at a very specific location, so we should NOT\n            // automatically move the cursor to the beginning of the first actual chunk of text\n            if (favorLaterSelectionAnchor || selectionState.startsWithImage || typeof selectionState.emptyBlocksIndex !== 'undefined') {\n                allowRangeToStartAtEndOfNode = true;\n            }\n\n            while (!stop && node) {\n                // Only iterate over elements and text nodes\n                if (node.nodeType > 3) {\n                    node = nodeStack.pop();\n                    continue;\n                }\n\n                // If we hit a text node, we need to add the amount of characters to the overall count\n                if (node.nodeType === 3 && !foundEnd) {\n                    nextCharIndex = charIndex + node.length;\n                    // Check if we're at or beyond the start of the selection we're importing\n                    if (!foundStart && selectionState.start >= charIndex && selectionState.start <= nextCharIndex) {\n                        // NOTE: We only want to allow a selection to start at the END of an element if\n                        //  allowRangeToStartAtEndOfNode is true\n                        if (allowRangeToStartAtEndOfNode || selectionState.start < nextCharIndex) {\n                            range.setStart(node, selectionState.start - charIndex);\n                            foundStart = true;\n                        }\n                        // We're at the end of a text node where the selection could start but we shouldn't\n                        // make the selection start here because allowRangeToStartAtEndOfNode is false.\n                        // However, we should keep a reference to this node in case there aren't any more\n                        // text nodes after this, so that we have somewhere to import the selection to\n                        else {\n                            lastTextNode = node;\n                        }\n                    }\n                    // We've found the start of the selection, check if we're at or beyond the end of the selection we're importing\n                    if (foundStart && selectionState.end >= charIndex && selectionState.end <= nextCharIndex) {\n                        if (!selectionState.trailingImageCount) {\n                            range.setEnd(node, selectionState.end - charIndex);\n                            stop = true;\n                        } else {\n                            foundEnd = true;\n                        }\n                    }\n                    charIndex = nextCharIndex;\n                } else {\n                    if (selectionState.trailingImageCount && foundEnd) {\n                        if (node.nodeName.toLowerCase() === 'img') {\n                            trailingImageCount++;\n                        }\n                        if (trailingImageCount === selectionState.trailingImageCount) {\n                            // Find which index the image is in its parent's children\n                            var endIndex = 0;\n                            while (node.parentNode.childNodes[endIndex] !== node) {\n                                endIndex++;\n                            }\n                            range.setEnd(node.parentNode, endIndex + 1);\n                            stop = true;\n                        }\n                    }\n\n                    if (!stop && node.nodeType === 1) {\n                        // this is an element\n                        // add all its children to the stack\n                        var i = node.childNodes.length - 1;\n                        while (i >= 0) {\n                            nodeStack.push(node.childNodes[i]);\n                            i -= 1;\n                        }\n                    }\n                }\n\n                if (!stop) {\n                    node = nodeStack.pop();\n                }\n            }\n\n            // If we've gone through the entire text but didn't find the beginning of a text node\n            // to make the selection start at, we should fall back to starting the selection\n            // at the END of the last text node we found\n            if (!foundStart && lastTextNode) {\n                range.setStart(lastTextNode, lastTextNode.length);\n                range.setEnd(lastTextNode, lastTextNode.length);\n            }\n\n            if (typeof selectionState.emptyBlocksIndex !== 'undefined') {\n                range = this.importSelectionMoveCursorPastBlocks(doc, root, selectionState.emptyBlocksIndex, range);\n            }\n\n            // If the selection is right at the ending edge of a link, put it outside the anchor tag instead of inside.\n            if (favorLaterSelectionAnchor) {\n                range = this.importSelectionMoveCursorPastAnchor(selectionState, range);\n            }\n\n            this.selectRange(doc, range);\n        },\n\n        // Utility method called from importSelection only\n        importSelectionMoveCursorPastAnchor: function (selectionState, range) {\n            var nodeInsideAnchorTagFunction = function (node) {\n                return node.nodeName.toLowerCase() === 'a';\n            };\n            if (selectionState.start === selectionState.end &&\n                    range.startContainer.nodeType === 3 &&\n                    range.startOffset === range.startContainer.nodeValue.length &&\n                    MediumEditor.util.traverseUp(range.startContainer, nodeInsideAnchorTagFunction)) {\n                var prevNode = range.startContainer,\n                    currentNode = range.startContainer.parentNode;\n                while (currentNode !== null && currentNode.nodeName.toLowerCase() !== 'a') {\n                    if (currentNode.childNodes[currentNode.childNodes.length - 1] !== prevNode) {\n                        currentNode = null;\n                    } else {\n                        prevNode = currentNode;\n                        currentNode = currentNode.parentNode;\n                    }\n                }\n                if (currentNode !== null && currentNode.nodeName.toLowerCase() === 'a') {\n                    var currentNodeIndex = null;\n                    for (var i = 0; currentNodeIndex === null && i < currentNode.parentNode.childNodes.length; i++) {\n                        if (currentNode.parentNode.childNodes[i] === currentNode) {\n                            currentNodeIndex = i;\n                        }\n                    }\n                    range.setStart(currentNode.parentNode, currentNodeIndex + 1);\n                    range.collapse(true);\n                }\n            }\n            return range;\n        },\n\n        // Uses the emptyBlocksIndex calculated by getIndexRelativeToAdjacentEmptyBlocks\n        // to move the cursor back to the start of the correct paragraph\n        importSelectionMoveCursorPastBlocks: function (doc, root, index, range) {\n            var treeWalker = doc.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, filterOnlyParentElements, false),\n                startContainer = range.startContainer,\n                startBlock,\n                targetNode,\n                currIndex = 0;\n            index = index || 1; // If index is 0, we still want to move to the next block\n\n            // Chrome counts newlines and spaces that separate block elements as actual elements.\n            // If the selection is inside one of these text nodes, and it has a previous sibling\n            // which is a block element, we want the treewalker to start at the previous sibling\n            // and NOT at the parent of the textnode\n            if (startContainer.nodeType === 3 && MediumEditor.util.isBlockContainer(startContainer.previousSibling)) {\n                startBlock = startContainer.previousSibling;\n            } else {\n                startBlock = MediumEditor.util.getClosestBlockContainer(startContainer);\n            }\n\n            // Skip over empty blocks until we hit the block we want the selection to be in\n            while (treeWalker.nextNode()) {\n                if (!targetNode) {\n                    // Loop through all blocks until we hit the starting block element\n                    if (startBlock === treeWalker.currentNode) {\n                        targetNode = treeWalker.currentNode;\n                    }\n                } else {\n                    targetNode = treeWalker.currentNode;\n                    currIndex++;\n                    // We hit the target index, bail\n                    if (currIndex === index) {\n                        break;\n                    }\n                    // If we find a non-empty block, ignore the emptyBlocksIndex and just put selection here\n                    if (targetNode.textContent.length > 0) {\n                        break;\n                    }\n                }\n            }\n\n            if (!targetNode) {\n                targetNode = startBlock;\n            }\n\n            // We're selecting a high-level block node, so make sure the cursor gets moved into the deepest\n            // element at the beginning of the block\n            range.setStart(MediumEditor.util.getFirstSelectableLeafNode(targetNode), 0);\n\n            return range;\n        },\n\n        // Returns -1 unless the cursor is at the beginning of a paragraph/block\n        // If the paragraph/block is preceeded by empty paragraphs/block (with no text)\n        // it will return the number of empty paragraphs before the cursor.\n        // Otherwise, it will return 0, which indicates the cursor is at the beginning\n        // of a paragraph/block, and not at the end of the paragraph/block before it\n        getIndexRelativeToAdjacentEmptyBlocks: function (doc, root, cursorContainer, cursorOffset) {\n            // If there is text in front of the cursor, that means there isn't only empty blocks before it\n            if (cursorContainer.textContent.length > 0 && cursorOffset > 0) {\n                return -1;\n            }\n\n            // Check if the block that contains the cursor has any other text in front of the cursor\n            var node = cursorContainer;\n            if (node.nodeType !== 3) {\n                node = cursorContainer.childNodes[cursorOffset];\n            }\n            if (node) {\n                // The element isn't at the beginning of a block, so it has content before it\n                if (!MediumEditor.util.isElementAtBeginningOfBlock(node)) {\n                    return -1;\n                }\n\n                var previousSibling = MediumEditor.util.findPreviousSibling(node);\n                // If there is no previous sibling, this is the first text element in the editor\n                if (!previousSibling) {\n                    return -1;\n                }\n                // If the previous sibling has text, then there are no empty blocks before this\n                else if (previousSibling.nodeValue) {\n                    return -1;\n                }\n            }\n\n            // Walk over block elements, counting number of empty blocks between last piece of text\n            // and the block the cursor is in\n            var closestBlock = MediumEditor.util.getClosestBlockContainer(cursorContainer),\n                treeWalker = doc.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, filterOnlyParentElements, false),\n                emptyBlocksCount = 0;\n            while (treeWalker.nextNode()) {\n                var blockIsEmpty = treeWalker.currentNode.textContent === '';\n                if (blockIsEmpty || emptyBlocksCount > 0) {\n                    emptyBlocksCount += 1;\n                }\n                if (treeWalker.currentNode === closestBlock) {\n                    return emptyBlocksCount;\n                }\n                if (!blockIsEmpty) {\n                    emptyBlocksCount = 0;\n                }\n            }\n\n            return emptyBlocksCount;\n        },\n\n        // Returns true if the selection range begins with an image tag\n        // Returns false if the range starts with any non empty text nodes\n        doesRangeStartWithImages: function (range, doc) {\n            if (range.startOffset !== 0 || range.startContainer.nodeType !== 1) {\n                return false;\n            }\n\n            if (range.startContainer.nodeName.toLowerCase() === 'img') {\n                return true;\n            }\n\n            var img = range.startContainer.querySelector('img');\n            if (!img) {\n                return false;\n            }\n\n            var treeWalker = doc.createTreeWalker(range.startContainer, NodeFilter.SHOW_ALL, null, false);\n            while (treeWalker.nextNode()) {\n                var next = treeWalker.currentNode;\n                // If we hit the image, then there isn't any text before the image so\n                // the image is at the beginning of the range\n                if (next === img) {\n                    break;\n                }\n                // If we haven't hit the iamge, but found text that contains content\n                // then the range doesn't start with an image\n                if (next.nodeValue) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        getTrailingImageCount: function (root, selectionState, endContainer, endOffset) {\n            // If the endOffset of a range is 0, the endContainer doesn't contain images\n            // If the endContainer is a text node, there are no trailing images\n            if (endOffset === 0 || endContainer.nodeType !== 1) {\n                return 0;\n            }\n\n            // If the endContainer isn't an image, and doesn't have an image descendants\n            // there are no trailing images\n            if (endContainer.nodeName.toLowerCase() !== 'img' && !endContainer.querySelector('img')) {\n                return 0;\n            }\n\n            var lastNode = endContainer.childNodes[endOffset - 1];\n            while (lastNode.hasChildNodes()) {\n                lastNode = lastNode.lastChild;\n            }\n\n            var node = root,\n                nodeStack = [],\n                charIndex = 0,\n                foundStart = false,\n                foundEnd = false,\n                stop = false,\n                nextCharIndex,\n                trailingImages = 0;\n\n            while (!stop && node) {\n                // Only iterate over elements and text nodes\n                if (node.nodeType > 3) {\n                    node = nodeStack.pop();\n                    continue;\n                }\n\n                if (node.nodeType === 3 && !foundEnd) {\n                    trailingImages = 0;\n                    nextCharIndex = charIndex + node.length;\n                    if (!foundStart && selectionState.start >= charIndex && selectionState.start <= nextCharIndex) {\n                        foundStart = true;\n                    }\n                    if (foundStart && selectionState.end >= charIndex && selectionState.end <= nextCharIndex) {\n                        foundEnd = true;\n                    }\n                    charIndex = nextCharIndex;\n                } else {\n                    if (node.nodeName.toLowerCase() === 'img') {\n                        trailingImages++;\n                    }\n\n                    if (node === lastNode) {\n                        stop = true;\n                    } else if (node.nodeType === 1) {\n                        // this is an element\n                        // add all its children to the stack\n                        var i = node.childNodes.length - 1;\n                        while (i >= 0) {\n                            nodeStack.push(node.childNodes[i]);\n                            i -= 1;\n                        }\n                    }\n                }\n\n                if (!stop) {\n                    node = nodeStack.pop();\n                }\n            }\n\n            return trailingImages;\n        },\n\n        // determine if the current selection contains any 'content'\n        // content being any non-white space text or an image\n        selectionContainsContent: function (doc) {\n            var sel = doc.getSelection();\n\n            // collapsed selection or selection withour range doesn't contain content\n            if (!sel || sel.isCollapsed || !sel.rangeCount) {\n                return false;\n            }\n\n            // if toString() contains any text, the selection contains some content\n            if (sel.toString().trim() !== '') {\n                return true;\n            }\n\n            // if selection contains only image(s), it will return empty for toString()\n            // so check for an image manually\n            var selectionNode = this.getSelectedParentElement(sel.getRangeAt(0));\n            if (selectionNode) {\n                if (selectionNode.nodeName.toLowerCase() === 'img' ||\n                    (selectionNode.nodeType === 1 && selectionNode.querySelector('img'))) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        selectionInContentEditableFalse: function (contentWindow) {\n            // determine if the current selection is exclusively inside\n            // a contenteditable=\"false\", though treat the case of an\n            // explicit contenteditable=\"true\" inside a \"false\" as false.\n            var sawtrue,\n                sawfalse = this.findMatchingSelectionParent(function (el) {\n                    var ce = el && el.getAttribute('contenteditable');\n                    if (ce === 'true') {\n                        sawtrue = true;\n                    }\n                    return el.nodeName !== '#text' && ce === 'false';\n                }, contentWindow);\n\n            return !sawtrue && sawfalse;\n        },\n\n        // http://stackoverflow.com/questions/4176923/html-of-selected-text\n        // by Tim Down\n        getSelectionHtml: function getSelectionHtml(doc) {\n            var i,\n                html = '',\n                sel = doc.getSelection(),\n                len,\n                container;\n            if (sel.rangeCount) {\n                container = doc.createElement('div');\n                for (i = 0, len = sel.rangeCount; i < len; i += 1) {\n                    container.appendChild(sel.getRangeAt(i).cloneContents());\n                }\n                html = container.innerHTML;\n            }\n            return html;\n        },\n\n        /**\n         *  Find the caret position within an element irrespective of any inline tags it may contain.\n         *\n         *  @param {DOMElement} An element containing the cursor to find offsets relative to.\n         *  @param {Range} A Range representing cursor position. Will window.getSelection if none is passed.\n         *  @return {Object} 'left' and 'right' attributes contain offsets from begining and end of Element\n         */\n        getCaretOffsets: function getCaretOffsets(element, range) {\n            var preCaretRange, postCaretRange;\n\n            if (!range) {\n                range = window.getSelection().getRangeAt(0);\n            }\n\n            preCaretRange = range.cloneRange();\n            postCaretRange = range.cloneRange();\n\n            preCaretRange.selectNodeContents(element);\n            preCaretRange.setEnd(range.endContainer, range.endOffset);\n\n            postCaretRange.selectNodeContents(element);\n            postCaretRange.setStart(range.endContainer, range.endOffset);\n\n            return {\n                left: preCaretRange.toString().length,\n                right: postCaretRange.toString().length\n            };\n        },\n\n        // http://stackoverflow.com/questions/15867542/range-object-get-selection-parent-node-chrome-vs-firefox\n        rangeSelectsSingleNode: function (range) {\n            var startNode = range.startContainer;\n            return startNode === range.endContainer &&\n                startNode.hasChildNodes() &&\n                range.endOffset === range.startOffset + 1;\n        },\n\n        getSelectedParentElement: function (range) {\n            if (!range) {\n                return null;\n            }\n\n            // Selection encompasses a single element\n            if (this.rangeSelectsSingleNode(range) && range.startContainer.childNodes[range.startOffset].nodeType !== 3) {\n                return range.startContainer.childNodes[range.startOffset];\n            }\n\n            // Selection range starts inside a text node, so get its parent\n            if (range.startContainer.nodeType === 3) {\n                return range.startContainer.parentNode;\n            }\n\n            // Selection starts inside an element\n            return range.startContainer;\n        },\n\n        getSelectedElements: function (doc) {\n            var selection = doc.getSelection(),\n                range,\n                toRet,\n                currNode;\n\n            if (!selection.rangeCount || selection.isCollapsed || !selection.getRangeAt(0).commonAncestorContainer) {\n                return [];\n            }\n\n            range = selection.getRangeAt(0);\n\n            if (range.commonAncestorContainer.nodeType === 3) {\n                toRet = [];\n                currNode = range.commonAncestorContainer;\n                while (currNode.parentNode && currNode.parentNode.childNodes.length === 1) {\n                    toRet.push(currNode.parentNode);\n                    currNode = currNode.parentNode;\n                }\n\n                return toRet;\n            }\n\n            return [].filter.call(range.commonAncestorContainer.getElementsByTagName('*'), function (el) {\n                return (typeof selection.containsNode === 'function') ? selection.containsNode(el, true) : true;\n            });\n        },\n\n        selectNode: function (node, doc) {\n            var range = doc.createRange();\n            range.selectNodeContents(node);\n            this.selectRange(doc, range);\n        },\n\n        select: function (doc, startNode, startOffset, endNode, endOffset) {\n            var range = doc.createRange();\n            range.setStart(startNode, startOffset);\n            if (endNode) {\n                range.setEnd(endNode, endOffset);\n            } else {\n                range.collapse(true);\n            }\n            this.selectRange(doc, range);\n            return range;\n        },\n\n        /**\n         *  Clear the current highlighted selection and set the caret to the start or the end of that prior selection, defaults to end.\n         *\n         *  @param {DomDocument} doc            Current document\n         *  @param {boolean} moveCursorToStart  A boolean representing whether or not to set the caret to the beginning of the prior selection.\n         */\n        clearSelection: function (doc, moveCursorToStart) {\n            if (moveCursorToStart) {\n                doc.getSelection().collapseToStart();\n            } else {\n                doc.getSelection().collapseToEnd();\n            }\n        },\n\n        /**\n         * Move cursor to the given node with the given offset.\n         *\n         * @param  {DomDocument} doc     Current document\n         * @param  {DomElement}  node    Element where to jump\n         * @param  {integer}     offset  Where in the element should we jump, 0 by default\n         */\n        moveCursor: function (doc, node, offset) {\n            this.select(doc, node, offset);\n        },\n\n        getSelectionRange: function (ownerDocument) {\n            var selection = ownerDocument.getSelection();\n            if (selection.rangeCount === 0) {\n                return null;\n            }\n            return selection.getRangeAt(0);\n        },\n\n        selectRange: function (ownerDocument, range) {\n            var selection = ownerDocument.getSelection();\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n        },\n\n        // http://stackoverflow.com/questions/1197401/how-can-i-get-the-element-the-caret-is-in-with-javascript-when-using-contentedi\n        // by You\n        getSelectionStart: function (ownerDocument) {\n            var node = ownerDocument.getSelection().anchorNode,\n                startNode = (node && node.nodeType === 3 ? node.parentNode : node);\n\n            return startNode;\n        }\n    };\n\n    MediumEditor.selection = Selection;\n}());\n\n(function () {\n    'use strict';\n\n    function isElementDescendantOfExtension(extensions, element) {\n        if (!extensions) {\n            return false;\n        }\n\n        return extensions.some(function (extension) {\n            if (typeof extension.getInteractionElements !== 'function') {\n                return false;\n            }\n\n            var extensionElements = extension.getInteractionElements();\n            if (!extensionElements) {\n                return false;\n            }\n\n            if (!Array.isArray(extensionElements)) {\n                extensionElements = [extensionElements];\n            }\n            return extensionElements.some(function (el) {\n                return MediumEditor.util.isDescendant(el, element, true);\n            });\n        });\n    }\n\n    var Events = function (instance) {\n        this.base = instance;\n        this.options = this.base.options;\n        this.events = [];\n        this.disabledEvents = {};\n        this.customEvents = {};\n        this.listeners = {};\n    };\n\n    Events.prototype = {\n        InputEventOnContenteditableSupported: !MediumEditor.util.isIE && !MediumEditor.util.isEdge,\n\n        // Helpers for event handling\n\n        attachDOMEvent: function (targets, event, listener, useCapture) {\n            var win = this.base.options.contentWindow,\n                doc = this.base.options.ownerDocument;\n\n            targets = MediumEditor.util.isElement(targets) || [win, doc].indexOf(targets) > -1 ? [targets] : targets;\n\n            Array.prototype.forEach.call(targets, function (target) {\n                target.addEventListener(event, listener, useCapture);\n                this.events.push([target, event, listener, useCapture]);\n            }.bind(this));\n        },\n\n        detachDOMEvent: function (targets, event, listener, useCapture) {\n            var index, e,\n                win = this.base.options.contentWindow,\n                doc = this.base.options.ownerDocument;\n\n            if (targets) {\n                targets = MediumEditor.util.isElement(targets) || [win, doc].indexOf(targets) > -1 ? [targets] : targets;\n\n                Array.prototype.forEach.call(targets, function (target) {\n                    index = this.indexOfListener(target, event, listener, useCapture);\n                    if (index !== -1) {\n                        e = this.events.splice(index, 1)[0];\n                        e[0].removeEventListener(e[1], e[2], e[3]);\n                    }\n                }.bind(this));\n            }\n        },\n\n        indexOfListener: function (target, event, listener, useCapture) {\n            var i, n, item;\n            for (i = 0, n = this.events.length; i < n; i = i + 1) {\n                item = this.events[i];\n                if (item[0] === target && item[1] === event && item[2] === listener && item[3] === useCapture) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n\n        detachAllDOMEvents: function () {\n            var e = this.events.pop();\n            while (e) {\n                e[0].removeEventListener(e[1], e[2], e[3]);\n                e = this.events.pop();\n            }\n        },\n\n        detachAllEventsFromElement: function (element) {\n            var filtered = this.events.filter(function (e) {\n                return e && e[0].getAttribute && e[0].getAttribute('medium-editor-index') === element.getAttribute('medium-editor-index');\n            });\n\n            for (var i = 0, len = filtered.length; i < len; i++) {\n                var e = filtered[i];\n                this.detachDOMEvent(e[0], e[1], e[2], e[3]);\n            }\n        },\n\n        // Attach all existing handlers to a new element\n        attachAllEventsToElement: function (element) {\n            if (this.listeners['editableInput']) {\n                this.contentCache[element.getAttribute('medium-editor-index')] = element.innerHTML;\n            }\n\n            if (this.eventsCache) {\n                this.eventsCache.forEach(function (e) {\n                    this.attachDOMEvent(element, e['name'], e['handler'].bind(this));\n                }, this);\n            }\n        },\n\n        enableCustomEvent: function (event) {\n            if (this.disabledEvents[event] !== undefined) {\n                delete this.disabledEvents[event];\n            }\n        },\n\n        disableCustomEvent: function (event) {\n            this.disabledEvents[event] = true;\n        },\n\n        // custom events\n        attachCustomEvent: function (event, listener) {\n            this.setupListener(event);\n            if (!this.customEvents[event]) {\n                this.customEvents[event] = [];\n            }\n            this.customEvents[event].push(listener);\n        },\n\n        detachCustomEvent: function (event, listener) {\n            var index = this.indexOfCustomListener(event, listener);\n            if (index !== -1) {\n                this.customEvents[event].splice(index, 1);\n                // TODO: If array is empty, should detach internal listeners via destroyListener()\n            }\n        },\n\n        indexOfCustomListener: function (event, listener) {\n            if (!this.customEvents[event] || !this.customEvents[event].length) {\n                return -1;\n            }\n\n            return this.customEvents[event].indexOf(listener);\n        },\n\n        detachAllCustomEvents: function () {\n            this.customEvents = {};\n            // TODO: Should detach internal listeners here via destroyListener()\n        },\n\n        triggerCustomEvent: function (name, data, editable) {\n            if (this.customEvents[name] && !this.disabledEvents[name]) {\n                this.customEvents[name].forEach(function (listener) {\n                    listener(data, editable);\n                });\n            }\n        },\n\n        // Cleaning up\n\n        destroy: function () {\n            this.detachAllDOMEvents();\n            this.detachAllCustomEvents();\n            this.detachExecCommand();\n\n            if (this.base.elements) {\n                this.base.elements.forEach(function (element) {\n                    element.removeAttribute('data-medium-focused');\n                });\n            }\n        },\n\n        // Listening to calls to document.execCommand\n\n        // Attach a listener to be notified when document.execCommand is called\n        attachToExecCommand: function () {\n            if (this.execCommandListener) {\n                return;\n            }\n\n            // Store an instance of the listener so:\n            // 1) We only attach to execCommand once\n            // 2) We can remove the listener later\n            this.execCommandListener = function (execInfo) {\n                this.handleDocumentExecCommand(execInfo);\n            }.bind(this);\n\n            // Ensure that execCommand has been wrapped correctly\n            this.wrapExecCommand();\n\n            // Add listener to list of execCommand listeners\n            this.options.ownerDocument.execCommand.listeners.push(this.execCommandListener);\n        },\n\n        // Remove our listener for calls to document.execCommand\n        detachExecCommand: function () {\n            var doc = this.options.ownerDocument;\n            if (!this.execCommandListener || !doc.execCommand.listeners) {\n                return;\n            }\n\n            // Find the index of this listener in the array of listeners so it can be removed\n            var index = doc.execCommand.listeners.indexOf(this.execCommandListener);\n            if (index !== -1) {\n                doc.execCommand.listeners.splice(index, 1);\n            }\n\n            // If the list of listeners is now empty, put execCommand back to its original state\n            if (!doc.execCommand.listeners.length) {\n                this.unwrapExecCommand();\n            }\n        },\n\n        // Wrap document.execCommand in a custom method so we can listen to calls to it\n        wrapExecCommand: function () {\n            var doc = this.options.ownerDocument;\n\n            // Ensure all instance of MediumEditor only wrap execCommand once\n            if (doc.execCommand.listeners) {\n                return;\n            }\n\n            // Helper method to call all listeners to execCommand\n            var callListeners = function (args, result) {\n                if (doc.execCommand.listeners) {\n                    doc.execCommand.listeners.forEach(function (listener) {\n                        listener({\n                            command: args[0],\n                            value: args[2],\n                            args: args,\n                            result: result\n                        });\n                    });\n                }\n            },\n\n                // Create a wrapper method for execCommand which will:\n                // 1) Call document.execCommand with the correct arguments\n                // 2) Loop through any listeners and notify them that execCommand was called\n                //    passing extra info on the call\n                // 3) Return the result\n                wrapper = function () {\n                    var result = doc.execCommand.orig.apply(this, arguments);\n\n                    if (!doc.execCommand.listeners) {\n                        return result;\n                    }\n\n                    var args = Array.prototype.slice.call(arguments);\n                    callListeners(args, result);\n\n                    return result;\n                };\n\n            // Store a reference to the original execCommand\n            wrapper.orig = doc.execCommand;\n\n            // Attach an array for storing listeners\n            wrapper.listeners = [];\n\n            // Helper for notifying listeners\n            wrapper.callListeners = callListeners;\n\n            // Overwrite execCommand\n            doc.execCommand = wrapper;\n        },\n\n        // Revert document.execCommand back to its original self\n        unwrapExecCommand: function () {\n            var doc = this.options.ownerDocument;\n            if (!doc.execCommand.orig) {\n                return;\n            }\n\n            // Use the reference to the original execCommand to revert back\n            doc.execCommand = doc.execCommand.orig;\n        },\n\n        // Listening to browser events to emit events medium-editor cares about\n        setupListener: function (name) {\n            if (this.listeners[name]) {\n                return;\n            }\n\n            switch (name) {\n                case 'externalInteraction':\n                    // Detecting when user has interacted with elements outside of MediumEditor\n                    this.attachDOMEvent(this.options.ownerDocument.body, 'mousedown', this.handleBodyMousedown.bind(this), true);\n                    this.attachDOMEvent(this.options.ownerDocument.body, 'click', this.handleBodyClick.bind(this), true);\n                    this.attachDOMEvent(this.options.ownerDocument.body, 'focus', this.handleBodyFocus.bind(this), true);\n                    break;\n                case 'blur':\n                    // Detecting when focus is lost\n                    this.setupListener('externalInteraction');\n                    break;\n                case 'focus':\n                    // Detecting when focus moves into some part of MediumEditor\n                    this.setupListener('externalInteraction');\n                    break;\n                case 'editableInput':\n                    // setup cache for knowing when the content has changed\n                    this.contentCache = {};\n                    this.base.elements.forEach(function (element) {\n                        this.contentCache[element.getAttribute('medium-editor-index')] = element.innerHTML;\n                    }, this);\n\n                    // Attach to the 'oninput' event, handled correctly by most browsers\n                    if (this.InputEventOnContenteditableSupported) {\n                        this.attachToEachElement('input', this.handleInput);\n                    }\n\n                    // For browsers which don't support the input event on contenteditable (IE)\n                    // we'll attach to 'selectionchange' on the document and 'keypress' on the editables\n                    if (!this.InputEventOnContenteditableSupported) {\n                        this.setupListener('editableKeypress');\n                        this.keypressUpdateInput = true;\n                        this.attachDOMEvent(document, 'selectionchange', this.handleDocumentSelectionChange.bind(this));\n                        // Listen to calls to execCommand\n                        this.attachToExecCommand();\n                    }\n                    break;\n                case 'editableClick':\n                    // Detecting click in the contenteditables\n                    this.attachToEachElement('click', this.handleClick);\n                    break;\n                case 'editableBlur':\n                    // Detecting blur in the contenteditables\n                    this.attachToEachElement('blur', this.handleBlur);\n                    break;\n                case 'editableKeypress':\n                    // Detecting keypress in the contenteditables\n                    this.attachToEachElement('keypress', this.handleKeypress);\n                    break;\n                case 'editableKeyup':\n                    // Detecting keyup in the contenteditables\n                    this.attachToEachElement('keyup', this.handleKeyup);\n                    break;\n                case 'editableKeydown':\n                    // Detecting keydown on the contenteditables\n                    this.attachToEachElement('keydown', this.handleKeydown);\n                    break;\n                case 'editableKeydownSpace':\n                    // Detecting keydown for SPACE on the contenteditables\n                    this.setupListener('editableKeydown');\n                    break;\n                case 'editableKeydownEnter':\n                    // Detecting keydown for ENTER on the contenteditables\n                    this.setupListener('editableKeydown');\n                    break;\n                case 'editableKeydownTab':\n                    // Detecting keydown for TAB on the contenteditable\n                    this.setupListener('editableKeydown');\n                    break;\n                case 'editableKeydownDelete':\n                    // Detecting keydown for DELETE/BACKSPACE on the contenteditables\n                    this.setupListener('editableKeydown');\n                    break;\n                case 'editableMouseover':\n                    // Detecting mouseover on the contenteditables\n                    this.attachToEachElement('mouseover', this.handleMouseover);\n                    break;\n                case 'editableDrag':\n                    // Detecting dragover and dragleave on the contenteditables\n                    this.attachToEachElement('dragover', this.handleDragging);\n                    this.attachToEachElement('dragleave', this.handleDragging);\n                    break;\n                case 'editableDrop':\n                    // Detecting drop on the contenteditables\n                    this.attachToEachElement('drop', this.handleDrop);\n                    break;\n                // TODO: We need to have a custom 'paste' event separate from 'editablePaste'\n                // Need to think about the way to introduce this without breaking folks\n                case 'editablePaste':\n                    // Detecting paste on the contenteditables\n                    this.attachToEachElement('paste', this.handlePaste);\n                    break;\n            }\n            this.listeners[name] = true;\n        },\n\n        attachToEachElement: function (name, handler) {\n            // build our internal cache to know which element got already what handler attached\n            if (!this.eventsCache) {\n                this.eventsCache = [];\n            }\n\n            this.base.elements.forEach(function (element) {\n                this.attachDOMEvent(element, name, handler.bind(this));\n            }, this);\n\n            this.eventsCache.push({ 'name': name, 'handler': handler });\n        },\n\n        cleanupElement: function (element) {\n            var index = element.getAttribute('medium-editor-index');\n            if (index) {\n                this.detachAllEventsFromElement(element);\n                if (this.contentCache) {\n                    delete this.contentCache[index];\n                }\n            }\n        },\n\n        focusElement: function (element) {\n            element.focus();\n            this.updateFocus(element, { target: element, type: 'focus' });\n        },\n\n        updateFocus: function (target, eventObj) {\n            var hadFocus = this.base.getFocusedElement(),\n                toFocus;\n\n            // For clicks, we need to know if the mousedown that caused the click happened inside the existing focused element\n            // or one of the extension elements.  If so, we don't want to focus another element\n            if (hadFocus &&\n                eventObj.type === 'click' &&\n                this.lastMousedownTarget &&\n                (MediumEditor.util.isDescendant(hadFocus, this.lastMousedownTarget, true) ||\n                    isElementDescendantOfExtension(this.base.extensions, this.lastMousedownTarget))) {\n                toFocus = hadFocus;\n            }\n\n            if (!toFocus) {\n                this.base.elements.some(function (element) {\n                    // If the target is part of an editor element, this is the element getting focus\n                    if (!toFocus && (MediumEditor.util.isDescendant(element, target, true))) {\n                        toFocus = element;\n                    }\n\n                    // bail if we found an element that's getting focus\n                    return !!toFocus;\n                }, this);\n            }\n\n            // Check if the target is external (not part of the editor, toolbar, or any other extension)\n            var externalEvent = !MediumEditor.util.isDescendant(hadFocus, target, true) &&\n                !isElementDescendantOfExtension(this.base.extensions, target);\n\n            if (toFocus !== hadFocus) {\n                // If element has focus, and focus is going outside of editor\n                // Don't blur focused element if clicking on editor, toolbar, or anchorpreview\n                if (hadFocus && externalEvent) {\n                    // Trigger blur on the editable that has lost focus\n                    hadFocus.removeAttribute('data-medium-focused');\n                    this.triggerCustomEvent('blur', eventObj, hadFocus);\n                }\n\n                // If focus is going into an editor element\n                if (toFocus) {\n                    // Trigger focus on the editable that now has focus\n                    toFocus.setAttribute('data-medium-focused', true);\n                    this.triggerCustomEvent('focus', eventObj, toFocus);\n                }\n            }\n\n            if (externalEvent) {\n                this.triggerCustomEvent('externalInteraction', eventObj);\n            }\n        },\n\n        updateInput: function (target, eventObj) {\n            if (!this.contentCache) {\n                return;\n            }\n            // An event triggered which signifies that the user may have changed someting\n            // Look in our cache of input for the contenteditables to see if something changed\n            var index = target.getAttribute('medium-editor-index'),\n                html = target.innerHTML;\n\n            if (html !== this.contentCache[index]) {\n                // The content has changed since the last time we checked, fire the event\n                this.triggerCustomEvent('editableInput', eventObj, target);\n            }\n            this.contentCache[index] = html;\n        },\n\n        handleDocumentSelectionChange: function (event) {\n            // When selectionchange fires, target and current target are set\n            // to document, since this is where the event is handled\n            // However, currentTarget will have an 'activeElement' property\n            // which will point to whatever element has focus.\n            if (event.currentTarget && event.currentTarget.activeElement) {\n                var activeElement = event.currentTarget.activeElement,\n                    currentTarget;\n                // We can look at the 'activeElement' to determine if the selectionchange has\n                // happened within a contenteditable owned by this instance of MediumEditor\n                this.base.elements.some(function (element) {\n                    if (MediumEditor.util.isDescendant(element, activeElement, true)) {\n                        currentTarget = element;\n                        return true;\n                    }\n                    return false;\n                }, this);\n\n                // We know selectionchange fired within one of our contenteditables\n                if (currentTarget) {\n                    this.updateInput(currentTarget, { target: activeElement, currentTarget: currentTarget });\n                }\n            }\n        },\n\n        handleDocumentExecCommand: function () {\n            // document.execCommand has been called\n            // If one of our contenteditables currently has focus, we should\n            // attempt to trigger the 'editableInput' event\n            var target = this.base.getFocusedElement();\n            if (target) {\n                this.updateInput(target, { target: target, currentTarget: target });\n            }\n        },\n\n        handleBodyClick: function (event) {\n            this.updateFocus(event.target, event);\n        },\n\n        handleBodyFocus: function (event) {\n            this.updateFocus(event.target, event);\n        },\n\n        handleBodyMousedown: function (event) {\n            this.lastMousedownTarget = event.target;\n        },\n\n        handleInput: function (event) {\n            this.updateInput(event.currentTarget, event);\n        },\n\n        handleClick: function (event) {\n            this.triggerCustomEvent('editableClick', event, event.currentTarget);\n        },\n\n        handleBlur: function (event) {\n            this.triggerCustomEvent('editableBlur', event, event.currentTarget);\n        },\n\n        handleKeypress: function (event) {\n            this.triggerCustomEvent('editableKeypress', event, event.currentTarget);\n\n            // If we're doing manual detection of the editableInput event we need\n            // to check for input changes during 'keypress'\n            if (this.keypressUpdateInput) {\n                var eventObj = { target: event.target, currentTarget: event.currentTarget };\n\n                // In IE, we need to let the rest of the event stack complete before we detect\n                // changes to input, so using setTimeout here\n                setTimeout(function () {\n                    this.updateInput(eventObj.currentTarget, eventObj);\n                }.bind(this), 0);\n            }\n        },\n\n        handleKeyup: function (event) {\n            this.triggerCustomEvent('editableKeyup', event, event.currentTarget);\n        },\n\n        handleMouseover: function (event) {\n            this.triggerCustomEvent('editableMouseover', event, event.currentTarget);\n        },\n\n        handleDragging: function (event) {\n            this.triggerCustomEvent('editableDrag', event, event.currentTarget);\n        },\n\n        handleDrop: function (event) {\n            this.triggerCustomEvent('editableDrop', event, event.currentTarget);\n        },\n\n        handlePaste: function (event) {\n            this.triggerCustomEvent('editablePaste', event, event.currentTarget);\n        },\n\n        handleKeydown: function (event) {\n\n            this.triggerCustomEvent('editableKeydown', event, event.currentTarget);\n\n            if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.SPACE)) {\n                return this.triggerCustomEvent('editableKeydownSpace', event, event.currentTarget);\n            }\n\n            if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.ENTER) || (event.ctrlKey && MediumEditor.util.isKey(event, MediumEditor.util.keyCode.M))) {\n                return this.triggerCustomEvent('editableKeydownEnter', event, event.currentTarget);\n            }\n\n            if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.TAB)) {\n                return this.triggerCustomEvent('editableKeydownTab', event, event.currentTarget);\n            }\n\n            if (MediumEditor.util.isKey(event, [MediumEditor.util.keyCode.DELETE, MediumEditor.util.keyCode.BACKSPACE])) {\n                return this.triggerCustomEvent('editableKeydownDelete', event, event.currentTarget);\n            }\n        }\n    };\n\n    MediumEditor.Events = Events;\n}());\n\n(function () {\n    'use strict';\n\n    var Button = MediumEditor.Extension.extend({\n\n        /* Button Options */\n\n        /* action: [string]\n         * The action argument to pass to MediumEditor.execAction()\n         * when the button is clicked\n         */\n        action: undefined,\n\n        /* aria: [string]\n         * The value to add as the aria-label attribute of the button\n         * element displayed in the toolbar.\n         * This is also used as the tooltip for the button\n         */\n        aria: undefined,\n\n        /* tagNames: [Array]\n         * NOTE: This is not used if useQueryState is set to true.\n         *\n         * Array of element tag names that would indicate that this\n         * button has already been applied. If this action has already\n         * been applied, the button will be displayed as 'active' in the toolbar\n         *\n         * Example:\n         * For 'bold', if the text is ever within a <b> or <strong>\n         * tag that indicates the text is already bold. So the array\n         * of tagNames for bold would be: ['b', 'strong']\n         */\n        tagNames: undefined,\n\n        /* style: [Object]\n         * NOTE: This is not used if useQueryState is set to true.\n         *\n         * A pair of css property & value(s) that indicate that this\n         * button has already been applied. If this action has already\n         * been applied, the button will be displayed as 'active' in the toolbar\n         * Properties of the object:\n         *   prop [String]: name of the css property\n         *   value [String]: value(s) of the css property\n         *                   multiple values can be separated by a '|'\n         *\n         * Example:\n         * For 'bold', if the text is ever within an element with a 'font-weight'\n         * style property set to '700' or 'bold', that indicates the text\n         * is already bold.  So the style object for bold would be:\n         * { prop: 'font-weight', value: '700|bold' }\n         */\n        style: undefined,\n\n        /* useQueryState: [boolean]\n         * Enables/disables whether this button should use the built-in\n         * document.queryCommandState() method to determine whether\n         * the action has already been applied.  If the action has already\n         * been applied, the button will be displayed as 'active' in the toolbar\n         *\n         * Example:\n         * For 'bold', if this is set to true, the code will call:\n         * document.queryCommandState('bold') which will return true if the\n         * browser thinks the text is already bold, and false otherwise\n         */\n        useQueryState: undefined,\n\n        /* contentDefault: [string]\n         * Default innerHTML to put inside the button\n         */\n        contentDefault: undefined,\n\n        /* contentFA: [string]\n         * The innerHTML to use for the content of the button\n         * if the `buttonLabels` option for MediumEditor is set to 'fontawesome'\n         */\n        contentFA: undefined,\n\n        /* classList: [Array]\n         * An array of classNames (strings) to be added to the button\n         */\n        classList: undefined,\n\n        /* attrs: [object]\n         * A set of key-value pairs to add to the button as custom attributes\n         */\n        attrs: undefined,\n\n        // The button constructor can optionally accept the name of a built-in button\n        // (ie 'bold', 'italic', etc.)\n        // When the name of a button is passed, it will initialize itself with the\n        // configuration for that button\n        constructor: function (options) {\n            if (Button.isBuiltInButton(options)) {\n                MediumEditor.Extension.call(this, this.defaults[options]);\n            } else {\n                MediumEditor.Extension.call(this, options);\n            }\n        },\n\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.button = this.createButton();\n            this.on(this.button, 'click', this.handleClick.bind(this));\n        },\n\n        /* getButton: [function ()]\n         *\n         * If implemented, this function will be called when\n         * the toolbar is being created.  The DOM Element returned\n         * by this function will be appended to the toolbar along\n         * with any other buttons.\n         */\n        getButton: function () {\n            return this.button;\n        },\n\n        getAction: function () {\n            return (typeof this.action === 'function') ? this.action(this.base.options) : this.action;\n        },\n\n        getAria: function () {\n            return (typeof this.aria === 'function') ? this.aria(this.base.options) : this.aria;\n        },\n\n        getTagNames: function () {\n            return (typeof this.tagNames === 'function') ? this.tagNames(this.base.options) : this.tagNames;\n        },\n\n        createButton: function () {\n            var button = this.document.createElement('button'),\n                content = this.contentDefault,\n                ariaLabel = this.getAria(),\n                buttonLabels = this.getEditorOption('buttonLabels');\n            // Add class names\n            button.classList.add('medium-editor-action');\n            button.classList.add('medium-editor-action-' + this.name);\n            if (this.classList) {\n                this.classList.forEach(function (className) {\n                    button.classList.add(className);\n                });\n            }\n\n            // Add attributes\n            button.setAttribute('data-action', this.getAction());\n            if (ariaLabel) {\n                button.setAttribute('title', ariaLabel);\n                button.setAttribute('aria-label', ariaLabel);\n            }\n            if (this.attrs) {\n                Object.keys(this.attrs).forEach(function (attr) {\n                    button.setAttribute(attr, this.attrs[attr]);\n                }, this);\n            }\n\n            if (buttonLabels === 'fontawesome' && this.contentFA) {\n                content = this.contentFA;\n            }\n            button.innerHTML = content;\n            return button;\n        },\n\n        handleClick: function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            var action = this.getAction();\n\n            if (action) {\n                this.execAction(action);\n            }\n        },\n\n        isActive: function () {\n            return this.button.classList.contains(this.getEditorOption('activeButtonClass'));\n        },\n\n        setInactive: function () {\n            this.button.classList.remove(this.getEditorOption('activeButtonClass'));\n            delete this.knownState;\n        },\n\n        setActive: function () {\n            this.button.classList.add(this.getEditorOption('activeButtonClass'));\n            delete this.knownState;\n        },\n\n        queryCommandState: function () {\n            var queryState = null;\n            if (this.useQueryState) {\n                queryState = this.base.queryCommandState(this.getAction());\n            }\n            return queryState;\n        },\n\n        isAlreadyApplied: function (node) {\n            var isMatch = false,\n                tagNames = this.getTagNames(),\n                styleVals,\n                computedStyle;\n\n            if (this.knownState === false || this.knownState === true) {\n                return this.knownState;\n            }\n\n            if (tagNames && tagNames.length > 0) {\n                isMatch = tagNames.indexOf(node.nodeName.toLowerCase()) !== -1;\n            }\n\n            if (!isMatch && this.style) {\n                styleVals = this.style.value.split('|');\n                computedStyle = this.window.getComputedStyle(node, null).getPropertyValue(this.style.prop);\n                styleVals.forEach(function (val) {\n                    if (!this.knownState) {\n                        isMatch = (computedStyle.indexOf(val) !== -1);\n                        // text-decoration is not inherited by default\n                        // so if the computed style for text-decoration doesn't match\n                        // don't write to knownState so we can fallback to other checks\n                        if (isMatch || this.style.prop !== 'text-decoration') {\n                            this.knownState = isMatch;\n                        }\n                    }\n                }, this);\n            }\n\n            return isMatch;\n        }\n    });\n\n    Button.isBuiltInButton = function (name) {\n        return (typeof name === 'string') && MediumEditor.extensions.button.prototype.defaults.hasOwnProperty(name);\n    };\n\n    MediumEditor.extensions.button = Button;\n}());\n\n(function () {\n    'use strict';\n\n    /* MediumEditor.extensions.button.defaults: [Object]\n     * Set of default config options for all of the built-in MediumEditor buttons\n     */\n    MediumEditor.extensions.button.prototype.defaults = {\n        'bold': {\n            name: 'bold',\n            action: 'bold',\n            aria: 'bold',\n            tagNames: ['b', 'strong'],\n            style: {\n                prop: 'font-weight',\n                value: '700|bold'\n            },\n            useQueryState: true,\n            contentDefault: '<b>B</b>',\n            contentFA: '<i class=\"fa fa-bold\"></i>'\n        },\n        'italic': {\n            name: 'italic',\n            action: 'italic',\n            aria: 'italic',\n            tagNames: ['i', 'em'],\n            style: {\n                prop: 'font-style',\n                value: 'italic'\n            },\n            useQueryState: true,\n            contentDefault: '<b><i>I</i></b>',\n            contentFA: '<i class=\"fa fa-italic\"></i>'\n        },\n        'underline': {\n            name: 'underline',\n            action: 'underline',\n            aria: 'underline',\n            tagNames: ['u'],\n            style: {\n                prop: 'text-decoration',\n                value: 'underline'\n            },\n            useQueryState: true,\n            contentDefault: '<b><u>U</u></b>',\n            contentFA: '<i class=\"fa fa-underline\"></i>'\n        },\n        'strikethrough': {\n            name: 'strikethrough',\n            action: 'strikethrough',\n            aria: 'strike through',\n            tagNames: ['strike'],\n            style: {\n                prop: 'text-decoration',\n                value: 'line-through'\n            },\n            useQueryState: true,\n            contentDefault: '<s>A</s>',\n            contentFA: '<i class=\"fa fa-strikethrough\"></i>'\n        },\n        'superscript': {\n            name: 'superscript',\n            action: 'superscript',\n            aria: 'superscript',\n            tagNames: ['sup'],\n            /* firefox doesn't behave the way we want it to, so we CAN'T use queryCommandState for superscript\n               https://github.com/guardian/scribe/blob/master/BROWSERINCONSISTENCIES.md#documentquerycommandstate */\n            // useQueryState: true\n            contentDefault: '<b>x<sup>1</sup></b>',\n            contentFA: '<i class=\"fa fa-superscript\"></i>'\n        },\n        'subscript': {\n            name: 'subscript',\n            action: 'subscript',\n            aria: 'subscript',\n            tagNames: ['sub'],\n            /* firefox doesn't behave the way we want it to, so we CAN'T use queryCommandState for subscript\n               https://github.com/guardian/scribe/blob/master/BROWSERINCONSISTENCIES.md#documentquerycommandstate */\n            // useQueryState: true\n            contentDefault: '<b>x<sub>1</sub></b>',\n            contentFA: '<i class=\"fa fa-subscript\"></i>'\n        },\n        'image': {\n            name: 'image',\n            action: 'image',\n            aria: 'image',\n            tagNames: ['img'],\n            contentDefault: '<b>image</b>',\n            contentFA: '<i class=\"fa fa-picture-o\"></i>'\n        },\n        'html': {\n            name: 'html',\n            action: 'html',\n            aria: 'evaluate html',\n            tagNames: ['iframe', 'object'],\n            contentDefault: '<b>html</b>',\n            contentFA: '<i class=\"fa fa-code\"></i>'\n        },\n        'orderedlist': {\n            name: 'orderedlist',\n            action: 'insertorderedlist',\n            aria: 'ordered list',\n            tagNames: ['ol'],\n            useQueryState: true,\n            contentDefault: '<b>1.</b>',\n            contentFA: '<i class=\"fa fa-list-ol\"></i>'\n        },\n        'unorderedlist': {\n            name: 'unorderedlist',\n            action: 'insertunorderedlist',\n            aria: 'unordered list',\n            tagNames: ['ul'],\n            useQueryState: true,\n            contentDefault: '<b>&bull;</b>',\n            contentFA: '<i class=\"fa fa-list-ul\"></i>'\n        },\n        'indent': {\n            name: 'indent',\n            action: 'indent',\n            aria: 'indent',\n            tagNames: [],\n            contentDefault: '<b>&rarr;</b>',\n            contentFA: '<i class=\"fa fa-indent\"></i>'\n        },\n        'outdent': {\n            name: 'outdent',\n            action: 'outdent',\n            aria: 'outdent',\n            tagNames: [],\n            contentDefault: '<b>&larr;</b>',\n            contentFA: '<i class=\"fa fa-outdent\"></i>'\n        },\n        'justifyCenter': {\n            name: 'justifyCenter',\n            action: 'justifyCenter',\n            aria: 'center justify',\n            tagNames: [],\n            style: {\n                prop: 'text-align',\n                value: 'center'\n            },\n            contentDefault: '<b>C</b>',\n            contentFA: '<i class=\"fa fa-align-center\"></i>'\n        },\n        'justifyFull': {\n            name: 'justifyFull',\n            action: 'justifyFull',\n            aria: 'full justify',\n            tagNames: [],\n            style: {\n                prop: 'text-align',\n                value: 'justify'\n            },\n            contentDefault: '<b>J</b>',\n            contentFA: '<i class=\"fa fa-align-justify\"></i>'\n        },\n        'justifyLeft': {\n            name: 'justifyLeft',\n            action: 'justifyLeft',\n            aria: 'left justify',\n            tagNames: [],\n            style: {\n                prop: 'text-align',\n                value: 'left'\n            },\n            contentDefault: '<b>L</b>',\n            contentFA: '<i class=\"fa fa-align-left\"></i>'\n        },\n        'justifyRight': {\n            name: 'justifyRight',\n            action: 'justifyRight',\n            aria: 'right justify',\n            tagNames: [],\n            style: {\n                prop: 'text-align',\n                value: 'right'\n            },\n            contentDefault: '<b>R</b>',\n            contentFA: '<i class=\"fa fa-align-right\"></i>'\n        },\n        // Known inline elements that are not removed, or not removed consistantly across browsers:\n        // <span>, <label>, <br>\n        'removeFormat': {\n            name: 'removeFormat',\n            aria: 'remove formatting',\n            action: 'removeFormat',\n            contentDefault: '<b>X</b>',\n            contentFA: '<i class=\"fa fa-eraser\"></i>'\n        },\n\n        /***** Buttons for appending block elements (append-<element> action) *****/\n\n        'quote': {\n            name: 'quote',\n            action: 'append-blockquote',\n            aria: 'blockquote',\n            tagNames: ['blockquote'],\n            contentDefault: '<b>&ldquo;</b>',\n            contentFA: '<i class=\"fa fa-quote-right\"></i>'\n        },\n        'pre': {\n            name: 'pre',\n            action: 'append-pre',\n            aria: 'preformatted text',\n            tagNames: ['pre'],\n            contentDefault: '<b>0101</b>',\n            contentFA: '<i class=\"fa fa-code fa-lg\"></i>'\n        },\n        'h1': {\n            name: 'h1',\n            action: 'append-h1',\n            aria: 'header type one',\n            tagNames: ['h1'],\n            contentDefault: '<b>H1</b>',\n            contentFA: '<i class=\"fa fa-header\"><sup>1</sup>'\n        },\n        'h2': {\n            name: 'h2',\n            action: 'append-h2',\n            aria: 'header type two',\n            tagNames: ['h2'],\n            contentDefault: '<b>H2</b>',\n            contentFA: '<i class=\"fa fa-header\"><sup>2</sup>'\n        },\n        'h3': {\n            name: 'h3',\n            action: 'append-h3',\n            aria: 'header type three',\n            tagNames: ['h3'],\n            contentDefault: '<b>H3</b>',\n            contentFA: '<i class=\"fa fa-header\"><sup>3</sup>'\n        },\n        'h4': {\n            name: 'h4',\n            action: 'append-h4',\n            aria: 'header type four',\n            tagNames: ['h4'],\n            contentDefault: '<b>H4</b>',\n            contentFA: '<i class=\"fa fa-header\"><sup>4</sup>'\n        },\n        'h5': {\n            name: 'h5',\n            action: 'append-h5',\n            aria: 'header type five',\n            tagNames: ['h5'],\n            contentDefault: '<b>H5</b>',\n            contentFA: '<i class=\"fa fa-header\"><sup>5</sup>'\n        },\n        'h6': {\n            name: 'h6',\n            action: 'append-h6',\n            aria: 'header type six',\n            tagNames: ['h6'],\n            contentDefault: '<b>H6</b>',\n            contentFA: '<i class=\"fa fa-header\"><sup>6</sup>'\n        }\n    };\n\n})();\n\n(function () {\n    'use strict';\n\n    /* Base functionality for an extension which will display\n     * a 'form' inside the toolbar\n     */\n    var FormExtension = MediumEditor.extensions.button.extend({\n\n        init: function () {\n            MediumEditor.extensions.button.prototype.init.apply(this, arguments);\n        },\n\n        // default labels for the form buttons\n        formSaveLabel: '&#10003;',\n        formCloseLabel: '&times;',\n\n        /* activeClass: [string]\n         * set class which added to shown form\n         */\n        activeClass: 'medium-editor-toolbar-form-active',\n\n        /* hasForm: [boolean]\n         *\n         * Setting this to true will cause getForm() to be called\n         * when the toolbar is created, so the form can be appended\n         * inside the toolbar container\n         */\n        hasForm: true,\n\n        /* getForm: [function ()]\n         *\n         * When hasForm is true, this function must be implemented\n         * and return a DOM Element which will be appended to\n         * the toolbar container. The form should start hidden, and\n         * the extension can choose when to hide/show it\n         */\n        getForm: function () {},\n\n        /* isDisplayed: [function ()]\n         *\n         * This function should return true/false reflecting\n         * whether the form is currently displayed\n         */\n        isDisplayed: function () {\n            if (this.hasForm) {\n                return this.getForm().classList.contains(this.activeClass);\n            }\n            return false;\n        },\n\n        /* hideForm: [function ()]\n         *\n         * This function should show the form element inside\n         * the toolbar container\n         */\n        showForm: function () {\n            if (this.hasForm) {\n                this.getForm().classList.add(this.activeClass);\n            }\n        },\n\n        /* hideForm: [function ()]\n         *\n         * This function should hide the form element inside\n         * the toolbar container\n         */\n        hideForm: function () {\n            if (this.hasForm) {\n                this.getForm().classList.remove(this.activeClass);\n            }\n        },\n\n        /************************ Helpers ************************\n         * The following are helpers that are either set by MediumEditor\n         * during initialization, or are helper methods which either\n         * route calls to the MediumEditor instance or provide common\n         * functionality for all form extensions\n         *********************************************************/\n\n        /* showToolbarDefaultActions: [function ()]\n         *\n         * Helper method which will turn back the toolbar after canceling\n         * the customized form\n         */\n        showToolbarDefaultActions: function () {\n            var toolbar = this.base.getExtensionByName('toolbar');\n            if (toolbar) {\n                toolbar.showToolbarDefaultActions();\n            }\n        },\n\n        /* hideToolbarDefaultActions: [function ()]\n         *\n         * Helper function which will hide the default contents of the\n         * toolbar, but leave the toolbar container in the same state\n         * to allow a form to display its custom contents inside the toolbar\n         */\n        hideToolbarDefaultActions: function () {\n            var toolbar = this.base.getExtensionByName('toolbar');\n            if (toolbar) {\n                toolbar.hideToolbarDefaultActions();\n            }\n        },\n\n        /* setToolbarPosition: [function ()]\n         *\n         * Helper function which will update the size and position\n         * of the toolbar based on the toolbar content and the current\n         * position of the user's selection\n         */\n        setToolbarPosition: function () {\n            var toolbar = this.base.getExtensionByName('toolbar');\n            if (toolbar) {\n                toolbar.setToolbarPosition();\n            }\n        }\n    });\n\n    MediumEditor.extensions.form = FormExtension;\n})();\n(function () {\n    'use strict';\n\n    var AnchorForm = MediumEditor.extensions.form.extend({\n        /* Anchor Form Options */\n\n        /* customClassOption: [string]  (previously options.anchorButton + options.anchorButtonClass)\n         * Custom class name the user can optionally have added to their created links (ie 'button').\n         * If passed as a non-empty string, a checkbox will be displayed allowing the user to choose\n         * whether to have the class added to the created link or not.\n         */\n        customClassOption: null,\n\n        /* customClassOptionText: [string]\n         * text to be shown in the checkbox when the __customClassOption__ is being used.\n         */\n        customClassOptionText: 'Button',\n\n        /* linkValidation: [boolean]  (previously options.checkLinkFormat)\n         * enables/disables check for common URL protocols on anchor links.\n         */\n        linkValidation: false,\n\n        /* placeholderText: [string]  (previously options.anchorInputPlaceholder)\n         * text to be shown as placeholder of the anchor input.\n         */\n        placeholderText: 'Paste or type a link',\n\n        /* targetCheckbox: [boolean]  (previously options.anchorTarget)\n         * enables/disables displaying a \"Open in new window\" checkbox, which when checked\n         * changes the `target` attribute of the created link.\n         */\n        targetCheckbox: false,\n\n        /* targetCheckboxText: [string]  (previously options.anchorInputCheckboxLabel)\n         * text to be shown in the checkbox enabled via the __targetCheckbox__ option.\n         */\n        targetCheckboxText: 'Open in new window',\n\n        // Options for the Button base class\n        name: 'anchor',\n        action: 'createLink',\n        aria: 'link',\n        tagNames: ['a'],\n        contentDefault: '<b>#</b>',\n        contentFA: '<i class=\"fa fa-link\"></i>',\n\n        init: function () {\n            MediumEditor.extensions.form.prototype.init.apply(this, arguments);\n\n            this.subscribe('editableKeydown', this.handleKeydown.bind(this));\n        },\n\n        // Called when the button the toolbar is clicked\n        // Overrides ButtonExtension.handleClick\n        handleClick: function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            var range = MediumEditor.selection.getSelectionRange(this.document);\n\n            if (range.startContainer.nodeName.toLowerCase() === 'a' ||\n                range.endContainer.nodeName.toLowerCase() === 'a' ||\n                MediumEditor.util.getClosestTag(MediumEditor.selection.getSelectedParentElement(range), 'a')) {\n                return this.execAction('unlink');\n            }\n\n            if (!this.isDisplayed()) {\n                this.showForm();\n            }\n\n            return false;\n        },\n\n        // Called when user hits the defined shortcut (CTRL / COMMAND + K)\n        handleKeydown: function (event) {\n            if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.K) && MediumEditor.util.isMetaCtrlKey(event) && !event.shiftKey) {\n                this.handleClick(event);\n            }\n        },\n\n        // Called by medium-editor to append form to the toolbar\n        getForm: function () {\n            if (!this.form) {\n                this.form = this.createForm();\n            }\n            return this.form;\n        },\n\n        getTemplate: function () {\n            var template = [\n                '<input type=\"text\" class=\"medium-editor-toolbar-input\" placeholder=\"', this.placeholderText, '\">'\n            ];\n\n            template.push(\n                '<a href=\"#\" class=\"medium-editor-toolbar-save\">',\n                this.getEditorOption('buttonLabels') === 'fontawesome' ? '<i class=\"fa fa-check\"></i>' : this.formSaveLabel,\n                '</a>'\n            );\n\n            template.push('<a href=\"#\" class=\"medium-editor-toolbar-close\">',\n                this.getEditorOption('buttonLabels') === 'fontawesome' ? '<i class=\"fa fa-times\"></i>' : this.formCloseLabel,\n                '</a>');\n\n            // both of these options are slightly moot with the ability to\n            // override the various form buildup/serialize functions.\n\n            if (this.targetCheckbox) {\n                // fixme: ideally, this targetCheckboxText would be a formLabel too,\n                // figure out how to deprecate? also consider `fa-` icon default implcations.\n                template.push(\n                    '<div class=\"medium-editor-toolbar-form-row\">',\n                    '<input type=\"checkbox\" class=\"medium-editor-toolbar-anchor-target\" id=\"medium-editor-toolbar-anchor-target-field-' + this.getEditorId() + '\">',\n                    '<label for=\"medium-editor-toolbar-anchor-target-field-' + this.getEditorId() + '\">',\n                    this.targetCheckboxText,\n                    '</label>',\n                    '</div>'\n                );\n            }\n\n            if (this.customClassOption) {\n                // fixme: expose this `Button` text as a formLabel property, too\n                // and provide similar access to a `fa-` icon default.\n                template.push(\n                    '<div class=\"medium-editor-toolbar-form-row\">',\n                    '<input type=\"checkbox\" class=\"medium-editor-toolbar-anchor-button\">',\n                    '<label>',\n                    this.customClassOptionText,\n                    '</label>',\n                    '</div>'\n                );\n            }\n\n            return template.join('');\n\n        },\n\n        // Used by medium-editor when the default toolbar is to be displayed\n        isDisplayed: function () {\n            return MediumEditor.extensions.form.prototype.isDisplayed.apply(this);\n        },\n\n        hideForm: function () {\n            MediumEditor.extensions.form.prototype.hideForm.apply(this);\n            this.getInput().value = '';\n        },\n\n        showForm: function (opts) {\n            var input = this.getInput(),\n                targetCheckbox = this.getAnchorTargetCheckbox(),\n                buttonCheckbox = this.getAnchorButtonCheckbox();\n\n            opts = opts || { value: '' };\n            // TODO: This is for backwards compatability\n            // We don't need to support the 'string' argument in 6.0.0\n            if (typeof opts === 'string') {\n                opts = {\n                    value: opts\n                };\n            }\n\n            this.base.saveSelection();\n            this.hideToolbarDefaultActions();\n            MediumEditor.extensions.form.prototype.showForm.apply(this);\n            this.setToolbarPosition();\n\n            input.value = opts.value;\n            input.focus();\n\n            // If we have a target checkbox, we want it to be checked/unchecked\n            // based on whether the existing link has target=_blank\n            if (targetCheckbox) {\n                targetCheckbox.checked = opts.target === '_blank';\n            }\n\n            // If we have a custom class checkbox, we want it to be checked/unchecked\n            // based on whether an existing link already has the class\n            if (buttonCheckbox) {\n                var classList = opts.buttonClass ? opts.buttonClass.split(' ') : [];\n                buttonCheckbox.checked = (classList.indexOf(this.customClassOption) !== -1);\n            }\n        },\n\n        // Called by core when tearing down medium-editor (destroy)\n        destroy: function () {\n            if (!this.form) {\n                return false;\n            }\n\n            if (this.form.parentNode) {\n                this.form.parentNode.removeChild(this.form);\n            }\n\n            delete this.form;\n        },\n\n        // core methods\n\n        getFormOpts: function () {\n            // no notion of private functions? wanted `_getFormOpts`\n            var targetCheckbox = this.getAnchorTargetCheckbox(),\n                buttonCheckbox = this.getAnchorButtonCheckbox(),\n                opts = {\n                    value: this.getInput().value.trim()\n                };\n\n            if (this.linkValidation) {\n                opts.value = this.checkLinkFormat(opts.value);\n            }\n\n            opts.target = '_self';\n            if (targetCheckbox && targetCheckbox.checked) {\n                opts.target = '_blank';\n            }\n\n            if (buttonCheckbox && buttonCheckbox.checked) {\n                opts.buttonClass = this.customClassOption;\n            }\n\n            return opts;\n        },\n\n        doFormSave: function () {\n            var opts = this.getFormOpts();\n            this.completeFormSave(opts);\n        },\n\n        completeFormSave: function (opts) {\n            this.base.restoreSelection();\n            this.execAction(this.action, opts);\n            this.base.checkSelection();\n        },\n\n        ensureEncodedUri: function (str) {\n            return str === decodeURI(str) ? encodeURI(str) : str;\n        },\n\n        ensureEncodedUriComponent: function (str) {\n            return str === decodeURIComponent(str) ? encodeURIComponent(str) : str;\n        },\n\n        ensureEncodedParam: function (param) {\n            var split = param.split('='),\n                key = split[0],\n                val = split[1];\n\n            return key + (val === undefined ? '' : '=' + this.ensureEncodedUriComponent(val));\n        },\n\n        ensureEncodedQuery: function (queryString) {\n            return queryString.split('&').map(this.ensureEncodedParam.bind(this)).join('&');\n        },\n\n        checkLinkFormat: function (value) {\n            // Matches any alphabetical characters followed by ://\n            // Matches protocol relative \"//\"\n            // Matches common external protocols \"mailto:\" \"tel:\" \"maps:\"\n            // Matches relative hash link, begins with \"#\"\n            var urlSchemeRegex = /^([a-z]+:)?\\/\\/|^(mailto|tel|maps):|^\\#/i,\n                hasScheme = urlSchemeRegex.test(value),\n                scheme = '',\n                // telRegex is a regex for checking if the string is a telephone number\n                telRegex = /^\\+?\\s?\\(?(?:\\d\\s?\\-?\\)?){3,20}$/,\n                urlParts = value.match(/^(.*?)(?:\\?(.*?))?(?:#(.*))?$/),\n                path = urlParts[1],\n                query = urlParts[2],\n                fragment = urlParts[3];\n\n            if (telRegex.test(value)) {\n                return 'tel:' + value;\n            }\n\n            if (!hasScheme) {\n                var host = path.split('/')[0];\n                // if the host part of the path looks like a hostname\n                if (host.match(/.+(\\.|:).+/) || host === 'localhost') {\n                    scheme = 'http://';\n                }\n            }\n\n            return scheme +\n                // Ensure path is encoded\n                this.ensureEncodedUri(path) +\n                // Ensure query is encoded\n                (query === undefined ? '' : '?' + this.ensureEncodedQuery(query)) +\n                // Include fragment unencoded as encodeUriComponent is too\n                // heavy handed for the many characters allowed in a fragment\n                (fragment === undefined ? '' : '#' + fragment);\n        },\n\n        doFormCancel: function () {\n            this.base.restoreSelection();\n            this.base.checkSelection();\n        },\n\n        // form creation and event handling\n        attachFormEvents: function (form) {\n            var close = form.querySelector('.medium-editor-toolbar-close'),\n                save = form.querySelector('.medium-editor-toolbar-save'),\n                input = form.querySelector('.medium-editor-toolbar-input');\n\n            // Handle clicks on the form itself\n            this.on(form, 'click', this.handleFormClick.bind(this));\n\n            // Handle typing in the textbox\n            this.on(input, 'keyup', this.handleTextboxKeyup.bind(this));\n\n            // Handle close button clicks\n            this.on(close, 'click', this.handleCloseClick.bind(this));\n\n            // Handle save button clicks (capture)\n            this.on(save, 'click', this.handleSaveClick.bind(this), true);\n\n        },\n\n        createForm: function () {\n            var doc = this.document,\n                form = doc.createElement('div');\n\n            // Anchor Form (div)\n            form.className = 'medium-editor-toolbar-form';\n            form.id = 'medium-editor-toolbar-form-anchor-' + this.getEditorId();\n            form.innerHTML = this.getTemplate();\n            this.attachFormEvents(form);\n\n            return form;\n        },\n\n        getInput: function () {\n            return this.getForm().querySelector('input.medium-editor-toolbar-input');\n        },\n\n        getAnchorTargetCheckbox: function () {\n            return this.getForm().querySelector('.medium-editor-toolbar-anchor-target');\n        },\n\n        getAnchorButtonCheckbox: function () {\n            return this.getForm().querySelector('.medium-editor-toolbar-anchor-button');\n        },\n\n        handleTextboxKeyup: function (event) {\n            // For ENTER -> create the anchor\n            if (event.keyCode === MediumEditor.util.keyCode.ENTER) {\n                event.preventDefault();\n                this.doFormSave();\n                return;\n            }\n\n            // For ESCAPE -> close the form\n            if (event.keyCode === MediumEditor.util.keyCode.ESCAPE) {\n                event.preventDefault();\n                this.doFormCancel();\n            }\n        },\n\n        handleFormClick: function (event) {\n            // make sure not to hide form when clicking inside the form\n            event.stopPropagation();\n        },\n\n        handleSaveClick: function (event) {\n            // Clicking Save -> create the anchor\n            event.preventDefault();\n            this.doFormSave();\n        },\n\n        handleCloseClick: function (event) {\n            // Click Close -> close the form\n            event.preventDefault();\n            this.doFormCancel();\n        }\n    });\n\n    MediumEditor.extensions.anchor = AnchorForm;\n}());\n\n(function () {\n    'use strict';\n\n    var AnchorPreview = MediumEditor.Extension.extend({\n        name: 'anchor-preview',\n\n        // Anchor Preview Options\n\n        /* hideDelay: [number]  (previously options.anchorPreviewHideDelay)\n         * time in milliseconds to show the anchor tag preview after the mouse has left the anchor tag.\n         */\n        hideDelay: 500,\n\n        /* previewValueSelector: [string]\n         * the default selector to locate where to put the activeAnchor value in the preview\n         */\n        previewValueSelector: 'a',\n\n        /* showWhenToolbarIsVisible: [boolean]\n         * determines whether the anchor tag preview shows up when the toolbar is visible\n         */\n        showWhenToolbarIsVisible: false,\n\n        /* showOnEmptyLinks: [boolean]\n        * determines whether the anchor tag preview shows up on links with href=\"\" or href=\"#something\"\n        */\n        showOnEmptyLinks: true,\n\n        init: function () {\n            this.anchorPreview = this.createPreview();\n\n            this.getEditorOption('elementsContainer').appendChild(this.anchorPreview);\n\n            this.attachToEditables();\n        },\n\n        getInteractionElements: function () {\n            return this.getPreviewElement();\n        },\n\n        // TODO: Remove this function in 6.0.0\n        getPreviewElement: function () {\n            return this.anchorPreview;\n        },\n\n        createPreview: function () {\n            var el = this.document.createElement('div');\n\n            el.id = 'medium-editor-anchor-preview-' + this.getEditorId();\n            el.className = 'medium-editor-anchor-preview';\n            el.innerHTML = this.getTemplate();\n\n            this.on(el, 'click', this.handleClick.bind(this));\n\n            return el;\n        },\n\n        getTemplate: function () {\n            return '<div class=\"medium-editor-toolbar-anchor-preview\" id=\"medium-editor-toolbar-anchor-preview\">' +\n                '    <a class=\"medium-editor-toolbar-anchor-preview-inner\"></a>' +\n                '</div>';\n        },\n\n        destroy: function () {\n            if (this.anchorPreview) {\n                if (this.anchorPreview.parentNode) {\n                    this.anchorPreview.parentNode.removeChild(this.anchorPreview);\n                }\n                delete this.anchorPreview;\n            }\n        },\n\n        hidePreview: function () {\n            if (this.anchorPreview) {\n                this.anchorPreview.classList.remove('medium-editor-anchor-preview-active');\n            }\n            this.activeAnchor = null;\n        },\n\n        showPreview: function (anchorEl) {\n            if (this.anchorPreview.classList.contains('medium-editor-anchor-preview-active') ||\n                    anchorEl.getAttribute('data-disable-preview')) {\n                return true;\n            }\n\n            if (this.previewValueSelector) {\n                this.anchorPreview.querySelector(this.previewValueSelector).textContent = anchorEl.attributes.href.value;\n                this.anchorPreview.querySelector(this.previewValueSelector).href = anchorEl.attributes.href.value;\n            }\n\n            this.anchorPreview.classList.add('medium-toolbar-arrow-over');\n            this.anchorPreview.classList.remove('medium-toolbar-arrow-under');\n\n            if (!this.anchorPreview.classList.contains('medium-editor-anchor-preview-active')) {\n                this.anchorPreview.classList.add('medium-editor-anchor-preview-active');\n            }\n\n            this.activeAnchor = anchorEl;\n\n            this.positionPreview();\n            this.attachPreviewHandlers();\n\n            return this;\n        },\n\n        positionPreview: function (activeAnchor) {\n            activeAnchor = activeAnchor || this.activeAnchor;\n            var containerWidth = this.window.innerWidth,\n                buttonHeight = this.anchorPreview.offsetHeight,\n                boundary = activeAnchor.getBoundingClientRect(),\n                diffLeft = this.diffLeft,\n                diffTop = this.diffTop,\n                elementsContainer = this.getEditorOption('elementsContainer'),\n                elementsContainerAbsolute = ['absolute', 'fixed'].indexOf(window.getComputedStyle(elementsContainer).getPropertyValue('position')) > -1,\n                relativeBoundary = {},\n                halfOffsetWidth, defaultLeft, middleBoundary, elementsContainerBoundary, top;\n\n            halfOffsetWidth = this.anchorPreview.offsetWidth / 2;\n            var toolbarExtension = this.base.getExtensionByName('toolbar');\n            if (toolbarExtension) {\n                diffLeft = toolbarExtension.diffLeft;\n                diffTop = toolbarExtension.diffTop;\n            }\n            defaultLeft = diffLeft - halfOffsetWidth;\n\n            // If container element is absolute / fixed, recalculate boundaries to be relative to the container\n            if (elementsContainerAbsolute) {\n                elementsContainerBoundary = elementsContainer.getBoundingClientRect();\n                ['top', 'left'].forEach(function (key) {\n                    relativeBoundary[key] = boundary[key] - elementsContainerBoundary[key];\n                });\n\n                relativeBoundary.width = boundary.width;\n                relativeBoundary.height = boundary.height;\n                boundary = relativeBoundary;\n\n                containerWidth = elementsContainerBoundary.width;\n\n                // Adjust top position according to container scroll position\n                top = elementsContainer.scrollTop;\n            } else {\n                // Adjust top position according to window scroll position\n                top = this.window.pageYOffset;\n            }\n\n            middleBoundary = boundary.left + boundary.width / 2;\n            top += buttonHeight + boundary.top + boundary.height - diffTop - this.anchorPreview.offsetHeight;\n\n            this.anchorPreview.style.top = Math.round(top) + 'px';\n            this.anchorPreview.style.right = 'initial';\n            if (middleBoundary < halfOffsetWidth) {\n                this.anchorPreview.style.left = defaultLeft + halfOffsetWidth + 'px';\n                this.anchorPreview.style.right = 'initial';\n            } else if ((containerWidth - middleBoundary) < halfOffsetWidth) {\n                this.anchorPreview.style.left = 'auto';\n                this.anchorPreview.style.right = 0;\n            } else {\n                this.anchorPreview.style.left = defaultLeft + middleBoundary + 'px';\n                this.anchorPreview.style.right = 'initial';\n            }\n        },\n\n        attachToEditables: function () {\n            this.subscribe('editableMouseover', this.handleEditableMouseover.bind(this));\n            this.subscribe('positionedToolbar', this.handlePositionedToolbar.bind(this));\n        },\n\n        handlePositionedToolbar: function () {\n            // If the toolbar is visible and positioned, we don't need to hide the preview\n            // when showWhenToolbarIsVisible is true\n            if (!this.showWhenToolbarIsVisible) {\n                this.hidePreview();\n            }\n        },\n\n        handleClick: function (event) {\n            var anchorExtension = this.base.getExtensionByName('anchor'),\n                activeAnchor = this.activeAnchor;\n\n            if (anchorExtension && activeAnchor) {\n                event.preventDefault();\n\n                this.base.selectElement(this.activeAnchor);\n\n                // Using setTimeout + delay because:\n                // We may actually be displaying the anchor form, which should be controlled by delay\n                this.base.delay(function () {\n                    if (activeAnchor) {\n                        var opts = {\n                            value: activeAnchor.attributes.href.value,\n                            target: activeAnchor.getAttribute('target'),\n                            buttonClass: activeAnchor.getAttribute('class')\n                        };\n                        anchorExtension.showForm(opts);\n                        activeAnchor = null;\n                    }\n                }.bind(this));\n            }\n\n            this.hidePreview();\n        },\n\n        handleAnchorMouseout: function () {\n            this.anchorToPreview = null;\n            this.off(this.activeAnchor, 'mouseout', this.instanceHandleAnchorMouseout);\n            this.instanceHandleAnchorMouseout = null;\n        },\n\n        handleEditableMouseover: function (event) {\n            var target = MediumEditor.util.getClosestTag(event.target, 'a');\n\n            if (false === target) {\n                return;\n            }\n\n            // Detect empty href attributes\n            // The browser will make href=\"\" or href=\"#top\"\n            // into absolute urls when accessed as event.target.href, so check the html\n            if (!this.showOnEmptyLinks &&\n                (!/href=[\"']\\S+[\"']/.test(target.outerHTML) || /href=[\"']#\\S+[\"']/.test(target.outerHTML))) {\n                return true;\n            }\n\n            // only show when toolbar is not present\n            var toolbar = this.base.getExtensionByName('toolbar');\n            if (!this.showWhenToolbarIsVisible && toolbar && toolbar.isDisplayed && toolbar.isDisplayed()) {\n                return true;\n            }\n\n            // detach handler for other anchor in case we hovered multiple anchors quickly\n            if (this.activeAnchor && this.activeAnchor !== target) {\n                this.detachPreviewHandlers();\n            }\n\n            this.anchorToPreview = target;\n\n            this.instanceHandleAnchorMouseout = this.handleAnchorMouseout.bind(this);\n            this.on(this.anchorToPreview, 'mouseout', this.instanceHandleAnchorMouseout);\n            // Using setTimeout + delay because:\n            // - We're going to show the anchor preview according to the configured delay\n            //   if the mouse has not left the anchor tag in that time\n            this.base.delay(function () {\n                if (this.anchorToPreview) {\n                    this.showPreview(this.anchorToPreview);\n                }\n            }.bind(this));\n        },\n\n        handlePreviewMouseover: function () {\n            this.lastOver = (new Date()).getTime();\n            this.hovering = true;\n        },\n\n        handlePreviewMouseout: function (event) {\n            if (!event.relatedTarget || !/anchor-preview/.test(event.relatedTarget.className)) {\n                this.hovering = false;\n            }\n        },\n\n        updatePreview: function () {\n            if (this.hovering) {\n                return true;\n            }\n            var durr = (new Date()).getTime() - this.lastOver;\n            if (durr > this.hideDelay) {\n                // hide the preview 1/2 second after mouse leaves the link\n                this.detachPreviewHandlers();\n            }\n        },\n\n        detachPreviewHandlers: function () {\n            // cleanup\n            clearInterval(this.intervalTimer);\n            if (this.instanceHandlePreviewMouseover) {\n                this.off(this.anchorPreview, 'mouseover', this.instanceHandlePreviewMouseover);\n                this.off(this.anchorPreview, 'mouseout', this.instanceHandlePreviewMouseout);\n                if (this.activeAnchor) {\n                    this.off(this.activeAnchor, 'mouseover', this.instanceHandlePreviewMouseover);\n                    this.off(this.activeAnchor, 'mouseout', this.instanceHandlePreviewMouseout);\n                }\n            }\n\n            this.hidePreview();\n\n            this.hovering = this.instanceHandlePreviewMouseover = this.instanceHandlePreviewMouseout = null;\n        },\n\n        // TODO: break up method and extract out handlers\n        attachPreviewHandlers: function () {\n            this.lastOver = (new Date()).getTime();\n            this.hovering = true;\n\n            this.instanceHandlePreviewMouseover = this.handlePreviewMouseover.bind(this);\n            this.instanceHandlePreviewMouseout = this.handlePreviewMouseout.bind(this);\n\n            this.intervalTimer = setInterval(this.updatePreview.bind(this), 200);\n\n            this.on(this.anchorPreview, 'mouseover', this.instanceHandlePreviewMouseover);\n            this.on(this.anchorPreview, 'mouseout', this.instanceHandlePreviewMouseout);\n            this.on(this.activeAnchor, 'mouseover', this.instanceHandlePreviewMouseover);\n            this.on(this.activeAnchor, 'mouseout', this.instanceHandlePreviewMouseout);\n        }\n    });\n\n    MediumEditor.extensions.anchorPreview = AnchorPreview;\n}());\n\n(function () {\n    'use strict';\n\n    var WHITESPACE_CHARS,\n        KNOWN_TLDS_FRAGMENT,\n        LINK_REGEXP_TEXT,\n        KNOWN_TLDS_REGEXP,\n        LINK_REGEXP;\n\n    WHITESPACE_CHARS = [' ', '\\t', '\\n', '\\r', '\\u00A0', '\\u2000', '\\u2001', '\\u2002', '\\u2003',\n                                    '\\u2028', '\\u2029'];\n    KNOWN_TLDS_FRAGMENT = 'com|net|org|edu|gov|mil|aero|asia|biz|cat|coop|info|int|jobs|mobi|museum|name|post|pro|tel|travel|' +\n        'xxx|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|' +\n        'bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cs|cu|cv|cx|cy|cz|dd|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|' +\n        'fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|' +\n        'is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|' +\n        'mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|' +\n        'pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|ja|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|' +\n        'tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|yu|za|zm|zw';\n\n    LINK_REGEXP_TEXT =\n        '(' +\n        // Version of Gruber URL Regexp optimized for JS: http://stackoverflow.com/a/17733640\n        '((?:(https?://|ftps?://|nntp://)|www\\\\d{0,3}[.]|[a-z0-9.\\\\-]+[.](' + KNOWN_TLDS_FRAGMENT + ')\\\\\\/)\\\\S+(?:[^\\\\s`!\\\\[\\\\]{};:\\'\\\".,?\\u00AB\\u00BB\\u201C\\u201D\\u2018\\u2019]))' +\n        // Addition to above Regexp to support bare domains/one level subdomains with common non-i18n TLDs and without www prefix:\n        ')|(([a-z0-9\\\\-]+\\\\.)?[a-z0-9\\\\-]+\\\\.(' + KNOWN_TLDS_FRAGMENT + '))';\n\n    KNOWN_TLDS_REGEXP = new RegExp('^(' + KNOWN_TLDS_FRAGMENT + ')$', 'i');\n\n    LINK_REGEXP = new RegExp(LINK_REGEXP_TEXT, 'gi');\n\n    function nodeIsNotInsideAnchorTag(node) {\n        return !MediumEditor.util.getClosestTag(node, 'a');\n    }\n\n    var AutoLink = MediumEditor.Extension.extend({\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.disableEventHandling = false;\n            this.subscribe('editableKeypress', this.onKeypress.bind(this));\n            this.subscribe('editableBlur', this.onBlur.bind(this));\n            // MS IE has it's own auto-URL detect feature but ours is better in some ways. Be consistent.\n            this.document.execCommand('AutoUrlDetect', false, false);\n        },\n\n        isLastInstance: function () {\n            var activeInstances = 0;\n            for (var i = 0; i < this.window._mediumEditors.length; i++) {\n                var editor = this.window._mediumEditors[i];\n                if (editor !== null && editor.getExtensionByName('autoLink') !== undefined) {\n                    activeInstances++;\n                }\n            }\n            return activeInstances === 1;\n        },\n\n        destroy: function () {\n            // Turn AutoUrlDetect back on\n            if (this.document.queryCommandSupported('AutoUrlDetect') && this.isLastInstance()) {\n                this.document.execCommand('AutoUrlDetect', false, true);\n            }\n        },\n\n        onBlur: function (blurEvent, editable) {\n            this.performLinking(editable);\n        },\n\n        onKeypress: function (keyPressEvent) {\n            if (this.disableEventHandling) {\n                return;\n            }\n\n            if (MediumEditor.util.isKey(keyPressEvent, [MediumEditor.util.keyCode.SPACE, MediumEditor.util.keyCode.ENTER])) {\n                clearTimeout(this.performLinkingTimeout);\n                // Saving/restoring the selection in the middle of a keypress doesn't work well...\n                this.performLinkingTimeout = setTimeout(function () {\n                    try {\n                        var sel = this.base.exportSelection();\n                        if (this.performLinking(keyPressEvent.target)) {\n                            // pass true for favorLaterSelectionAnchor - this is needed for links at the end of a\n                            // paragraph in MS IE, or MS IE causes the link to be deleted right after adding it.\n                            this.base.importSelection(sel, true);\n                        }\n                    } catch (e) {\n                        if (window.console) {\n                            window.console.error('Failed to perform linking', e);\n                        }\n                        this.disableEventHandling = true;\n                    }\n                }.bind(this), 0);\n            }\n        },\n\n        performLinking: function (contenteditable) {\n            /*\n            Perform linking on blockElement basis, blockElements are HTML elements with text content and without\n            child element.\n\n            Example:\n            - HTML content\n            <blockquote>\n              <p>link.</p>\n              <p>my</p>\n            </blockquote>\n\n            - blockElements\n            [<p>link.</p>, <p>my</p>]\n\n            otherwise the detection can wrongly find the end of one paragraph and the beginning of another paragraph\n            to constitute a link, such as a paragraph ending \"link.\" and the next paragraph beginning with \"my\" is\n            interpreted into \"link.my\" and the code tries to create a link across blockElements - which doesn't work\n            and is terrible.\n            (Medium deletes the spaces/returns between P tags so the textContent ends up without paragraph spacing)\n            */\n            var blockElements = MediumEditor.util.splitByBlockElements(contenteditable),\n                documentModified = false;\n            if (blockElements.length === 0) {\n                blockElements = [contenteditable];\n            }\n            for (var i = 0; i < blockElements.length; i++) {\n                documentModified = this.removeObsoleteAutoLinkSpans(blockElements[i]) || documentModified;\n                documentModified = this.performLinkingWithinElement(blockElements[i]) || documentModified;\n            }\n            this.base.events.updateInput(contenteditable, { target: contenteditable, currentTarget: contenteditable });\n            return documentModified;\n        },\n\n        removeObsoleteAutoLinkSpans: function (element) {\n            if (!element || element.nodeType === 3) {\n                return false;\n            }\n\n            var spans = element.querySelectorAll('span[data-auto-link=\"true\"]'),\n                documentModified = false;\n\n            for (var i = 0; i < spans.length; i++) {\n                var textContent = spans[i].textContent;\n                if (textContent.indexOf('://') === -1) {\n                    textContent = MediumEditor.util.ensureUrlHasProtocol(textContent);\n                }\n                if (spans[i].getAttribute('data-href') !== textContent && nodeIsNotInsideAnchorTag(spans[i])) {\n                    documentModified = true;\n                    var trimmedTextContent = textContent.replace(/\\s+$/, '');\n                    if (spans[i].getAttribute('data-href') === trimmedTextContent) {\n                        var charactersTrimmed = textContent.length - trimmedTextContent.length,\n                            subtree = MediumEditor.util.splitOffDOMTree(spans[i], this.splitTextBeforeEnd(spans[i], charactersTrimmed));\n                        spans[i].parentNode.insertBefore(subtree, spans[i].nextSibling);\n                    } else {\n                        // Some editing has happened to the span, so just remove it entirely. The user can put it back\n                        // around just the href content if they need to prevent it from linking\n                        MediumEditor.util.unwrap(spans[i], this.document);\n                    }\n                }\n            }\n            return documentModified;\n        },\n\n        splitTextBeforeEnd: function (element, characterCount) {\n            var treeWalker = this.document.createTreeWalker(element, NodeFilter.SHOW_TEXT, null, false),\n                lastChildNotExhausted = true;\n\n            // Start the tree walker at the last descendant of the span\n            while (lastChildNotExhausted) {\n                lastChildNotExhausted = treeWalker.lastChild() !== null;\n            }\n\n            var currentNode,\n                currentNodeValue,\n                previousNode;\n            while (characterCount > 0 && previousNode !== null) {\n                currentNode = treeWalker.currentNode;\n                currentNodeValue = currentNode.nodeValue;\n                if (currentNodeValue.length > characterCount) {\n                    previousNode = currentNode.splitText(currentNodeValue.length - characterCount);\n                    characterCount = 0;\n                } else {\n                    previousNode = treeWalker.previousNode();\n                    characterCount -= currentNodeValue.length;\n                }\n            }\n            return previousNode;\n        },\n\n        performLinkingWithinElement: function (element) {\n            var matches = this.findLinkableText(element),\n                linkCreated = false;\n\n            for (var matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n                var matchingTextNodes = MediumEditor.util.findOrCreateMatchingTextNodes(this.document, element,\n                        matches[matchIndex]);\n                if (this.shouldNotLink(matchingTextNodes)) {\n                    continue;\n                }\n                this.createAutoLink(matchingTextNodes, matches[matchIndex].href);\n            }\n            return linkCreated;\n        },\n\n        shouldNotLink: function (textNodes) {\n            var shouldNotLink = false;\n            for (var i = 0; i < textNodes.length && shouldNotLink === false; i++) {\n                // Do not link if the text node is either inside an anchor or inside span[data-auto-link]\n                shouldNotLink = !!MediumEditor.util.traverseUp(textNodes[i], function (node) {\n                    return node.nodeName.toLowerCase() === 'a' ||\n                        (node.getAttribute && node.getAttribute('data-auto-link') === 'true');\n                });\n            }\n            return shouldNotLink;\n        },\n\n        findLinkableText: function (contenteditable) {\n            var textContent = contenteditable.textContent,\n                match = null,\n                matches = [];\n\n            while ((match = LINK_REGEXP.exec(textContent)) !== null) {\n                var matchOk = true,\n                    matchEnd = match.index + match[0].length;\n                // If the regexp detected something as a link that has text immediately preceding/following it, bail out.\n                matchOk = (match.index === 0 || WHITESPACE_CHARS.indexOf(textContent[match.index - 1]) !== -1) &&\n                    (matchEnd === textContent.length || WHITESPACE_CHARS.indexOf(textContent[matchEnd]) !== -1);\n                // If the regexp detected a bare domain that doesn't use one of our expected TLDs, bail out.\n                matchOk = matchOk && (match[0].indexOf('/') !== -1 ||\n                    KNOWN_TLDS_REGEXP.test(match[0].split('.').pop().split('?').shift()));\n\n                if (matchOk) {\n                    matches.push({\n                        href: match[0],\n                        start: match.index,\n                        end: matchEnd\n                    });\n                }\n            }\n            return matches;\n        },\n\n        createAutoLink: function (textNodes, href) {\n            href = MediumEditor.util.ensureUrlHasProtocol(href);\n            var anchor = MediumEditor.util.createLink(this.document, textNodes, href, this.getEditorOption('targetBlank') ? '_blank' : null),\n                span = this.document.createElement('span');\n            span.setAttribute('data-auto-link', 'true');\n            span.setAttribute('data-href', href);\n            anchor.insertBefore(span, anchor.firstChild);\n            while (anchor.childNodes.length > 1) {\n                span.appendChild(anchor.childNodes[1]);\n            }\n        }\n\n    });\n\n    MediumEditor.extensions.autoLink = AutoLink;\n}());\n\n(function () {\n    'use strict';\n\n    var CLASS_DRAG_OVER = 'medium-editor-dragover';\n\n    function clearClassNames(element) {\n        var editable = MediumEditor.util.getContainerEditorElement(element),\n            existing = Array.prototype.slice.call(editable.parentElement.querySelectorAll('.' + CLASS_DRAG_OVER));\n\n        existing.forEach(function (el) {\n            el.classList.remove(CLASS_DRAG_OVER);\n        });\n    }\n\n    var FileDragging = MediumEditor.Extension.extend({\n        name: 'fileDragging',\n\n        allowedTypes: ['image'],\n\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.subscribe('editableDrag', this.handleDrag.bind(this));\n            this.subscribe('editableDrop', this.handleDrop.bind(this));\n        },\n\n        handleDrag: function (event) {\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n\n            var target = event.target.classList ? event.target : event.target.parentElement;\n\n            // Ensure the class gets removed from anything that had it before\n            clearClassNames(target);\n\n            if (event.type === 'dragover') {\n                target.classList.add(CLASS_DRAG_OVER);\n            }\n        },\n\n        handleDrop: function (event) {\n            // Prevent file from opening in the current window\n            event.preventDefault();\n            event.stopPropagation();\n            // Select the dropping target, and set the selection to the end of the target\n            // https://github.com/yabwe/medium-editor/issues/980\n            this.base.selectElement(event.target);\n            var selection = this.base.exportSelection();\n            selection.start = selection.end;\n            this.base.importSelection(selection);\n            // IE9 does not support the File API, so prevent file from opening in the window\n            // but also don't try to actually get the file\n            if (event.dataTransfer.files) {\n                Array.prototype.slice.call(event.dataTransfer.files).forEach(function (file) {\n                    if (this.isAllowedFile(file)) {\n                        if (file.type.match('image')) {\n                            this.insertImageFile(file);\n                        }\n                    }\n                }, this);\n            }\n\n            // Make sure we remove our class from everything\n            clearClassNames(event.target);\n        },\n\n        isAllowedFile: function (file) {\n            return this.allowedTypes.some(function (fileType) {\n                return !!file.type.match(fileType);\n            });\n        },\n\n        insertImageFile: function (file) {\n            if (typeof FileReader !== 'function') {\n                return;\n            }\n            var fileReader = new FileReader();\n            fileReader.readAsDataURL(file);\n\n            // attach the onload event handler, makes it easier to listen in with jasmine\n            fileReader.addEventListener('load', function (e) {\n                var addImageElement = this.document.createElement('img');\n                addImageElement.src = e.target.result;\n                MediumEditor.util.insertHTMLCommand(this.document, addImageElement.outerHTML);\n            }.bind(this));\n        }\n    });\n\n    MediumEditor.extensions.fileDragging = FileDragging;\n}());\n\n(function () {\n    'use strict';\n\n    var KeyboardCommands = MediumEditor.Extension.extend({\n        name: 'keyboard-commands',\n\n        /* KeyboardCommands Options */\n\n        /* commands: [Array]\n         * Array of objects describing each command and the combination of keys that will trigger it\n         * Required for each object:\n         *   command [String] (argument passed to editor.execAction())\n         *   key [String] (keyboard character that triggers this command)\n         *   meta [boolean] (whether the ctrl/meta key has to be active or inactive)\n         *   shift [boolean] (whether the shift key has to be active or inactive)\n         *   alt [boolean] (whether the alt key has to be active or inactive)\n         */\n        commands: [\n            {\n                command: 'bold',\n                key: 'B',\n                meta: true,\n                shift: false,\n                alt: false\n            },\n            {\n                command: 'italic',\n                key: 'I',\n                meta: true,\n                shift: false,\n                alt: false\n            },\n            {\n                command: 'underline',\n                key: 'U',\n                meta: true,\n                shift: false,\n                alt: false\n            }\n        ],\n\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.subscribe('editableKeydown', this.handleKeydown.bind(this));\n            this.keys = {};\n            this.commands.forEach(function (command) {\n                var keyCode = command.key.charCodeAt(0);\n                if (!this.keys[keyCode]) {\n                    this.keys[keyCode] = [];\n                }\n                this.keys[keyCode].push(command);\n            }, this);\n        },\n\n        handleKeydown: function (event) {\n            var keyCode = MediumEditor.util.getKeyCode(event);\n            if (!this.keys[keyCode]) {\n                return;\n            }\n\n            var isMeta = MediumEditor.util.isMetaCtrlKey(event),\n                isShift = !!event.shiftKey,\n                isAlt = !!event.altKey;\n\n            this.keys[keyCode].forEach(function (data) {\n                if (data.meta === isMeta &&\n                    data.shift === isShift &&\n                    (data.alt === isAlt ||\n                     undefined === data.alt)) { // TODO deprecated: remove check for undefined === data.alt when jumping to 6.0.0\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    // command can be a function to execute\n                    if (typeof data.command === 'function') {\n                        data.command.apply(this);\n                    }\n                    // command can be false so the shortcut is just disabled\n                    else if (false !== data.command) {\n                        this.execAction(data.command);\n                    }\n                }\n            }, this);\n        }\n    });\n\n    MediumEditor.extensions.keyboardCommands = KeyboardCommands;\n}());\n\n(function () {\n    'use strict';\n\n    var FontNameForm = MediumEditor.extensions.form.extend({\n\n        name: 'fontname',\n        action: 'fontName',\n        aria: 'change font name',\n        contentDefault: '&#xB1;', // ±\n        contentFA: '<i class=\"fa fa-font\"></i>',\n\n        fonts: ['', 'Arial', 'Verdana', 'Times New Roman'],\n\n        init: function () {\n            MediumEditor.extensions.form.prototype.init.apply(this, arguments);\n        },\n\n        // Called when the button the toolbar is clicked\n        // Overrides ButtonExtension.handleClick\n        handleClick: function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            if (!this.isDisplayed()) {\n                // Get FontName of current selection (convert to string since IE returns this as number)\n                var fontName = this.document.queryCommandValue('fontName') + '';\n                this.showForm(fontName);\n            }\n\n            return false;\n        },\n\n        // Called by medium-editor to append form to the toolbar\n        getForm: function () {\n            if (!this.form) {\n                this.form = this.createForm();\n            }\n            return this.form;\n        },\n\n        // Used by medium-editor when the default toolbar is to be displayed\n        isDisplayed: function () {\n            return this.getForm().style.display === 'block';\n        },\n\n        hideForm: function () {\n            this.getForm().style.display = 'none';\n            this.getSelect().value = '';\n        },\n\n        showForm: function (fontName) {\n            var select = this.getSelect();\n\n            this.base.saveSelection();\n            this.hideToolbarDefaultActions();\n            this.getForm().style.display = 'block';\n            this.setToolbarPosition();\n\n            select.value = fontName || '';\n            select.focus();\n        },\n\n        // Called by core when tearing down medium-editor (destroy)\n        destroy: function () {\n            if (!this.form) {\n                return false;\n            }\n\n            if (this.form.parentNode) {\n                this.form.parentNode.removeChild(this.form);\n            }\n\n            delete this.form;\n        },\n\n        // core methods\n\n        doFormSave: function () {\n            this.base.restoreSelection();\n            this.base.checkSelection();\n        },\n\n        doFormCancel: function () {\n            this.base.restoreSelection();\n            this.clearFontName();\n            this.base.checkSelection();\n        },\n\n        // form creation and event handling\n        createForm: function () {\n            var doc = this.document,\n                form = doc.createElement('div'),\n                select = doc.createElement('select'),\n                close = doc.createElement('a'),\n                save = doc.createElement('a'),\n                option;\n\n            // Font Name Form (div)\n            form.className = 'medium-editor-toolbar-form';\n            form.id = 'medium-editor-toolbar-form-fontname-' + this.getEditorId();\n\n            // Handle clicks on the form itself\n            this.on(form, 'click', this.handleFormClick.bind(this));\n\n            // Add font names\n            for (var i = 0; i<this.fonts.length; i++) {\n                option = doc.createElement('option');\n                option.innerHTML = this.fonts[i];\n                option.value = this.fonts[i];\n                select.appendChild(option);\n            }\n\n            select.className = 'medium-editor-toolbar-select';\n            form.appendChild(select);\n\n            // Handle typing in the textbox\n            this.on(select, 'change', this.handleFontChange.bind(this));\n\n            // Add save buton\n            save.setAttribute('href', '#');\n            save.className = 'medium-editor-toobar-save';\n            save.innerHTML = this.getEditorOption('buttonLabels') === 'fontawesome' ?\n                             '<i class=\"fa fa-check\"></i>' :\n                             '&#10003;';\n            form.appendChild(save);\n\n            // Handle save button clicks (capture)\n            this.on(save, 'click', this.handleSaveClick.bind(this), true);\n\n            // Add close button\n            close.setAttribute('href', '#');\n            close.className = 'medium-editor-toobar-close';\n            close.innerHTML = this.getEditorOption('buttonLabels') === 'fontawesome' ?\n                              '<i class=\"fa fa-times\"></i>' :\n                              '&times;';\n            form.appendChild(close);\n\n            // Handle close button clicks\n            this.on(close, 'click', this.handleCloseClick.bind(this));\n\n            return form;\n        },\n\n        getSelect: function () {\n            return this.getForm().querySelector('select.medium-editor-toolbar-select');\n        },\n\n        clearFontName: function () {\n            MediumEditor.selection.getSelectedElements(this.document).forEach(function (el) {\n                if (el.nodeName.toLowerCase() === 'font' && el.hasAttribute('face')) {\n                    el.removeAttribute('face');\n                }\n            });\n        },\n\n        handleFontChange: function () {\n            var font = this.getSelect().value;\n            if (font === '') {\n                this.clearFontName();\n            } else {\n                this.execAction('fontName', { value: font });\n            }\n        },\n\n        handleFormClick: function (event) {\n            // make sure not to hide form when clicking inside the form\n            event.stopPropagation();\n        },\n\n        handleSaveClick: function (event) {\n            // Clicking Save -> create the font size\n            event.preventDefault();\n            this.doFormSave();\n        },\n\n        handleCloseClick: function (event) {\n            // Click Close -> close the form\n            event.preventDefault();\n            this.doFormCancel();\n        }\n    });\n\n    MediumEditor.extensions.fontName = FontNameForm;\n}());\n\n(function () {\n    'use strict';\n\n    var FontSizeForm = MediumEditor.extensions.form.extend({\n\n        name: 'fontsize',\n        action: 'fontSize',\n        aria: 'increase/decrease font size',\n        contentDefault: '&#xB1;', // ±\n        contentFA: '<i class=\"fa fa-text-height\"></i>',\n\n        init: function () {\n            MediumEditor.extensions.form.prototype.init.apply(this, arguments);\n        },\n\n        // Called when the button the toolbar is clicked\n        // Overrides ButtonExtension.handleClick\n        handleClick: function (event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            if (!this.isDisplayed()) {\n                // Get fontsize of current selection (convert to string since IE returns this as number)\n                var fontSize = this.document.queryCommandValue('fontSize') + '';\n                this.showForm(fontSize);\n            }\n\n            return false;\n        },\n\n        // Called by medium-editor to append form to the toolbar\n        getForm: function () {\n            if (!this.form) {\n                this.form = this.createForm();\n            }\n            return this.form;\n        },\n\n        // Used by medium-editor when the default toolbar is to be displayed\n        isDisplayed: function () {\n            return this.getForm().style.display === 'block';\n        },\n\n        hideForm: function () {\n            this.getForm().style.display = 'none';\n            this.getInput().value = '';\n        },\n\n        showForm: function (fontSize) {\n            var input = this.getInput();\n\n            this.base.saveSelection();\n            this.hideToolbarDefaultActions();\n            this.getForm().style.display = 'block';\n            this.setToolbarPosition();\n\n            input.value = fontSize || '';\n            input.focus();\n        },\n\n        // Called by core when tearing down medium-editor (destroy)\n        destroy: function () {\n            if (!this.form) {\n                return false;\n            }\n\n            if (this.form.parentNode) {\n                this.form.parentNode.removeChild(this.form);\n            }\n\n            delete this.form;\n        },\n\n        // core methods\n\n        doFormSave: function () {\n            this.base.restoreSelection();\n            this.base.checkSelection();\n        },\n\n        doFormCancel: function () {\n            this.base.restoreSelection();\n            this.clearFontSize();\n            this.base.checkSelection();\n        },\n\n        // form creation and event handling\n        createForm: function () {\n            var doc = this.document,\n                form = doc.createElement('div'),\n                input = doc.createElement('input'),\n                close = doc.createElement('a'),\n                save = doc.createElement('a');\n\n            // Font Size Form (div)\n            form.className = 'medium-editor-toolbar-form';\n            form.id = 'medium-editor-toolbar-form-fontsize-' + this.getEditorId();\n\n            // Handle clicks on the form itself\n            this.on(form, 'click', this.handleFormClick.bind(this));\n\n            // Add font size slider\n            input.setAttribute('type', 'range');\n            input.setAttribute('min', '1');\n            input.setAttribute('max', '7');\n            input.className = 'medium-editor-toolbar-input';\n            form.appendChild(input);\n\n            // Handle typing in the textbox\n            this.on(input, 'change', this.handleSliderChange.bind(this));\n\n            // Add save buton\n            save.setAttribute('href', '#');\n            save.className = 'medium-editor-toobar-save';\n            save.innerHTML = this.getEditorOption('buttonLabels') === 'fontawesome' ?\n                             '<i class=\"fa fa-check\"></i>' :\n                             '&#10003;';\n            form.appendChild(save);\n\n            // Handle save button clicks (capture)\n            this.on(save, 'click', this.handleSaveClick.bind(this), true);\n\n            // Add close button\n            close.setAttribute('href', '#');\n            close.className = 'medium-editor-toobar-close';\n            close.innerHTML = this.getEditorOption('buttonLabels') === 'fontawesome' ?\n                              '<i class=\"fa fa-times\"></i>' :\n                              '&times;';\n            form.appendChild(close);\n\n            // Handle close button clicks\n            this.on(close, 'click', this.handleCloseClick.bind(this));\n\n            return form;\n        },\n\n        getInput: function () {\n            return this.getForm().querySelector('input.medium-editor-toolbar-input');\n        },\n\n        clearFontSize: function () {\n            MediumEditor.selection.getSelectedElements(this.document).forEach(function (el) {\n                if (el.nodeName.toLowerCase() === 'font' && el.hasAttribute('size')) {\n                    el.removeAttribute('size');\n                }\n            });\n        },\n\n        handleSliderChange: function () {\n            var size = this.getInput().value;\n            if (size === '4') {\n                this.clearFontSize();\n            } else {\n                this.execAction('fontSize', { value: size });\n            }\n        },\n\n        handleFormClick: function (event) {\n            // make sure not to hide form when clicking inside the form\n            event.stopPropagation();\n        },\n\n        handleSaveClick: function (event) {\n            // Clicking Save -> create the font size\n            event.preventDefault();\n            this.doFormSave();\n        },\n\n        handleCloseClick: function (event) {\n            // Click Close -> close the form\n            event.preventDefault();\n            this.doFormCancel();\n        }\n    });\n\n    MediumEditor.extensions.fontSize = FontSizeForm;\n}());\n(function () {\n    'use strict';\n\n    /* Helpers and internal variables that don't need to be members of actual paste handler */\n\n    var pasteBinDefaultContent = '%ME_PASTEBIN%',\n        lastRange = null,\n        keyboardPasteEditable = null,\n        stopProp = function (event) {\n            event.stopPropagation();\n        };\n\n    /*jslint regexp: true*/\n    /*\n        jslint does not allow character negation, because the negation\n        will not match any unicode characters. In the regexes in this\n        block, negation is used specifically to match the end of an html\n        tag, and in fact unicode characters *should* be allowed.\n    */\n    function createReplacements() {\n        return [\n            // Remove anything but the contents within the BODY element\n            [new RegExp(/^[\\s\\S]*<body[^>]*>\\s*|\\s*<\\/body[^>]*>[\\s\\S]*$/g), ''],\n\n            // cleanup comments added by Chrome when pasting html\n            [new RegExp(/<!--StartFragment-->|<!--EndFragment-->/g), ''],\n\n            // Trailing BR elements\n            [new RegExp(/<br>$/i), ''],\n\n            // replace two bogus tags that begin pastes from google docs\n            [new RegExp(/<[^>]*docs-internal-guid[^>]*>/gi), ''],\n            [new RegExp(/<\\/b>(<br[^>]*>)?$/gi), ''],\n\n             // un-html spaces and newlines inserted by OS X\n            [new RegExp(/<span class=\"Apple-converted-space\">\\s+<\\/span>/g), ' '],\n            [new RegExp(/<br class=\"Apple-interchange-newline\">/g), '<br>'],\n\n            // replace google docs italics+bold with a span to be replaced once the html is inserted\n            [new RegExp(/<span[^>]*(font-style:italic;font-weight:(bold|700)|font-weight:(bold|700);font-style:italic)[^>]*>/gi), '<span class=\"replace-with italic bold\">'],\n\n            // replace google docs italics with a span to be replaced once the html is inserted\n            [new RegExp(/<span[^>]*font-style:italic[^>]*>/gi), '<span class=\"replace-with italic\">'],\n\n            //[replace google docs bolds with a span to be replaced once the html is inserted\n            [new RegExp(/<span[^>]*font-weight:(bold|700)[^>]*>/gi), '<span class=\"replace-with bold\">'],\n\n             // replace manually entered b/i/a tags with real ones\n            [new RegExp(/&lt;(\\/?)(i|b|a)&gt;/gi), '<$1$2>'],\n\n             // replace manually a tags with real ones, converting smart-quotes from google docs\n            [new RegExp(/&lt;a(?:(?!href).)+href=(?:&quot;|&rdquo;|&ldquo;|\"|“|”)(((?!&quot;|&rdquo;|&ldquo;|\"|“|”).)*)(?:&quot;|&rdquo;|&ldquo;|\"|“|”)(?:(?!&gt;).)*&gt;/gi), '<a href=\"$1\">'],\n\n            // Newlines between paragraphs in html have no syntactic value,\n            // but then have a tendency to accidentally become additional paragraphs down the line\n            [new RegExp(/<\\/p>\\n+/gi), '</p>'],\n            [new RegExp(/\\n+<p/gi), '<p'],\n\n            // Microsoft Word makes these odd tags, like <o:p></o:p>\n            [new RegExp(/<\\/?o:[a-z]*>/gi), ''],\n\n            // Microsoft Word adds some special elements around list items\n            [new RegExp(/<!\\[if !supportLists\\]>(((?!<!).)*)<!\\[endif]\\>/gi), '$1']\n        ];\n    }\n    /*jslint regexp: false*/\n\n    /**\n     * Gets various content types out of the Clipboard API. It will also get the\n     * plain text using older IE and WebKit API.\n     *\n     * @param {event} event Event fired on paste.\n     * @param {win} reference to window\n     * @param {doc} reference to document\n     * @return {Object} Object with mime types and data for those mime types.\n     */\n    function getClipboardContent(event, win, doc) {\n        var dataTransfer = event.clipboardData || win.clipboardData || doc.dataTransfer,\n            data = {};\n\n        if (!dataTransfer) {\n            return data;\n        }\n\n        // Use old WebKit/IE API\n        if (dataTransfer.getData) {\n            var legacyText = dataTransfer.getData('Text');\n            if (legacyText && legacyText.length > 0) {\n                data['text/plain'] = legacyText;\n            }\n        }\n\n        if (dataTransfer.types) {\n            for (var i = 0; i < dataTransfer.types.length; i++) {\n                var contentType = dataTransfer.types[i];\n                data[contentType] = dataTransfer.getData(contentType);\n            }\n        }\n\n        return data;\n    }\n\n    var PasteHandler = MediumEditor.Extension.extend({\n        /* Paste Options */\n\n        /* forcePlainText: [boolean]\n         * Forces pasting as plain text.\n         */\n        forcePlainText: true,\n\n        /* cleanPastedHTML: [boolean]\n         * cleans pasted content from different sources, like google docs etc.\n         */\n        cleanPastedHTML: false,\n\n        /* preCleanReplacements: [Array]\n         * custom pairs (2 element arrays) of RegExp and replacement text to use during past when\n         * __forcePlainText__ or __cleanPastedHTML__ are `true` OR when calling `cleanPaste(text)` helper method.\n         * These replacements are executed before any medium editor defined replacements.\n         */\n        preCleanReplacements: [],\n\n        /* cleanReplacements: [Array]\n         * custom pairs (2 element arrays) of RegExp and replacement text to use during paste when\n         * __forcePlainText__ or __cleanPastedHTML__ are `true` OR when calling `cleanPaste(text)` helper method.\n         * These replacements are executed after any medium editor defined replacements.\n         */\n        cleanReplacements: [],\n\n        /* cleanAttrs:: [Array]\n         * list of element attributes to remove during paste when __cleanPastedHTML__ is `true` or when\n         * calling `cleanPaste(text)` or `pasteHTML(html, options)` helper methods.\n         */\n        cleanAttrs: ['class', 'style', 'dir'],\n\n        /* cleanTags: [Array]\n         * list of element tag names to remove during paste when __cleanPastedHTML__ is `true` or when\n         * calling `cleanPaste(text)` or `pasteHTML(html, options)` helper methods.\n         */\n        cleanTags: ['meta'],\n\n        /* unwrapTags: [Array]\n         * list of element tag names to unwrap (remove the element tag but retain its child elements)\n         * during paste when __cleanPastedHTML__ is `true` or when\n         * calling `cleanPaste(text)` or `pasteHTML(html, options)` helper methods.\n         */\n        unwrapTags: [],\n\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            if (this.forcePlainText || this.cleanPastedHTML) {\n                this.subscribe('editableKeydown', this.handleKeydown.bind(this));\n                // We need access to the full event data in paste\n                // so we can't use the editablePaste event here\n                this.getEditorElements().forEach(function (element) {\n                    this.on(element, 'paste', this.handlePaste.bind(this));\n                }, this);\n                this.subscribe('addElement', this.handleAddElement.bind(this));\n            }\n        },\n\n        handleAddElement: function (event, editable) {\n            this.on(editable, 'paste', this.handlePaste.bind(this));\n        },\n\n        destroy: function () {\n            // Make sure pastebin is destroyed in case it's still around for some reason\n            if (this.forcePlainText || this.cleanPastedHTML) {\n                this.removePasteBin();\n            }\n        },\n\n        handlePaste: function (event, editable) {\n            if (event.defaultPrevented) {\n                return;\n            }\n\n            var clipboardContent = getClipboardContent(event, this.window, this.document),\n                pastedHTML = clipboardContent['text/html'],\n                pastedPlain = clipboardContent['text/plain'];\n\n            if (this.window.clipboardData && event.clipboardData === undefined && !pastedHTML) {\n                // If window.clipboardData exists, but event.clipboardData doesn't exist,\n                // we're probably in IE. IE only has two possibilities for clipboard\n                // data format: 'Text' and 'URL'.\n                //\n                // For IE, we'll fallback to 'Text' for text/html\n                pastedHTML = pastedPlain;\n            }\n\n            if (pastedHTML || pastedPlain) {\n                event.preventDefault();\n\n                this.doPaste(pastedHTML, pastedPlain, editable);\n            }\n        },\n\n        doPaste: function (pastedHTML, pastedPlain, editable) {\n            var paragraphs,\n                html = '',\n                p;\n\n            if (this.cleanPastedHTML && pastedHTML) {\n                return this.cleanPaste(pastedHTML);\n            }\n\n            if (!pastedPlain) {\n                return;\n            }\n\n            if (!(this.getEditorOption('disableReturn') || (editable && editable.getAttribute('data-disable-return')))) {\n                paragraphs = pastedPlain.split(/[\\r\\n]+/g);\n                // If there are no \\r\\n in data, don't wrap in <p>\n                if (paragraphs.length > 1) {\n                    for (p = 0; p < paragraphs.length; p += 1) {\n                        if (paragraphs[p] !== '') {\n                            html += '<p>' + MediumEditor.util.htmlEntities(paragraphs[p]) + '</p>';\n                        }\n                    }\n                } else {\n                    html = MediumEditor.util.htmlEntities(paragraphs[0]);\n                }\n            } else {\n                html = MediumEditor.util.htmlEntities(pastedPlain);\n            }\n            MediumEditor.util.insertHTMLCommand(this.document, html);\n        },\n\n        handlePasteBinPaste: function (event) {\n            if (event.defaultPrevented) {\n                this.removePasteBin();\n                return;\n            }\n\n            var clipboardContent = getClipboardContent(event, this.window, this.document),\n                pastedHTML = clipboardContent['text/html'],\n                pastedPlain = clipboardContent['text/plain'],\n                editable = keyboardPasteEditable;\n\n            // If we have valid html already, or we're not in cleanPastedHTML mode\n            // we can ignore the paste bin and just paste now\n            if (!this.cleanPastedHTML || pastedHTML) {\n                event.preventDefault();\n                this.removePasteBin();\n                this.doPaste(pastedHTML, pastedPlain, editable);\n\n                // The event handling code listens for paste on the editable element\n                // in order to trigger the editablePaste event.  Since this paste event\n                // is happening on the pastebin, the event handling code never knows about it\n                // So, we have to trigger editablePaste manually\n                this.trigger('editablePaste', { currentTarget: editable, target: editable }, editable);\n                return;\n            }\n\n            // We need to look at the paste bin, so do a setTimeout to let the paste\n            // fall through into the paste bin\n            setTimeout(function () {\n                // Only look for HTML if we're in cleanPastedHTML mode\n                if (this.cleanPastedHTML) {\n                    // If clipboard didn't have HTML, try the paste bin\n                    pastedHTML = this.getPasteBinHtml();\n                }\n\n                // If we needed the paste bin, we're done with it now, remove it\n                this.removePasteBin();\n\n                // Handle the paste with the html from the paste bin\n                this.doPaste(pastedHTML, pastedPlain, editable);\n\n                // The event handling code listens for paste on the editable element\n                // in order to trigger the editablePaste event.  Since this paste event\n                // is happening on the pastebin, the event handling code never knows about it\n                // So, we have to trigger editablePaste manually\n                this.trigger('editablePaste', { currentTarget: editable, target: editable }, editable);\n            }.bind(this), 0);\n        },\n\n        handleKeydown: function (event, editable) {\n            // if it's not Ctrl+V, do nothing\n            if (!(MediumEditor.util.isKey(event, MediumEditor.util.keyCode.V) && MediumEditor.util.isMetaCtrlKey(event))) {\n                return;\n            }\n\n            event.stopImmediatePropagation();\n\n            this.removePasteBin();\n            this.createPasteBin(editable);\n        },\n\n        createPasteBin: function (editable) {\n            var rects,\n                range = MediumEditor.selection.getSelectionRange(this.document),\n                top = this.window.pageYOffset;\n\n            keyboardPasteEditable = editable;\n\n            if (range) {\n                rects = range.getClientRects();\n\n                // on empty line, rects is empty so we grab information from the first container of the range\n                if (rects.length) {\n                    top += rects[0].top;\n                } else if (range.startContainer.getBoundingClientRect !== undefined) {\n                    top += range.startContainer.getBoundingClientRect().top;\n                } else {\n                    top += range.getBoundingClientRect().top;\n                }\n            }\n\n            lastRange = range;\n\n            var pasteBinElm = this.document.createElement('div');\n            pasteBinElm.id = this.pasteBinId = 'medium-editor-pastebin-' + (+Date.now());\n            pasteBinElm.setAttribute('style', 'border: 1px red solid; position: absolute; top: ' + top + 'px; width: 10px; height: 10px; overflow: hidden; opacity: 0');\n            pasteBinElm.setAttribute('contentEditable', true);\n            pasteBinElm.innerHTML = pasteBinDefaultContent;\n\n            this.document.body.appendChild(pasteBinElm);\n\n            // avoid .focus() to stop other event (actually the paste event)\n            this.on(pasteBinElm, 'focus', stopProp);\n            this.on(pasteBinElm, 'focusin', stopProp);\n            this.on(pasteBinElm, 'focusout', stopProp);\n\n            pasteBinElm.focus();\n\n            MediumEditor.selection.selectNode(pasteBinElm, this.document);\n\n            if (!this.boundHandlePaste) {\n                this.boundHandlePaste = this.handlePasteBinPaste.bind(this);\n            }\n\n            this.on(pasteBinElm, 'paste', this.boundHandlePaste);\n        },\n\n        removePasteBin: function () {\n            if (null !== lastRange) {\n                MediumEditor.selection.selectRange(this.document, lastRange);\n                lastRange = null;\n            }\n\n            if (null !== keyboardPasteEditable) {\n                keyboardPasteEditable = null;\n            }\n\n            var pasteBinElm = this.getPasteBin();\n            if (!pasteBinElm) {\n                return;\n            }\n\n            if (pasteBinElm) {\n                this.off(pasteBinElm, 'focus', stopProp);\n                this.off(pasteBinElm, 'focusin', stopProp);\n                this.off(pasteBinElm, 'focusout', stopProp);\n                this.off(pasteBinElm, 'paste', this.boundHandlePaste);\n                pasteBinElm.parentElement.removeChild(pasteBinElm);\n            }\n        },\n\n        getPasteBin: function () {\n            return this.document.getElementById(this.pasteBinId);\n        },\n\n        getPasteBinHtml: function () {\n            var pasteBinElm = this.getPasteBin();\n\n            if (!pasteBinElm) {\n                return false;\n            }\n\n            // WebKit has a nice bug where it clones the paste bin if you paste from for example notepad\n            // so we need to force plain text mode in this case\n            if (pasteBinElm.firstChild && pasteBinElm.firstChild.id === 'mcepastebin') {\n                return false;\n            }\n\n            var pasteBinHtml = pasteBinElm.innerHTML;\n\n            // If paste bin is empty try using plain text mode\n            // since that is better than nothing right\n            if (!pasteBinHtml || pasteBinHtml === pasteBinDefaultContent) {\n                return false;\n            }\n\n            return pasteBinHtml;\n        },\n\n        cleanPaste: function (text) {\n            var i, elList, tmp, workEl,\n                multiline = /<p|<br|<div/.test(text),\n                replacements = [].concat(\n                    this.preCleanReplacements || [],\n                    createReplacements(),\n                    this.cleanReplacements || []);\n\n            for (i = 0; i < replacements.length; i += 1) {\n                text = text.replace(replacements[i][0], replacements[i][1]);\n            }\n\n            if (!multiline) {\n                return this.pasteHTML(text);\n            }\n\n            // create a temporary div to cleanup block elements\n            tmp = this.document.createElement('div');\n\n            // double br's aren't converted to p tags, but we want paragraphs.\n            tmp.innerHTML = '<p>' + text.split('<br><br>').join('</p><p>') + '</p>';\n\n            // block element cleanup\n            elList = tmp.querySelectorAll('a,p,div,br');\n            for (i = 0; i < elList.length; i += 1) {\n                workEl = elList[i];\n\n                // Microsoft Word replaces some spaces with newlines.\n                // While newlines between block elements are meaningless, newlines within\n                // elements are sometimes actually spaces.\n                workEl.innerHTML = workEl.innerHTML.replace(/\\n/gi, ' ');\n\n                switch (workEl.nodeName.toLowerCase()) {\n                    case 'p':\n                    case 'div':\n                        this.filterCommonBlocks(workEl);\n                        break;\n                    case 'br':\n                        this.filterLineBreak(workEl);\n                        break;\n                }\n            }\n\n            this.pasteHTML(tmp.innerHTML);\n        },\n\n        pasteHTML: function (html, options) {\n            options = MediumEditor.util.defaults({}, options, {\n                cleanAttrs: this.cleanAttrs,\n                cleanTags: this.cleanTags,\n                unwrapTags: this.unwrapTags\n            });\n\n            var elList, workEl, i, fragmentBody, pasteBlock = this.document.createDocumentFragment();\n\n            pasteBlock.appendChild(this.document.createElement('body'));\n\n            fragmentBody = pasteBlock.querySelector('body');\n            fragmentBody.innerHTML = html;\n\n            this.cleanupSpans(fragmentBody);\n\n            elList = fragmentBody.querySelectorAll('*');\n            for (i = 0; i < elList.length; i += 1) {\n                workEl = elList[i];\n\n                if ('a' === workEl.nodeName.toLowerCase() && this.getEditorOption('targetBlank')) {\n                    MediumEditor.util.setTargetBlank(workEl);\n                }\n\n                MediumEditor.util.cleanupAttrs(workEl, options.cleanAttrs);\n                MediumEditor.util.cleanupTags(workEl, options.cleanTags);\n                MediumEditor.util.unwrapTags(workEl, options.unwrapTags);\n            }\n\n            MediumEditor.util.insertHTMLCommand(this.document, fragmentBody.innerHTML.replace(/&nbsp;/g, ' '));\n        },\n\n        // TODO (6.0): Make this an internal helper instead of member of paste handler\n        isCommonBlock: function (el) {\n            return (el && (el.nodeName.toLowerCase() === 'p' || el.nodeName.toLowerCase() === 'div'));\n        },\n\n        // TODO (6.0): Make this an internal helper instead of member of paste handler\n        filterCommonBlocks: function (el) {\n            if (/^\\s*$/.test(el.textContent) && el.parentNode) {\n                el.parentNode.removeChild(el);\n            }\n        },\n\n        // TODO (6.0): Make this an internal helper instead of member of paste handler\n        filterLineBreak: function (el) {\n            if (this.isCommonBlock(el.previousElementSibling)) {\n                // remove stray br's following common block elements\n                this.removeWithParent(el);\n            } else if (this.isCommonBlock(el.parentNode) && (el.parentNode.firstChild === el || el.parentNode.lastChild === el)) {\n                // remove br's just inside open or close tags of a div/p\n                this.removeWithParent(el);\n            } else if (el.parentNode && el.parentNode.childElementCount === 1 && el.parentNode.textContent === '') {\n                // and br's that are the only child of elements other than div/p\n                this.removeWithParent(el);\n            }\n        },\n\n        // TODO (6.0): Make this an internal helper instead of member of paste handler\n        // remove an element, including its parent, if it is the only element within its parent\n        removeWithParent: function (el) {\n            if (el && el.parentNode) {\n                if (el.parentNode.parentNode && el.parentNode.childElementCount === 1) {\n                    el.parentNode.parentNode.removeChild(el.parentNode);\n                } else {\n                    el.parentNode.removeChild(el);\n                }\n            }\n        },\n\n        // TODO (6.0): Make this an internal helper instead of member of paste handler\n        cleanupSpans: function (containerEl) {\n            var i,\n                el,\n                newEl,\n                spans = containerEl.querySelectorAll('.replace-with'),\n                isCEF = function (el) {\n                    return (el && el.nodeName !== '#text' && el.getAttribute('contenteditable') === 'false');\n                };\n\n            for (i = 0; i < spans.length; i += 1) {\n                el = spans[i];\n                newEl = this.document.createElement(el.classList.contains('bold') ? 'b' : 'i');\n\n                if (el.classList.contains('bold') && el.classList.contains('italic')) {\n                    // add an i tag as well if this has both italics and bold\n                    newEl.innerHTML = '<i>' + el.innerHTML + '</i>';\n                } else {\n                    newEl.innerHTML = el.innerHTML;\n                }\n                el.parentNode.replaceChild(newEl, el);\n            }\n\n            spans = containerEl.querySelectorAll('span');\n            for (i = 0; i < spans.length; i += 1) {\n                el = spans[i];\n\n                // bail if span is in contenteditable = false\n                if (MediumEditor.util.traverseUp(el, isCEF)) {\n                    return false;\n                }\n\n                // remove empty spans, replace others with their contents\n                MediumEditor.util.unwrap(el, this.document);\n            }\n        }\n    });\n\n    MediumEditor.extensions.paste = PasteHandler;\n}());\n\n(function () {\n    'use strict';\n\n    var Placeholder = MediumEditor.Extension.extend({\n        name: 'placeholder',\n\n        /* Placeholder Options */\n\n        /* text: [string]\n         * Text to display in the placeholder\n         */\n        text: 'Type your text',\n\n        /* hideOnClick: [boolean]\n         * Should we hide the placeholder on click (true) or when user starts typing (false)\n         */\n        hideOnClick: true,\n\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.initPlaceholders();\n            this.attachEventHandlers();\n        },\n\n        initPlaceholders: function () {\n            this.getEditorElements().forEach(this.initElement, this);\n        },\n\n        handleAddElement: function (event, editable) {\n            this.initElement(editable);\n        },\n\n        initElement: function (el) {\n            if (!el.getAttribute('data-placeholder')) {\n                el.setAttribute('data-placeholder', this.text);\n            }\n            this.updatePlaceholder(el);\n        },\n\n        destroy: function () {\n            this.getEditorElements().forEach(this.cleanupElement, this);\n        },\n\n        handleRemoveElement: function (event, editable) {\n            this.cleanupElement(editable);\n        },\n\n        cleanupElement: function (el) {\n            if (el.getAttribute('data-placeholder') === this.text) {\n                el.removeAttribute('data-placeholder');\n            }\n        },\n\n        showPlaceholder: function (el) {\n            if (el) {\n                // https://github.com/yabwe/medium-editor/issues/234\n                // In firefox, styling the placeholder with an absolutely positioned\n                // pseudo element causes the cursor to appear in a bad location\n                // when the element is completely empty, so apply a different class to\n                // style it with a relatively positioned pseudo element\n                if (MediumEditor.util.isFF && el.childNodes.length === 0) {\n                    el.classList.add('medium-editor-placeholder-relative');\n                    el.classList.remove('medium-editor-placeholder');\n                } else {\n                    el.classList.add('medium-editor-placeholder');\n                    el.classList.remove('medium-editor-placeholder-relative');\n                }\n            }\n        },\n\n        hidePlaceholder: function (el) {\n            if (el) {\n                el.classList.remove('medium-editor-placeholder');\n                el.classList.remove('medium-editor-placeholder-relative');\n            }\n        },\n\n        updatePlaceholder: function (el, dontShow) {\n            // If the element has content, hide the placeholder\n            if (el.querySelector('img, blockquote, ul, ol, table') || (el.textContent.replace(/^\\s+|\\s+$/g, '') !== '')) {\n                return this.hidePlaceholder(el);\n            }\n\n            if (!dontShow) {\n                this.showPlaceholder(el);\n            }\n        },\n\n        attachEventHandlers: function () {\n            if (this.hideOnClick) {\n                // For the 'hideOnClick' option, the placeholder should always be hidden on focus\n                this.subscribe('focus', this.handleFocus.bind(this));\n            }\n\n            // If the editor has content, it should always hide the placeholder\n            this.subscribe('editableInput', this.handleInput.bind(this));\n\n            // When the editor loses focus, check if the placeholder should be visible\n            this.subscribe('blur', this.handleBlur.bind(this));\n\n            // Need to know when elements are added/removed from the editor\n            this.subscribe('addElement', this.handleAddElement.bind(this));\n            this.subscribe('removeElement', this.handleRemoveElement.bind(this));\n        },\n\n        handleInput: function (event, element) {\n            // If the placeholder should be hidden on focus and the\n            // element has focus, don't show the placeholder\n            var dontShow = this.hideOnClick && (element === this.base.getFocusedElement());\n\n            // Editor's content has changed, check if the placeholder should be hidden\n            this.updatePlaceholder(element, dontShow);\n        },\n\n        handleFocus: function (event, element) {\n            // Editor has focus, hide the placeholder\n            this.hidePlaceholder(element);\n        },\n\n        handleBlur: function (event, element) {\n            // Editor has lost focus, check if the placeholder should be shown\n            this.updatePlaceholder(element);\n        }\n    });\n\n    MediumEditor.extensions.placeholder = Placeholder;\n}());\n\n(function () {\n    'use strict';\n\n    var Toolbar = MediumEditor.Extension.extend({\n        name: 'toolbar',\n\n        /* Toolbar Options */\n\n        /* align: ['left'|'center'|'right']\n         * When the __static__ option is true, this aligns the static toolbar\n         * relative to the medium-editor element.\n         */\n        align: 'center',\n\n        /* allowMultiParagraphSelection: [boolean]\n         * enables/disables whether the toolbar should be displayed when\n         * selecting multiple paragraphs/block elements\n         */\n        allowMultiParagraphSelection: true,\n\n        /* buttons: [Array]\n         * the names of the set of buttons to display on the toolbar.\n         */\n        buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3', 'quote'],\n\n        /* diffLeft: [Number]\n         * value in pixels to be added to the X axis positioning of the toolbar.\n         */\n        diffLeft: 0,\n\n        /* diffTop: [Number]\n         * value in pixels to be added to the Y axis positioning of the toolbar.\n         */\n        diffTop: -10,\n\n        /* firstButtonClass: [string]\n         * CSS class added to the first button in the toolbar.\n         */\n        firstButtonClass: 'medium-editor-button-first',\n\n        /* lastButtonClass: [string]\n         * CSS class added to the last button in the toolbar.\n         */\n        lastButtonClass: 'medium-editor-button-last',\n\n        /* standardizeSelectionStart: [boolean]\n         * enables/disables standardizing how the beginning of a range is decided\n         * between browsers whenever the selected text is analyzed for updating toolbar buttons status.\n         */\n        standardizeSelectionStart: false,\n\n        /* static: [boolean]\n         * enable/disable the toolbar always displaying in the same location\n         * relative to the medium-editor element.\n         */\n        static: false,\n\n        /* sticky: [boolean]\n         * When the __static__ option is true, this enables/disables the toolbar\n         * \"sticking\" to the viewport and staying visible on the screen while\n         * the page scrolls.\n         */\n        sticky: false,\n\n        /* stickyTopOffset: [Number]\n         * Value in pixel of the top offset above the toolbar\n         */\n        stickyTopOffset: 0,\n\n        /* updateOnEmptySelection: [boolean]\n         * When the __static__ option is true, this enables/disables updating\n         * the state of the toolbar buttons even when the selection is collapsed\n         * (there is no selection, just a cursor).\n         */\n        updateOnEmptySelection: false,\n\n        /* relativeContainer: [node]\n         * appending the toolbar to a given node instead of body\n         */\n        relativeContainer: null,\n\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.initThrottledMethods();\n\n            if (!this.relativeContainer) {\n                this.getEditorOption('elementsContainer').appendChild(this.getToolbarElement());\n            } else {\n                this.relativeContainer.appendChild(this.getToolbarElement());\n            }\n        },\n\n        // Helper method to execute method for every extension, but ignoring the toolbar extension\n        forEachExtension: function (iterator, context) {\n            return this.base.extensions.forEach(function (command) {\n                if (command === this) {\n                    return;\n                }\n                return iterator.apply(context || this, arguments);\n            }, this);\n        },\n\n        // Toolbar creation/deletion\n\n        createToolbar: function () {\n            var toolbar = this.document.createElement('div');\n\n            toolbar.id = 'medium-editor-toolbar-' + this.getEditorId();\n            toolbar.className = 'medium-editor-toolbar';\n\n            if (this.static) {\n                toolbar.className += ' static-toolbar';\n            } else if (this.relativeContainer) {\n                toolbar.className += ' medium-editor-relative-toolbar';\n            } else {\n                toolbar.className += ' medium-editor-stalker-toolbar';\n            }\n\n            toolbar.appendChild(this.createToolbarButtons());\n\n            // Add any forms that extensions may have\n            this.forEachExtension(function (extension) {\n                if (extension.hasForm) {\n                    toolbar.appendChild(extension.getForm());\n                }\n            });\n\n            this.attachEventHandlers();\n\n            return toolbar;\n        },\n\n        createToolbarButtons: function () {\n            var ul = this.document.createElement('ul'),\n                li,\n                btn,\n                buttons,\n                extension,\n                buttonName,\n                buttonOpts;\n\n            ul.id = 'medium-editor-toolbar-actions' + this.getEditorId();\n            ul.className = 'medium-editor-toolbar-actions';\n            ul.style.display = 'block';\n\n            this.buttons.forEach(function (button) {\n                if (typeof button === 'string') {\n                    buttonName = button;\n                    buttonOpts = null;\n                } else {\n                    buttonName = button.name;\n                    buttonOpts = button;\n                }\n\n                // If the button already exists as an extension, it'll be returned\n                // othwerise it'll create the default built-in button\n                extension = this.base.addBuiltInExtension(buttonName, buttonOpts);\n\n                if (extension && typeof extension.getButton === 'function') {\n                    btn = extension.getButton(this.base);\n                    li = this.document.createElement('li');\n                    if (MediumEditor.util.isElement(btn)) {\n                        li.appendChild(btn);\n                    } else {\n                        li.innerHTML = btn;\n                    }\n                    ul.appendChild(li);\n                }\n            }, this);\n\n            buttons = ul.querySelectorAll('button');\n            if (buttons.length > 0) {\n                buttons[0].classList.add(this.firstButtonClass);\n                buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n            }\n\n            return ul;\n        },\n\n        destroy: function () {\n            if (this.toolbar) {\n                if (this.toolbar.parentNode) {\n                    this.toolbar.parentNode.removeChild(this.toolbar);\n                }\n                delete this.toolbar;\n            }\n        },\n\n        // Toolbar accessors\n\n        getInteractionElements: function () {\n            return this.getToolbarElement();\n        },\n\n        getToolbarElement: function () {\n            if (!this.toolbar) {\n                this.toolbar = this.createToolbar();\n            }\n\n            return this.toolbar;\n        },\n\n        getToolbarActionsElement: function () {\n            return this.getToolbarElement().querySelector('.medium-editor-toolbar-actions');\n        },\n\n        // Toolbar event handlers\n\n        initThrottledMethods: function () {\n            // throttledPositionToolbar is throttled because:\n            // - It will be called when the browser is resizing, which can fire many times very quickly\n            // - For some event (like resize) a slight lag in UI responsiveness is OK and provides performance benefits\n            this.throttledPositionToolbar = MediumEditor.util.throttle(function () {\n                if (this.base.isActive) {\n                    this.positionToolbarIfShown();\n                }\n            }.bind(this));\n        },\n\n        attachEventHandlers: function () {\n            // MediumEditor custom events for when user beings and ends interaction with a contenteditable and its elements\n            this.subscribe('blur', this.handleBlur.bind(this));\n            this.subscribe('focus', this.handleFocus.bind(this));\n\n            // Updating the state of the toolbar as things change\n            this.subscribe('editableClick', this.handleEditableClick.bind(this));\n            this.subscribe('editableKeyup', this.handleEditableKeyup.bind(this));\n\n            // Handle mouseup on document for updating the selection in the toolbar\n            this.on(this.document.documentElement, 'mouseup', this.handleDocumentMouseup.bind(this));\n\n            // Add a scroll event for sticky toolbar\n            if (this.static && this.sticky) {\n                // On scroll (capture), re-position the toolbar\n                this.on(this.window, 'scroll', this.handleWindowScroll.bind(this), true);\n            }\n\n            // On resize, re-position the toolbar\n            this.on(this.window, 'resize', this.handleWindowResize.bind(this));\n        },\n\n        handleWindowScroll: function () {\n            this.positionToolbarIfShown();\n        },\n\n        handleWindowResize: function () {\n            this.throttledPositionToolbar();\n        },\n\n        handleDocumentMouseup: function (event) {\n            // Do not trigger checkState when mouseup fires over the toolbar\n            if (event &&\n                    event.target &&\n                    MediumEditor.util.isDescendant(this.getToolbarElement(), event.target)) {\n                return false;\n            }\n            this.checkState();\n        },\n\n        handleEditableClick: function () {\n            // Delay the call to checkState to handle bug where selection is empty\n            // immediately after clicking inside a pre-existing selection\n            setTimeout(function () {\n                this.checkState();\n            }.bind(this), 0);\n        },\n\n        handleEditableKeyup: function () {\n            this.checkState();\n        },\n\n        handleBlur: function () {\n            // Kill any previously delayed calls to hide the toolbar\n            clearTimeout(this.hideTimeout);\n\n            // Blur may fire even if we have a selection, so we want to prevent any delayed showToolbar\n            // calls from happening in this specific case\n            clearTimeout(this.delayShowTimeout);\n\n            // Delay the call to hideToolbar to handle bug with multiple editors on the page at once\n            this.hideTimeout = setTimeout(function () {\n                this.hideToolbar();\n            }.bind(this), 1);\n        },\n\n        handleFocus: function () {\n            this.checkState();\n        },\n\n        // Hiding/showing toolbar\n\n        isDisplayed: function () {\n            return this.getToolbarElement().classList.contains('medium-editor-toolbar-active');\n        },\n\n        showToolbar: function () {\n            clearTimeout(this.hideTimeout);\n            if (!this.isDisplayed()) {\n                this.getToolbarElement().classList.add('medium-editor-toolbar-active');\n                this.trigger('showToolbar', {}, this.base.getFocusedElement());\n            }\n        },\n\n        hideToolbar: function () {\n            if (this.isDisplayed()) {\n                this.getToolbarElement().classList.remove('medium-editor-toolbar-active');\n                this.trigger('hideToolbar', {}, this.base.getFocusedElement());\n            }\n        },\n\n        isToolbarDefaultActionsDisplayed: function () {\n            return this.getToolbarActionsElement().style.display === 'block';\n        },\n\n        hideToolbarDefaultActions: function () {\n            if (this.isToolbarDefaultActionsDisplayed()) {\n                this.getToolbarActionsElement().style.display = 'none';\n            }\n        },\n\n        showToolbarDefaultActions: function () {\n            this.hideExtensionForms();\n\n            if (!this.isToolbarDefaultActionsDisplayed()) {\n                this.getToolbarActionsElement().style.display = 'block';\n            }\n\n            // Using setTimeout + options.delay because:\n            // We will actually be displaying the toolbar, which should be controlled by options.delay\n            this.delayShowTimeout = this.base.delay(function () {\n                this.showToolbar();\n            }.bind(this));\n        },\n\n        hideExtensionForms: function () {\n            // Hide all extension forms\n            this.forEachExtension(function (extension) {\n                if (extension.hasForm && extension.isDisplayed()) {\n                    extension.hideForm();\n                }\n            });\n        },\n\n        // Responding to changes in user selection\n\n        // Checks for existance of multiple block elements in the current selection\n        multipleBlockElementsSelected: function () {\n            var regexEmptyHTMLTags = /<[^\\/>][^>]*><\\/[^>]+>/gim, // http://stackoverflow.com/questions/3129738/remove-empty-tags-using-regex\n                regexBlockElements = new RegExp('<(' + MediumEditor.util.blockContainerElementNames.join('|') + ')[^>]*>', 'g'),\n                selectionHTML = MediumEditor.selection.getSelectionHtml(this.document).replace(regexEmptyHTMLTags, ''), // Filter out empty blocks from selection\n                hasMultiParagraphs = selectionHTML.match(regexBlockElements); // Find how many block elements are within the html\n\n            return !!hasMultiParagraphs && hasMultiParagraphs.length > 1;\n        },\n\n        modifySelection: function () {\n            var selection = this.window.getSelection(),\n                selectionRange = selection.getRangeAt(0);\n\n            /*\n            * In firefox, there are cases (ie doubleclick of a word) where the selectionRange start\n            * will be at the very end of an element.  In other browsers, the selectionRange start\n            * would instead be at the very beginning of an element that actually has content.\n            * example:\n            *   <span>foo</span><span>bar</span>\n            *\n            * If the text 'bar' is selected, most browsers will have the selectionRange start at the beginning\n            * of the 'bar' span.  However, there are cases where firefox will have the selectionRange start\n            * at the end of the 'foo' span.  The contenteditable behavior will be ok, but if there are any\n            * properties on the 'bar' span, they won't be reflected accurately in the toolbar\n            * (ie 'Bold' button wouldn't be active)\n            *\n            * So, for cases where the selectionRange start is at the end of an element/node, find the next\n            * adjacent text node that actually has content in it, and move the selectionRange start there.\n            */\n            if (this.standardizeSelectionStart &&\n                    selectionRange.startContainer.nodeValue &&\n                    (selectionRange.startOffset === selectionRange.startContainer.nodeValue.length)) {\n                var adjacentNode = MediumEditor.util.findAdjacentTextNodeWithContent(MediumEditor.selection.getSelectionElement(this.window), selectionRange.startContainer, this.document);\n                if (adjacentNode) {\n                    var offset = 0;\n                    while (adjacentNode.nodeValue.substr(offset, 1).trim().length === 0) {\n                        offset = offset + 1;\n                    }\n                    selectionRange = MediumEditor.selection.select(this.document, adjacentNode, offset,\n                        selectionRange.endContainer, selectionRange.endOffset);\n                }\n            }\n        },\n\n        checkState: function () {\n            if (this.base.preventSelectionUpdates) {\n                return;\n            }\n\n            // If no editable has focus OR selection is inside contenteditable = false\n            // hide toolbar\n            if (!this.base.getFocusedElement() ||\n                    MediumEditor.selection.selectionInContentEditableFalse(this.window)) {\n                return this.hideToolbar();\n            }\n\n            // If there's no selection element, selection element doesn't belong to this editor\n            // or toolbar is disabled for this selection element\n            // hide toolbar\n            var selectionElement = MediumEditor.selection.getSelectionElement(this.window);\n            if (!selectionElement ||\n                    this.getEditorElements().indexOf(selectionElement) === -1 ||\n                    selectionElement.getAttribute('data-disable-toolbar')) {\n                return this.hideToolbar();\n            }\n\n            // Now we know there's a focused editable with a selection\n\n            // If the updateOnEmptySelection option is true, show the toolbar\n            if (this.updateOnEmptySelection && this.static) {\n                return this.showAndUpdateToolbar();\n            }\n\n            // If we don't have a 'valid' selection -> hide toolbar\n            if (!MediumEditor.selection.selectionContainsContent(this.document) ||\n                (this.allowMultiParagraphSelection === false && this.multipleBlockElementsSelected())) {\n                return this.hideToolbar();\n            }\n\n            this.showAndUpdateToolbar();\n        },\n\n        // Updating the toolbar\n\n        showAndUpdateToolbar: function () {\n            this.modifySelection();\n            this.setToolbarButtonStates();\n            this.trigger('positionToolbar', {}, this.base.getFocusedElement());\n            this.showToolbarDefaultActions();\n            this.setToolbarPosition();\n        },\n\n        setToolbarButtonStates: function () {\n            this.forEachExtension(function (extension) {\n                if (typeof extension.isActive === 'function' &&\n                    typeof extension.setInactive === 'function') {\n                    extension.setInactive();\n                }\n            });\n\n            this.checkActiveButtons();\n        },\n\n        checkActiveButtons: function () {\n            var manualStateChecks = [],\n                queryState = null,\n                selectionRange = MediumEditor.selection.getSelectionRange(this.document),\n                parentNode,\n                updateExtensionState = function (extension) {\n                    if (typeof extension.checkState === 'function') {\n                        extension.checkState(parentNode);\n                    } else if (typeof extension.isActive === 'function' &&\n                               typeof extension.isAlreadyApplied === 'function' &&\n                               typeof extension.setActive === 'function') {\n                        if (!extension.isActive() && extension.isAlreadyApplied(parentNode)) {\n                            extension.setActive();\n                        }\n                    }\n                };\n\n            if (!selectionRange) {\n                return;\n            }\n\n            // Loop through all extensions\n            this.forEachExtension(function (extension) {\n                // For those extensions where we can use document.queryCommandState(), do so\n                if (typeof extension.queryCommandState === 'function') {\n                    queryState = extension.queryCommandState();\n                    // If queryCommandState returns a valid value, we can trust the browser\n                    // and don't need to do our manual checks\n                    if (queryState !== null) {\n                        if (queryState && typeof extension.setActive === 'function') {\n                            extension.setActive();\n                        }\n                        return;\n                    }\n                }\n                // We can't use queryCommandState for this extension, so add to manualStateChecks\n                manualStateChecks.push(extension);\n            });\n\n            parentNode = MediumEditor.selection.getSelectedParentElement(selectionRange);\n\n            // Make sure the selection parent isn't outside of the contenteditable\n            if (!this.getEditorElements().some(function (element) {\n                    return MediumEditor.util.isDescendant(element, parentNode, true);\n                })) {\n                return;\n            }\n\n            // Climb up the DOM and do manual checks for whether a certain extension is currently enabled for this node\n            while (parentNode) {\n                manualStateChecks.forEach(updateExtensionState);\n\n                // we can abort the search upwards if we leave the contentEditable element\n                if (MediumEditor.util.isMediumEditorElement(parentNode)) {\n                    break;\n                }\n                parentNode = parentNode.parentNode;\n            }\n        },\n\n        // Positioning toolbar\n\n        positionToolbarIfShown: function () {\n            if (this.isDisplayed()) {\n                this.setToolbarPosition();\n            }\n        },\n\n        setToolbarPosition: function () {\n            var container = this.base.getFocusedElement(),\n                selection = this.window.getSelection();\n\n            // If there isn't a valid selection, bail\n            if (!container) {\n                return this;\n            }\n\n            if (this.static || !selection.isCollapsed) {\n                this.showToolbar();\n\n                // we don't need any absolute positioning if relativeContainer is set\n                if (!this.relativeContainer) {\n                    if (this.static) {\n                        this.positionStaticToolbar(container);\n                    } else {\n                        this.positionToolbar(selection);\n                    }\n                }\n\n                this.trigger('positionedToolbar', {}, this.base.getFocusedElement());\n            }\n        },\n\n        positionStaticToolbar: function (container) {\n            // position the toolbar at left 0, so we can get the real width of the toolbar\n            this.getToolbarElement().style.left = '0';\n\n            // document.documentElement for IE 9\n            var scrollTop = (this.document.documentElement && this.document.documentElement.scrollTop) || this.document.body.scrollTop,\n                windowWidth = this.window.innerWidth,\n                toolbarElement = this.getToolbarElement(),\n                containerRect = container.getBoundingClientRect(),\n                containerTop = containerRect.top + scrollTop,\n                containerCenter = (containerRect.left + (containerRect.width / 2)),\n                toolbarHeight = toolbarElement.offsetHeight,\n                toolbarWidth = toolbarElement.offsetWidth,\n                halfOffsetWidth = toolbarWidth / 2,\n                targetLeft;\n\n            if (this.sticky) {\n                // If it's beyond the height of the editor, position it at the bottom of the editor\n                if (scrollTop > (containerTop + container.offsetHeight - toolbarHeight - this.stickyTopOffset)) {\n                    toolbarElement.style.top = (containerTop + container.offsetHeight - toolbarHeight) + 'px';\n                    toolbarElement.classList.remove('medium-editor-sticky-toolbar');\n                // Stick the toolbar to the top of the window\n                } else if (scrollTop > (containerTop - toolbarHeight - this.stickyTopOffset)) {\n                    toolbarElement.classList.add('medium-editor-sticky-toolbar');\n                    toolbarElement.style.top = this.stickyTopOffset + 'px';\n                // Normal static toolbar position\n                } else {\n                    toolbarElement.classList.remove('medium-editor-sticky-toolbar');\n                    toolbarElement.style.top = containerTop - toolbarHeight + 'px';\n                }\n            } else {\n                toolbarElement.style.top = containerTop - toolbarHeight + 'px';\n            }\n\n            switch (this.align) {\n                case 'left':\n                    targetLeft = containerRect.left;\n                    break;\n\n                case 'right':\n                    targetLeft = containerRect.right - toolbarWidth;\n                    break;\n\n                case 'center':\n                    targetLeft = containerCenter - halfOffsetWidth;\n                    break;\n            }\n\n            if (targetLeft < 0) {\n                targetLeft = 0;\n            } else if ((targetLeft + toolbarWidth) > windowWidth) {\n                targetLeft = (windowWidth - Math.ceil(toolbarWidth) - 1);\n            }\n\n            toolbarElement.style.left = targetLeft + 'px';\n        },\n\n        positionToolbar: function (selection) {\n            // position the toolbar at left 0, so we can get the real width of the toolbar\n            this.getToolbarElement().style.left = '0';\n            this.getToolbarElement().style.right = 'initial';\n\n            var range = selection.getRangeAt(0),\n                boundary = range.getBoundingClientRect();\n\n            // Handle selections with just images\n            if (!boundary || ((boundary.height === 0 && boundary.width === 0) && range.startContainer === range.endContainer)) {\n                // If there's a nested image, use that for the bounding rectangle\n                if (range.startContainer.nodeType === 1 && range.startContainer.querySelector('img')) {\n                    boundary = range.startContainer.querySelector('img').getBoundingClientRect();\n                } else {\n                    boundary = range.startContainer.getBoundingClientRect();\n                }\n            }\n\n            var containerWidth = this.window.innerWidth,\n                toolbarElement = this.getToolbarElement(),\n                toolbarHeight = toolbarElement.offsetHeight,\n                toolbarWidth = toolbarElement.offsetWidth,\n                halfOffsetWidth = toolbarWidth / 2,\n                buttonHeight = 50,\n                defaultLeft = this.diffLeft - halfOffsetWidth,\n                elementsContainer = this.getEditorOption('elementsContainer'),\n                elementsContainerAbsolute = ['absolute', 'fixed'].indexOf(window.getComputedStyle(elementsContainer).getPropertyValue('position')) > -1,\n                positions = {},\n                relativeBoundary = {},\n                middleBoundary, elementsContainerBoundary;\n\n            // If container element is absolute / fixed, recalculate boundaries to be relative to the container\n            if (elementsContainerAbsolute) {\n                elementsContainerBoundary = elementsContainer.getBoundingClientRect();\n                ['top', 'left'].forEach(function (key) {\n                    relativeBoundary[key] = boundary[key] - elementsContainerBoundary[key];\n                });\n\n                relativeBoundary.width = boundary.width;\n                relativeBoundary.height = boundary.height;\n                boundary = relativeBoundary;\n\n                containerWidth = elementsContainerBoundary.width;\n\n                // Adjust top position according to container scroll position\n                positions.top = elementsContainer.scrollTop;\n            } else {\n                // Adjust top position according to window scroll position\n                positions.top = this.window.pageYOffset;\n            }\n\n            middleBoundary = boundary.left + boundary.width / 2;\n            positions.top += boundary.top - toolbarHeight;\n\n            if (boundary.top < buttonHeight) {\n                toolbarElement.classList.add('medium-toolbar-arrow-over');\n                toolbarElement.classList.remove('medium-toolbar-arrow-under');\n                positions.top += buttonHeight + boundary.height - this.diffTop;\n            } else {\n                toolbarElement.classList.add('medium-toolbar-arrow-under');\n                toolbarElement.classList.remove('medium-toolbar-arrow-over');\n                positions.top += this.diffTop;\n            }\n\n            if (middleBoundary < halfOffsetWidth) {\n                positions.left = defaultLeft + halfOffsetWidth;\n                positions.right = 'initial';\n            } else if ((containerWidth - middleBoundary) < halfOffsetWidth) {\n                positions.left = 'auto';\n                positions.right = 0;\n            } else {\n                positions.left = defaultLeft + middleBoundary;\n                positions.right = 'initial';\n            }\n\n            ['top', 'left', 'right'].forEach(function (key) {\n                toolbarElement.style[key] = positions[key] + (isNaN(positions[key]) ? '' : 'px');\n            });\n        }\n    });\n\n    MediumEditor.extensions.toolbar = Toolbar;\n}());\n\n(function () {\n    'use strict';\n\n    var ImageDragging = MediumEditor.Extension.extend({\n        init: function () {\n            MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n            this.subscribe('editableDrag', this.handleDrag.bind(this));\n            this.subscribe('editableDrop', this.handleDrop.bind(this));\n        },\n\n        handleDrag: function (event) {\n            var className = 'medium-editor-dragover';\n            event.preventDefault();\n            event.dataTransfer.dropEffect = 'copy';\n\n            if (event.type === 'dragover') {\n                event.target.classList.add(className);\n            } else if (event.type === 'dragleave') {\n                event.target.classList.remove(className);\n            }\n        },\n\n        handleDrop: function (event) {\n            var className = 'medium-editor-dragover',\n                files;\n            event.preventDefault();\n            event.stopPropagation();\n\n            // IE9 does not support the File API, so prevent file from opening in a new window\n            // but also don't try to actually get the file\n            if (event.dataTransfer.files) {\n                files = Array.prototype.slice.call(event.dataTransfer.files, 0);\n                files.some(function (file) {\n                    if (file.type.match('image')) {\n                        var fileReader, id;\n                        fileReader = new FileReader();\n                        fileReader.readAsDataURL(file);\n\n                        id = 'medium-img-' + (+new Date());\n                        MediumEditor.util.insertHTMLCommand(this.document, '<img class=\"medium-editor-image-loading\" id=\"' + id + '\" />');\n\n                        fileReader.onload = function () {\n                            var img = this.document.getElementById(id);\n                            if (img) {\n                                img.removeAttribute('id');\n                                img.removeAttribute('class');\n                                img.src = fileReader.result;\n                            }\n                        }.bind(this);\n                    }\n                }.bind(this));\n            }\n            event.target.classList.remove(className);\n        }\n    });\n\n    MediumEditor.extensions.imageDragging = ImageDragging;\n}());\n\n(function () {\n    'use strict';\n\n    // Event handlers that shouldn't be exposed externally\n\n    function handleDisableExtraSpaces(event) {\n        var node = MediumEditor.selection.getSelectionStart(this.options.ownerDocument),\n            textContent = node.textContent,\n            caretPositions = MediumEditor.selection.getCaretOffsets(node);\n\n        if ((textContent[caretPositions.left - 1] === undefined) || (textContent[caretPositions.left - 1].trim() === '') || (textContent[caretPositions.left] !== undefined && textContent[caretPositions.left].trim() === '')) {\n            event.preventDefault();\n        }\n    }\n\n    function handleDisabledEnterKeydown(event, element) {\n        if (this.options.disableReturn || element.getAttribute('data-disable-return')) {\n            event.preventDefault();\n        } else if (this.options.disableDoubleReturn || element.getAttribute('data-disable-double-return')) {\n            var node = MediumEditor.selection.getSelectionStart(this.options.ownerDocument);\n\n            // if current text selection is empty OR previous sibling text is empty OR it is not a list\n            if ((node && node.textContent.trim() === '' && node.nodeName.toLowerCase() !== 'li') ||\n                (node.previousElementSibling && node.previousElementSibling.nodeName.toLowerCase() !== 'br' &&\n                 node.previousElementSibling.textContent.trim() === '')) {\n                event.preventDefault();\n            }\n        }\n    }\n\n    function handleTabKeydown(event) {\n        // Override tab only for pre nodes\n        var node = MediumEditor.selection.getSelectionStart(this.options.ownerDocument),\n            tag = node && node.nodeName.toLowerCase();\n\n        if (tag === 'pre') {\n            event.preventDefault();\n            MediumEditor.util.insertHTMLCommand(this.options.ownerDocument, '    ');\n        }\n\n        // Tab to indent list structures!\n        if (MediumEditor.util.isListItem(node)) {\n            event.preventDefault();\n\n            // If Shift is down, outdent, otherwise indent\n            if (event.shiftKey) {\n                this.options.ownerDocument.execCommand('outdent', false, null);\n            } else {\n                this.options.ownerDocument.execCommand('indent', false, null);\n            }\n        }\n    }\n\n    function handleBlockDeleteKeydowns(event) {\n        var p, node = MediumEditor.selection.getSelectionStart(this.options.ownerDocument),\n            tagName = node.nodeName.toLowerCase(),\n            isEmpty = /^(\\s+|<br\\/?>)?$/i,\n            isHeader = /h\\d/i;\n\n        if (MediumEditor.util.isKey(event, [MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.ENTER]) &&\n                // has a preceeding sibling\n                node.previousElementSibling &&\n                // in a header\n                isHeader.test(tagName) &&\n                // at the very end of the block\n                MediumEditor.selection.getCaretOffsets(node).left === 0) {\n            if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.BACKSPACE) && isEmpty.test(node.previousElementSibling.innerHTML)) {\n                // backspacing the begining of a header into an empty previous element will\n                // change the tagName of the current node to prevent one\n                // instead delete previous node and cancel the event.\n                node.previousElementSibling.parentNode.removeChild(node.previousElementSibling);\n                event.preventDefault();\n            } else if (!this.options.disableDoubleReturn && MediumEditor.util.isKey(event, MediumEditor.util.keyCode.ENTER)) {\n                // hitting return in the begining of a header will create empty header elements before the current one\n                // instead, make \"<p><br></p>\" element, which are what happens if you hit return in an empty paragraph\n                p = this.options.ownerDocument.createElement('p');\n                p.innerHTML = '<br>';\n                node.previousElementSibling.parentNode.insertBefore(p, node);\n                event.preventDefault();\n            }\n        } else if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.DELETE) &&\n                    // between two sibling elements\n                    node.nextElementSibling &&\n                    node.previousElementSibling &&\n                    // not in a header\n                    !isHeader.test(tagName) &&\n                    // in an empty tag\n                    isEmpty.test(node.innerHTML) &&\n                    // when the next tag *is* a header\n                    isHeader.test(node.nextElementSibling.nodeName.toLowerCase())) {\n            // hitting delete in an empty element preceding a header, ex:\n            //  <p>[CURSOR]</p><h1>Header</h1>\n            // Will cause the h1 to become a paragraph.\n            // Instead, delete the paragraph node and move the cursor to the begining of the h1\n\n            // remove node and move cursor to start of header\n            MediumEditor.selection.moveCursor(this.options.ownerDocument, node.nextElementSibling);\n\n            node.previousElementSibling.parentNode.removeChild(node);\n\n            event.preventDefault();\n        } else if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.BACKSPACE) &&\n                tagName === 'li' &&\n                // hitting backspace inside an empty li\n                isEmpty.test(node.innerHTML) &&\n                // is first element (no preceeding siblings)\n                !node.previousElementSibling &&\n                // parent also does not have a sibling\n                !node.parentElement.previousElementSibling &&\n                // is not the only li in a list\n                node.nextElementSibling &&\n                node.nextElementSibling.nodeName.toLowerCase() === 'li') {\n            // backspacing in an empty first list element in the first list (with more elements) ex:\n            //  <ul><li>[CURSOR]</li><li>List Item 2</li></ul>\n            // will remove the first <li> but add some extra element before (varies based on browser)\n            // Instead, this will:\n            // 1) remove the list element\n            // 2) create a paragraph before the list\n            // 3) move the cursor into the paragraph\n\n            // create a paragraph before the list\n            p = this.options.ownerDocument.createElement('p');\n            p.innerHTML = '<br>';\n            node.parentElement.parentElement.insertBefore(p, node.parentElement);\n\n            // move the cursor into the new paragraph\n            MediumEditor.selection.moveCursor(this.options.ownerDocument, p);\n\n            // remove the list element\n            node.parentElement.removeChild(node);\n\n            event.preventDefault();\n        } else if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.BACKSPACE) &&\n                (MediumEditor.util.getClosestTag(node, 'blockquote') !== false) &&\n                MediumEditor.selection.getCaretOffsets(node).left === 0) {\n\n            // when cursor is at the begining of the element and the element is <blockquote>\n            // then pressing backspace key should change the <blockquote> to a <p> tag\n            event.preventDefault();\n            MediumEditor.util.execFormatBlock(this.options.ownerDocument, 'p');\n        } else if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.ENTER) &&\n                (MediumEditor.util.getClosestTag(node, 'blockquote') !== false) &&\n                MediumEditor.selection.getCaretOffsets(node).right === 0) {\n\n            // when cursor is at the end of <blockquote>,\n            // then pressing enter key should create <p> tag, not <blockquote>\n            p = this.options.ownerDocument.createElement('p');\n            p.innerHTML = '<br>';\n            node.parentElement.insertBefore(p, node.nextSibling);\n\n            // move the cursor into the new paragraph\n            MediumEditor.selection.moveCursor(this.options.ownerDocument, p);\n\n            event.preventDefault();\n        } else if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.BACKSPACE) &&\n                MediumEditor.util.isMediumEditorElement(node.parentElement) &&\n                !node.previousElementSibling &&\n                node.nextElementSibling &&\n                isEmpty.test(node.innerHTML)) {\n\n            // when cursor is in the first element, it's empty and user presses backspace,\n            // do delete action instead to get rid of the first element and move caret to 2nd\n            event.preventDefault();\n            MediumEditor.selection.moveCursor(this.options.ownerDocument, node.nextSibling);\n            node.parentElement.removeChild(node);\n        }\n    }\n\n    function handleKeyup(event) {\n        var node = MediumEditor.selection.getSelectionStart(this.options.ownerDocument),\n            tagName;\n\n        if (!node) {\n            return;\n        }\n\n        // https://github.com/yabwe/medium-editor/issues/994\n        // Firefox thrown an error when calling `formatBlock` on an empty editable blockContainer that's not a <div>\n        if (MediumEditor.util.isMediumEditorElement(node) && node.children.length === 0 && !MediumEditor.util.isBlockContainer(node)) {\n            this.options.ownerDocument.execCommand('formatBlock', false, 'p');\n        }\n\n        // https://github.com/yabwe/medium-editor/issues/834\n        // https://github.com/yabwe/medium-editor/pull/382\n        // Don't call format block if this is a block element (ie h1, figCaption, etc.)\n        if (MediumEditor.util.isKey(event, MediumEditor.util.keyCode.ENTER) &&\n            !MediumEditor.util.isListItem(node) &&\n            !MediumEditor.util.isBlockContainer(node)) {\n\n            tagName = node.nodeName.toLowerCase();\n            // For anchor tags, unlink\n            if (tagName === 'a') {\n                this.options.ownerDocument.execCommand('unlink', false, null);\n            } else if (!event.shiftKey && !event.ctrlKey) {\n                this.options.ownerDocument.execCommand('formatBlock', false, 'p');\n            }\n        }\n    }\n\n    function handleEditableInput(event, editable) {\n        var textarea = editable.parentNode.querySelector('textarea[medium-editor-textarea-id=\"' + editable.getAttribute('medium-editor-textarea-id') + '\"]');\n        if (textarea) {\n            textarea.value = editable.innerHTML.trim();\n        }\n    }\n\n    // Internal helper methods which shouldn't be exposed externally\n\n    function addToEditors(win) {\n        if (!win._mediumEditors) {\n            // To avoid breaking users who are assuming that the unique id on\n            // medium-editor elements will start at 1, inserting a 'null' in the\n            // array so the unique-id can always map to the index of the editor instance\n            win._mediumEditors = [null];\n        }\n\n        // If this already has a unique id, re-use it\n        if (!this.id) {\n            this.id = win._mediumEditors.length;\n        }\n\n        win._mediumEditors[this.id] = this;\n    }\n\n    function removeFromEditors(win) {\n        if (!win._mediumEditors || !win._mediumEditors[this.id]) {\n            return;\n        }\n\n        /* Setting the instance to null in the array instead of deleting it allows:\n         * 1) Each instance to preserve its own unique-id, even after being destroyed\n         *    and initialized again\n         * 2) The unique-id to always correspond to an index in the array of medium-editor\n         *    instances. Thus, we will be able to look at a contenteditable, and determine\n         *    which instance it belongs to, by indexing into the global array.\n         */\n        win._mediumEditors[this.id] = null;\n    }\n\n    function createElementsArray(selector, doc, filterEditorElements) {\n        var elements = [];\n\n        if (!selector) {\n            selector = [];\n        }\n        // If string, use as query selector\n        if (typeof selector === 'string') {\n            selector = doc.querySelectorAll(selector);\n        }\n        // If element, put into array\n        if (MediumEditor.util.isElement(selector)) {\n            selector = [selector];\n        }\n\n        if (filterEditorElements) {\n            // Remove elements that have already been initialized by the editor\n            // selecotr might not be an array (ie NodeList) so use for loop\n            for (var i = 0; i < selector.length; i++) {\n                var el = selector[i];\n                if (MediumEditor.util.isElement(el) &&\n                    !el.getAttribute('data-medium-editor-element') &&\n                    !el.getAttribute('medium-editor-textarea-id')) {\n                    elements.push(el);\n                }\n            }\n        } else {\n            // Convert NodeList (or other array like object) into an array\n            elements = Array.prototype.slice.apply(selector);\n        }\n\n        return elements;\n    }\n\n    function cleanupTextareaElement(element) {\n        var textarea = element.parentNode.querySelector('textarea[medium-editor-textarea-id=\"' + element.getAttribute('medium-editor-textarea-id') + '\"]');\n        if (textarea) {\n            // Un-hide the textarea\n            textarea.classList.remove('medium-editor-hidden');\n            textarea.removeAttribute('medium-editor-textarea-id');\n        }\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    }\n\n    function setExtensionDefaults(extension, defaults) {\n        Object.keys(defaults).forEach(function (prop) {\n            if (extension[prop] === undefined) {\n                extension[prop] = defaults[prop];\n            }\n        });\n        return extension;\n    }\n\n    function initExtension(extension, name, instance) {\n        var extensionDefaults = {\n            'window': instance.options.contentWindow,\n            'document': instance.options.ownerDocument,\n            'base': instance\n        };\n\n        // Add default options into the extension\n        extension = setExtensionDefaults(extension, extensionDefaults);\n\n        // Call init on the extension\n        if (typeof extension.init === 'function') {\n            extension.init();\n        }\n\n        // Set extension name (if not already set)\n        if (!extension.name) {\n            extension.name = name;\n        }\n        return extension;\n    }\n\n    function isToolbarEnabled() {\n        // If any of the elements don't have the toolbar disabled\n        // We need a toolbar\n        if (this.elements.every(function (element) {\n                return !!element.getAttribute('data-disable-toolbar');\n            })) {\n            return false;\n        }\n\n        return this.options.toolbar !== false;\n    }\n\n    function isAnchorPreviewEnabled() {\n        // If toolbar is disabled, don't add\n        if (!isToolbarEnabled.call(this)) {\n            return false;\n        }\n\n        return this.options.anchorPreview !== false;\n    }\n\n    function isPlaceholderEnabled() {\n        return this.options.placeholder !== false;\n    }\n\n    function isAutoLinkEnabled() {\n        return this.options.autoLink !== false;\n    }\n\n    function isImageDraggingEnabled() {\n        return this.options.imageDragging !== false;\n    }\n\n    function isKeyboardCommandsEnabled() {\n        return this.options.keyboardCommands !== false;\n    }\n\n    function shouldUseFileDraggingExtension() {\n        // Since the file-dragging extension replaces the image-dragging extension,\n        // we need to check if the user passed an overrided image-dragging extension.\n        // If they have, to avoid breaking users, we won't use file-dragging extension.\n        return !this.options.extensions['imageDragging'];\n    }\n\n    function createContentEditable(textarea) {\n        var div = this.options.ownerDocument.createElement('div'),\n            now = Date.now(),\n            uniqueId = 'medium-editor-' + now,\n            atts = textarea.attributes;\n\n        // Some browsers can move pretty fast, since we're using a timestamp\n        // to make a unique-id, ensure that the id is actually unique on the page\n        while (this.options.ownerDocument.getElementById(uniqueId)) {\n            now++;\n            uniqueId = 'medium-editor-' + now;\n        }\n\n        div.className = textarea.className;\n        div.id = uniqueId;\n        div.innerHTML = textarea.value;\n\n        textarea.setAttribute('medium-editor-textarea-id', uniqueId);\n\n        // re-create all attributes from the textearea to the new created div\n        for (var i = 0, n = atts.length; i < n; i++) {\n            // do not re-create existing attributes\n            if (!div.hasAttribute(atts[i].nodeName)) {\n                div.setAttribute(atts[i].nodeName, atts[i].value);\n            }\n        }\n\n        // If textarea has a form, listen for reset on the form to clear\n        // the content of the created div\n        if (textarea.form) {\n            this.on(textarea.form, 'reset', function (event) {\n                if (!event.defaultPrevented) {\n                    this.resetContent(this.options.ownerDocument.getElementById(uniqueId));\n                }\n            }.bind(this));\n        }\n\n        textarea.classList.add('medium-editor-hidden');\n        textarea.parentNode.insertBefore(\n            div,\n            textarea\n        );\n\n        return div;\n    }\n\n    function initElement(element, editorId) {\n        if (!element.getAttribute('data-medium-editor-element')) {\n            if (element.nodeName.toLowerCase() === 'textarea') {\n                element = createContentEditable.call(this, element);\n\n                // Make sure we only attach to editableInput once for <textarea> elements\n                if (!this.instanceHandleEditableInput) {\n                    this.instanceHandleEditableInput = handleEditableInput.bind(this);\n                    this.subscribe('editableInput', this.instanceHandleEditableInput);\n                }\n            }\n\n            if (!this.options.disableEditing && !element.getAttribute('data-disable-editing')) {\n                element.setAttribute('contentEditable', true);\n                element.setAttribute('spellcheck', this.options.spellcheck);\n            }\n\n            // Make sure we only attach to editableKeydownEnter once for disable-return options\n            if (!this.instanceHandleEditableKeydownEnter) {\n                if (element.getAttribute('data-disable-return') || element.getAttribute('data-disable-double-return')) {\n                    this.instanceHandleEditableKeydownEnter = handleDisabledEnterKeydown.bind(this);\n                    this.subscribe('editableKeydownEnter', this.instanceHandleEditableKeydownEnter);\n                }\n            }\n\n            // if we're not disabling return, add a handler to help handle cleanup\n            // for certain cases when enter is pressed\n            if (!this.options.disableReturn && !element.getAttribute('data-disable-return')) {\n                this.on(element, 'keyup', handleKeyup.bind(this));\n            }\n\n            var elementId = MediumEditor.util.guid();\n\n            element.setAttribute('data-medium-editor-element', true);\n            element.classList.add('medium-editor-element');\n            element.setAttribute('role', 'textbox');\n            element.setAttribute('aria-multiline', true);\n            element.setAttribute('data-medium-editor-editor-index', editorId);\n            // TODO: Merge data-medium-editor-element and medium-editor-index attributes for 6.0.0\n            // medium-editor-index is not named correctly anymore and can be re-purposed to signify\n            // whether the element has been initialized or not\n            element.setAttribute('medium-editor-index', elementId);\n            initialContent[elementId] = element.innerHTML;\n\n            this.events.attachAllEventsToElement(element);\n        }\n\n        return element;\n    }\n\n    function attachHandlers() {\n        // attach to tabs\n        this.subscribe('editableKeydownTab', handleTabKeydown.bind(this));\n\n        // Bind keys which can create or destroy a block element: backspace, delete, return\n        this.subscribe('editableKeydownDelete', handleBlockDeleteKeydowns.bind(this));\n        this.subscribe('editableKeydownEnter', handleBlockDeleteKeydowns.bind(this));\n\n        // Bind double space event\n        if (this.options.disableExtraSpaces) {\n            this.subscribe('editableKeydownSpace', handleDisableExtraSpaces.bind(this));\n        }\n\n        // Make sure we only attach to editableKeydownEnter once for disable-return options\n        if (!this.instanceHandleEditableKeydownEnter) {\n            // disabling return or double return\n            if (this.options.disableReturn || this.options.disableDoubleReturn) {\n                this.instanceHandleEditableKeydownEnter = handleDisabledEnterKeydown.bind(this);\n                this.subscribe('editableKeydownEnter', this.instanceHandleEditableKeydownEnter);\n            }\n        }\n    }\n\n    function initExtensions() {\n\n        this.extensions = [];\n\n        // Passed in extensions\n        Object.keys(this.options.extensions).forEach(function (name) {\n            // Always save the toolbar extension for last\n            if (name !== 'toolbar' && this.options.extensions[name]) {\n                this.extensions.push(initExtension(this.options.extensions[name], name, this));\n            }\n        }, this);\n\n        // 4 Cases for imageDragging + fileDragging extensons:\n        //\n        // 1. ImageDragging ON + No Custom Image Dragging Extension:\n        //    * Use fileDragging extension (default options)\n        // 2. ImageDragging OFF + No Custom Image Dragging Extension:\n        //    * Use fileDragging extension w/ images turned off\n        // 3. ImageDragging ON + Custom Image Dragging Extension:\n        //    * Don't use fileDragging (could interfere with custom image dragging extension)\n        // 4. ImageDragging OFF + Custom Image Dragging:\n        //    * Don't use fileDragging (could interfere with custom image dragging extension)\n        if (shouldUseFileDraggingExtension.call(this)) {\n            var opts = this.options.fileDragging;\n            if (!opts) {\n                opts = {};\n\n                // Image is in the 'allowedTypes' list by default.\n                // If imageDragging is off override the 'allowedTypes' list with an empty one\n                if (!isImageDraggingEnabled.call(this)) {\n                    opts.allowedTypes = [];\n                }\n            }\n            this.addBuiltInExtension('fileDragging', opts);\n        }\n\n        // Built-in extensions\n        var builtIns = {\n            paste: true,\n            'anchor-preview': isAnchorPreviewEnabled.call(this),\n            autoLink: isAutoLinkEnabled.call(this),\n            keyboardCommands: isKeyboardCommandsEnabled.call(this),\n            placeholder: isPlaceholderEnabled.call(this)\n        };\n        Object.keys(builtIns).forEach(function (name) {\n            if (builtIns[name]) {\n                this.addBuiltInExtension(name);\n            }\n        }, this);\n\n        // Users can pass in a custom toolbar extension\n        // so check for that first and if it's not present\n        // just create the default toolbar\n        var toolbarExtension = this.options.extensions['toolbar'];\n        if (!toolbarExtension && isToolbarEnabled.call(this)) {\n            // Backwards compatability\n            var toolbarOptions = MediumEditor.util.extend({}, this.options.toolbar, {\n                allowMultiParagraphSelection: this.options.allowMultiParagraphSelection // deprecated\n            });\n            toolbarExtension = new MediumEditor.extensions.toolbar(toolbarOptions);\n        }\n\n        // If the toolbar is not disabled, so we actually have an extension\n        // initialize it and add it to the extensions array\n        if (toolbarExtension) {\n            this.extensions.push(initExtension(toolbarExtension, 'toolbar', this));\n        }\n    }\n\n    function mergeOptions(defaults, options) {\n        var deprecatedProperties = [\n            ['allowMultiParagraphSelection', 'toolbar.allowMultiParagraphSelection']\n        ];\n        // warn about using deprecated properties\n        if (options) {\n            deprecatedProperties.forEach(function (pair) {\n                if (options.hasOwnProperty(pair[0]) && options[pair[0]] !== undefined) {\n                    MediumEditor.util.deprecated(pair[0], pair[1], 'v6.0.0');\n                }\n            });\n        }\n\n        return MediumEditor.util.defaults({}, options, defaults);\n    }\n\n    function execActionInternal(action, opts) {\n        /*jslint regexp: true*/\n        var appendAction = /^append-(.+)$/gi,\n            justifyAction = /justify([A-Za-z]*)$/g, /* Detecting if is justifyCenter|Right|Left */\n            match,\n            cmdValueArgument;\n        /*jslint regexp: false*/\n\n        // Actions starting with 'append-' should attempt to format a block of text ('formatBlock') using a specific\n        // type of block element (ie append-blockquote, append-h1, append-pre, etc.)\n        match = appendAction.exec(action);\n        if (match) {\n            return MediumEditor.util.execFormatBlock(this.options.ownerDocument, match[1]);\n        }\n\n        if (action === 'fontSize') {\n            // TODO: Deprecate support for opts.size in 6.0.0\n            if (opts.size) {\n                MediumEditor.util.deprecated('.size option for fontSize command', '.value', '6.0.0');\n            }\n            cmdValueArgument = opts.value || opts.size;\n            return this.options.ownerDocument.execCommand('fontSize', false, cmdValueArgument);\n        }\n\n        if (action === 'fontName') {\n            // TODO: Deprecate support for opts.name in 6.0.0\n            if (opts.name) {\n                MediumEditor.util.deprecated('.name option for fontName command', '.value', '6.0.0');\n            }\n            cmdValueArgument = opts.value || opts.name;\n            return this.options.ownerDocument.execCommand('fontName', false, cmdValueArgument);\n        }\n\n        if (action === 'createLink') {\n            return this.createLink(opts);\n        }\n\n        if (action === 'image') {\n            var src = this.options.contentWindow.getSelection().toString().trim();\n            return this.options.ownerDocument.execCommand('insertImage', false, src);\n        }\n\n        if (action === 'html') {\n            var html = this.options.contentWindow.getSelection().toString().trim();\n            return MediumEditor.util.insertHTMLCommand(this.options.ownerDocument, html);\n        }\n\n        /* Issue: https://github.com/yabwe/medium-editor/issues/595\n         * If the action is to justify the text */\n        if (justifyAction.exec(action)) {\n            var result = this.options.ownerDocument.execCommand(action, false, null),\n                parentNode = MediumEditor.selection.getSelectedParentElement(MediumEditor.selection.getSelectionRange(this.options.ownerDocument));\n            if (parentNode) {\n                cleanupJustifyDivFragments.call(this, MediumEditor.util.getTopBlockContainer(parentNode));\n            }\n\n            return result;\n        }\n\n        cmdValueArgument = opts && opts.value;\n        return this.options.ownerDocument.execCommand(action, false, cmdValueArgument);\n    }\n\n    /* If we've just justified text within a container block\n     * Chrome may have removed <br> elements and instead wrapped lines in <div> elements\n     * with a text-align property.  If so, we want to fix this\n     */\n    function cleanupJustifyDivFragments(blockContainer) {\n        if (!blockContainer) {\n            return;\n        }\n\n        var textAlign,\n            childDivs = Array.prototype.slice.call(blockContainer.childNodes).filter(function (element) {\n                var isDiv = element.nodeName.toLowerCase() === 'div';\n                if (isDiv && !textAlign) {\n                    textAlign = element.style.textAlign;\n                }\n                return isDiv;\n            });\n\n        /* If we found child <div> elements with text-align style attributes\n         * we should fix this by:\n         *\n         * 1) Unwrapping each <div> which has a text-align style\n         * 2) Insert a <br> element after each set of 'unwrapped' div children\n         * 3) Set the text-align style of the parent block element\n         */\n        if (childDivs.length) {\n            // Since we're mucking with the HTML, preserve selection\n            this.saveSelection();\n            childDivs.forEach(function (div) {\n                if (div.style.textAlign === textAlign) {\n                    var lastChild = div.lastChild;\n                    if (lastChild) {\n                        // Instead of a div, extract the child elements and add a <br>\n                        MediumEditor.util.unwrap(div, this.options.ownerDocument);\n                        var br = this.options.ownerDocument.createElement('BR');\n                        lastChild.parentNode.insertBefore(br, lastChild.nextSibling);\n                    }\n                }\n            }, this);\n            blockContainer.style.textAlign = textAlign;\n            // We're done, so restore selection\n            this.restoreSelection();\n        }\n    }\n\n    var initialContent = {};\n\n    MediumEditor.prototype = {\n        // NOT DOCUMENTED - exposed for backwards compatability\n        init: function (elements, options) {\n            this.options = mergeOptions.call(this, this.defaults, options);\n            this.origElements = elements;\n\n            if (!this.options.elementsContainer) {\n                this.options.elementsContainer = this.options.ownerDocument.body;\n            }\n\n            return this.setup();\n        },\n\n        setup: function () {\n            if (this.isActive) {\n                return;\n            }\n\n            addToEditors.call(this, this.options.contentWindow);\n            this.events = new MediumEditor.Events(this);\n            this.elements = [];\n\n            this.addElements(this.origElements);\n\n            if (this.elements.length === 0) {\n                return;\n            }\n\n            this.isActive = true;\n\n            // Call initialization helpers\n            initExtensions.call(this);\n            attachHandlers.call(this);\n        },\n\n        destroy: function () {\n            if (!this.isActive) {\n                return;\n            }\n\n            this.isActive = false;\n\n            this.extensions.forEach(function (extension) {\n                if (typeof extension.destroy === 'function') {\n                    extension.destroy();\n                }\n            }, this);\n\n            this.events.destroy();\n\n            this.elements.forEach(function (element) {\n                // Reset elements content, fix for issue where after editor destroyed the red underlines on spelling errors are left\n                if (this.options.spellcheck) {\n                    element.innerHTML = element.innerHTML;\n                }\n\n                // cleanup extra added attributes\n                element.removeAttribute('contentEditable');\n                element.removeAttribute('spellcheck');\n                element.removeAttribute('data-medium-editor-element');\n                element.classList.remove('medium-editor-element');\n                element.removeAttribute('role');\n                element.removeAttribute('aria-multiline');\n                element.removeAttribute('medium-editor-index');\n                element.removeAttribute('data-medium-editor-editor-index');\n\n                // Remove any elements created for textareas\n                if (element.getAttribute('medium-editor-textarea-id')) {\n                    cleanupTextareaElement(element);\n                }\n            }, this);\n            this.elements = [];\n            this.instanceHandleEditableKeydownEnter = null;\n            this.instanceHandleEditableInput = null;\n\n            removeFromEditors.call(this, this.options.contentWindow);\n        },\n\n        on: function (target, event, listener, useCapture) {\n            this.events.attachDOMEvent(target, event, listener, useCapture);\n\n            return this;\n        },\n\n        off: function (target, event, listener, useCapture) {\n            this.events.detachDOMEvent(target, event, listener, useCapture);\n\n            return this;\n        },\n\n        subscribe: function (event, listener) {\n            this.events.attachCustomEvent(event, listener);\n\n            return this;\n        },\n\n        unsubscribe: function (event, listener) {\n            this.events.detachCustomEvent(event, listener);\n\n            return this;\n        },\n\n        trigger: function (name, data, editable) {\n            this.events.triggerCustomEvent(name, data, editable);\n\n            return this;\n        },\n\n        delay: function (fn) {\n            var self = this;\n            return setTimeout(function () {\n                if (self.isActive) {\n                    fn();\n                }\n            }, this.options.delay);\n        },\n\n        serialize: function () {\n            var i,\n                elementid,\n                content = {},\n                len = this.elements.length;\n\n            for (i = 0; i < len; i += 1) {\n                elementid = (this.elements[i].id !== '') ? this.elements[i].id : 'element-' + i;\n                content[elementid] = {\n                    value: this.elements[i].innerHTML.trim()\n                };\n            }\n            return content;\n        },\n\n        getExtensionByName: function (name) {\n            var extension;\n            if (this.extensions && this.extensions.length) {\n                this.extensions.some(function (ext) {\n                    if (ext.name === name) {\n                        extension = ext;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return extension;\n        },\n\n        /**\n         * NOT DOCUMENTED - exposed as a helper for other extensions to use\n         */\n        addBuiltInExtension: function (name, opts) {\n            var extension = this.getExtensionByName(name),\n                merged;\n            if (extension) {\n                return extension;\n            }\n\n            switch (name) {\n                case 'anchor':\n                    merged = MediumEditor.util.extend({}, this.options.anchor, opts);\n                    extension = new MediumEditor.extensions.anchor(merged);\n                    break;\n                case 'anchor-preview':\n                    extension = new MediumEditor.extensions.anchorPreview(this.options.anchorPreview);\n                    break;\n                case 'autoLink':\n                    extension = new MediumEditor.extensions.autoLink();\n                    break;\n                case 'fileDragging':\n                    extension = new MediumEditor.extensions.fileDragging(opts);\n                    break;\n                case 'fontname':\n                    extension = new MediumEditor.extensions.fontName(this.options.fontName);\n                    break;\n                case 'fontsize':\n                    extension = new MediumEditor.extensions.fontSize(opts);\n                    break;\n                case 'keyboardCommands':\n                    extension = new MediumEditor.extensions.keyboardCommands(this.options.keyboardCommands);\n                    break;\n                case 'paste':\n                    extension = new MediumEditor.extensions.paste(this.options.paste);\n                    break;\n                case 'placeholder':\n                    extension = new MediumEditor.extensions.placeholder(this.options.placeholder);\n                    break;\n                default:\n                    // All of the built-in buttons for MediumEditor are extensions\n                    // so check to see if the extension we're creating is a built-in button\n                    if (MediumEditor.extensions.button.isBuiltInButton(name)) {\n                        if (opts) {\n                            merged = MediumEditor.util.defaults({}, opts, MediumEditor.extensions.button.prototype.defaults[name]);\n                            extension = new MediumEditor.extensions.button(merged);\n                        } else {\n                            extension = new MediumEditor.extensions.button(name);\n                        }\n                    }\n            }\n\n            if (extension) {\n                this.extensions.push(initExtension(extension, name, this));\n            }\n\n            return extension;\n        },\n\n        stopSelectionUpdates: function () {\n            this.preventSelectionUpdates = true;\n        },\n\n        startSelectionUpdates: function () {\n            this.preventSelectionUpdates = false;\n        },\n\n        checkSelection: function () {\n            var toolbar = this.getExtensionByName('toolbar');\n            if (toolbar) {\n                toolbar.checkState();\n            }\n            return this;\n        },\n\n        // Wrapper around document.queryCommandState for checking whether an action has already\n        // been applied to the current selection\n        queryCommandState: function (action) {\n            var fullAction = /^full-(.+)$/gi,\n                match,\n                queryState = null;\n\n            // Actions starting with 'full-' need to be modified since this is a medium-editor concept\n            match = fullAction.exec(action);\n            if (match) {\n                action = match[1];\n            }\n\n            try {\n                queryState = this.options.ownerDocument.queryCommandState(action);\n            } catch (exc) {\n                queryState = null;\n            }\n\n            return queryState;\n        },\n\n        execAction: function (action, opts) {\n            /*jslint regexp: true*/\n            var fullAction = /^full-(.+)$/gi,\n                match,\n                result;\n            /*jslint regexp: false*/\n\n            // Actions starting with 'full-' should be applied to to the entire contents of the editable element\n            // (ie full-bold, full-append-pre, etc.)\n            match = fullAction.exec(action);\n            if (match) {\n                // Store the current selection to be restored after applying the action\n                this.saveSelection();\n                // Select all of the contents before calling the action\n                this.selectAllContents();\n                result = execActionInternal.call(this, match[1], opts);\n                // Restore the previous selection\n                this.restoreSelection();\n            } else {\n                result = execActionInternal.call(this, action, opts);\n            }\n\n            // do some DOM clean-up for known browser issues after the action\n            if (action === 'insertunorderedlist' || action === 'insertorderedlist') {\n                MediumEditor.util.cleanListDOM(this.options.ownerDocument, this.getSelectedParentElement());\n            }\n\n            this.checkSelection();\n            return result;\n        },\n\n        getSelectedParentElement: function (range) {\n            if (range === undefined) {\n                range = this.options.contentWindow.getSelection().getRangeAt(0);\n            }\n            return MediumEditor.selection.getSelectedParentElement(range);\n        },\n\n        selectAllContents: function () {\n            var currNode = MediumEditor.selection.getSelectionElement(this.options.contentWindow);\n\n            if (currNode) {\n                // Move to the lowest descendant node that still selects all of the contents\n                while (currNode.children.length === 1) {\n                    currNode = currNode.children[0];\n                }\n\n                this.selectElement(currNode);\n            }\n        },\n\n        selectElement: function (element) {\n            MediumEditor.selection.selectNode(element, this.options.ownerDocument);\n\n            var selElement = MediumEditor.selection.getSelectionElement(this.options.contentWindow);\n            if (selElement) {\n                this.events.focusElement(selElement);\n            }\n        },\n\n        getFocusedElement: function () {\n            var focused;\n            this.elements.some(function (element) {\n                // Find the element that has focus\n                if (!focused && element.getAttribute('data-medium-focused')) {\n                    focused = element;\n                }\n\n                // bail if we found the element that had focus\n                return !!focused;\n            }, this);\n\n            return focused;\n        },\n\n        // Export the state of the selection in respect to one of this\n        // instance of MediumEditor's elements\n        exportSelection: function () {\n            var selectionElement = MediumEditor.selection.getSelectionElement(this.options.contentWindow),\n                editableElementIndex = this.elements.indexOf(selectionElement),\n                selectionState = null;\n\n            if (editableElementIndex >= 0) {\n                selectionState = MediumEditor.selection.exportSelection(selectionElement, this.options.ownerDocument);\n            }\n\n            if (selectionState !== null && editableElementIndex !== 0) {\n                selectionState.editableElementIndex = editableElementIndex;\n            }\n\n            return selectionState;\n        },\n\n        saveSelection: function () {\n            this.selectionState = this.exportSelection();\n        },\n\n        // Restore a selection based on a selectionState returned by a call\n        // to MediumEditor.exportSelection\n        importSelection: function (selectionState, favorLaterSelectionAnchor) {\n            if (!selectionState) {\n                return;\n            }\n\n            var editableElement = this.elements[selectionState.editableElementIndex || 0];\n            MediumEditor.selection.importSelection(selectionState, editableElement, this.options.ownerDocument, favorLaterSelectionAnchor);\n        },\n\n        restoreSelection: function () {\n            this.importSelection(this.selectionState);\n        },\n\n        createLink: function (opts) {\n            var currentEditor = MediumEditor.selection.getSelectionElement(this.options.contentWindow),\n                customEvent = {},\n                targetUrl;\n\n            // Make sure the selection is within an element this editor is tracking\n            if (this.elements.indexOf(currentEditor) === -1) {\n                return;\n            }\n\n            try {\n                this.events.disableCustomEvent('editableInput');\n                // TODO: Deprecate support for opts.url in 6.0.0\n                if (opts.url) {\n                    MediumEditor.util.deprecated('.url option for createLink', '.value', '6.0.0');\n                }\n                targetUrl = opts.url || opts.value;\n                if (targetUrl && targetUrl.trim().length > 0) {\n                    var currentSelection = this.options.contentWindow.getSelection();\n                    if (currentSelection) {\n                        var currRange = currentSelection.getRangeAt(0),\n                            commonAncestorContainer = currRange.commonAncestorContainer,\n                            exportedSelection,\n                            startContainerParentElement,\n                            endContainerParentElement,\n                            textNodes;\n\n                        // If the selection is contained within a single text node\n                        // and the selection starts at the beginning of the text node,\n                        // MSIE still says the startContainer is the parent of the text node.\n                        // If the selection is contained within a single text node, we\n                        // want to just use the default browser 'createLink', so we need\n                        // to account for this case and adjust the commonAncestorContainer accordingly\n                        if (currRange.endContainer.nodeType === 3 &&\n                            currRange.startContainer.nodeType !== 3 &&\n                            currRange.startOffset === 0 &&\n                            currRange.startContainer.firstChild === currRange.endContainer) {\n                            commonAncestorContainer = currRange.endContainer;\n                        }\n\n                        startContainerParentElement = MediumEditor.util.getClosestBlockContainer(currRange.startContainer);\n                        endContainerParentElement = MediumEditor.util.getClosestBlockContainer(currRange.endContainer);\n\n                        // If the selection is not contained within a single text node\n                        // but the selection is contained within the same block element\n                        // we want to make sure we create a single link, and not multiple links\n                        // which can happen with the built in browser functionality\n                        if (commonAncestorContainer.nodeType !== 3 && commonAncestorContainer.textContent.length !== 0 && startContainerParentElement === endContainerParentElement) {\n                            var parentElement = (startContainerParentElement || currentEditor),\n                                fragment = this.options.ownerDocument.createDocumentFragment();\n\n                            // since we are going to create a link from an extracted text,\n                            // be sure that if we are updating a link, we won't let an empty link behind (see #754)\n                            // (Workaroung for Chrome)\n                            this.execAction('unlink');\n\n                            exportedSelection = this.exportSelection();\n                            fragment.appendChild(parentElement.cloneNode(true));\n\n                            if (currentEditor === parentElement) {\n                                // We have to avoid the editor itself being wiped out when it's the only block element,\n                                // as our reference inside this.elements gets detached from the page when insertHTML runs.\n                                // If we just use [parentElement, 0] and [parentElement, parentElement.childNodes.length]\n                                // as the range boundaries, this happens whenever parentElement === currentEditor.\n                                // The tradeoff to this workaround is that a orphaned tag can sometimes be left behind at\n                                // the end of the editor's content.\n                                // In Gecko:\n                                // as an empty <strong></strong> if parentElement.lastChild is a <strong> tag.\n                                // In WebKit:\n                                // an invented <br /> tag at the end in the same situation\n                                MediumEditor.selection.select(\n                                    this.options.ownerDocument,\n                                    parentElement.firstChild,\n                                    0,\n                                    parentElement.lastChild,\n                                    parentElement.lastChild.nodeType === 3 ?\n                                    parentElement.lastChild.nodeValue.length : parentElement.lastChild.childNodes.length\n                                );\n                            } else {\n                                MediumEditor.selection.select(\n                                    this.options.ownerDocument,\n                                    parentElement,\n                                    0,\n                                    parentElement,\n                                    parentElement.childNodes.length\n                                );\n                            }\n\n                            var modifiedExportedSelection = this.exportSelection();\n\n                            textNodes = MediumEditor.util.findOrCreateMatchingTextNodes(\n                                this.options.ownerDocument,\n                                fragment,\n                                {\n                                    start: exportedSelection.start - modifiedExportedSelection.start,\n                                    end: exportedSelection.end - modifiedExportedSelection.start,\n                                    editableElementIndex: exportedSelection.editableElementIndex\n                                }\n                            );\n                            // If textNodes are not present, when changing link on images\n                            // ex: <a><img src=\"http://image.test.com\"></a>, change fragment to currRange.startContainer\n                            // and set textNodes array to [imageElement, imageElement]\n                            if (textNodes.length === 0) {\n                                fragment = this.options.ownerDocument.createDocumentFragment();\n                                fragment.appendChild(commonAncestorContainer.cloneNode(true));\n                                textNodes = [fragment.firstChild.firstChild, fragment.firstChild.lastChild];\n                            }\n\n                            // Creates the link in the document fragment\n                            MediumEditor.util.createLink(this.options.ownerDocument, textNodes, targetUrl.trim());\n\n                            // Chrome trims the leading whitespaces when inserting HTML, which messes up restoring the selection.\n                            var leadingWhitespacesCount = (fragment.firstChild.innerHTML.match(/^\\s+/) || [''])[0].length;\n\n                            // Now move the created link back into the original document in a way to preserve undo/redo history\n                            MediumEditor.util.insertHTMLCommand(this.options.ownerDocument, fragment.firstChild.innerHTML.replace(/^\\s+/, ''));\n                            exportedSelection.start -= leadingWhitespacesCount;\n                            exportedSelection.end -= leadingWhitespacesCount;\n\n                            this.importSelection(exportedSelection);\n                        } else {\n                            this.options.ownerDocument.execCommand('createLink', false, targetUrl);\n                        }\n\n                        if (this.options.targetBlank || opts.target === '_blank') {\n                            MediumEditor.util.setTargetBlank(MediumEditor.selection.getSelectionStart(this.options.ownerDocument), targetUrl);\n                        } else {\n                            MediumEditor.util.removeTargetBlank(MediumEditor.selection.getSelectionStart(this.options.ownerDocument), targetUrl);\n                        }\n\n                        if (opts.buttonClass) {\n                            MediumEditor.util.addClassToAnchors(MediumEditor.selection.getSelectionStart(this.options.ownerDocument), opts.buttonClass);\n                        }\n                    }\n                }\n                // Fire input event for backwards compatibility if anyone was listening directly to the DOM input event\n                if (this.options.targetBlank || opts.target === '_blank' || opts.buttonClass) {\n                    customEvent = this.options.ownerDocument.createEvent('HTMLEvents');\n                    customEvent.initEvent('input', true, true, this.options.contentWindow);\n                    for (var i = 0, len = this.elements.length; i < len; i += 1) {\n                        this.elements[i].dispatchEvent(customEvent);\n                    }\n                }\n            } finally {\n                this.events.enableCustomEvent('editableInput');\n            }\n            // Fire our custom editableInput event\n            this.events.triggerCustomEvent('editableInput', customEvent, currentEditor);\n        },\n\n        cleanPaste: function (text) {\n            this.getExtensionByName('paste').cleanPaste(text);\n        },\n\n        pasteHTML: function (html, options) {\n            this.getExtensionByName('paste').pasteHTML(html, options);\n        },\n\n        setContent: function (html, index) {\n            index = index || 0;\n\n            if (this.elements[index]) {\n                var target = this.elements[index];\n                target.innerHTML = html;\n                this.checkContentChanged(target);\n            }\n        },\n\n        getContent: function (index) {\n            index = index || 0;\n\n            if (this.elements[index]) {\n                return this.elements[index].innerHTML.trim();\n            }\n            return null;\n        },\n\n        checkContentChanged: function (editable) {\n            editable = editable || MediumEditor.selection.getSelectionElement(this.options.contentWindow);\n            this.events.updateInput(editable, { target: editable, currentTarget: editable });\n        },\n\n        resetContent: function (element) {\n            // For all elements that exist in the this.elements array, we can assume:\n            // - Its initial content has been set in the initialContent object\n            // - It has a medium-editor-index attribute which is the key value in the initialContent object\n\n            if (element) {\n                var index = this.elements.indexOf(element);\n                if (index !== -1) {\n                    this.setContent(initialContent[element.getAttribute('medium-editor-index')], index);\n                }\n                return;\n            }\n\n            this.elements.forEach(function (el, idx) {\n                this.setContent(initialContent[el.getAttribute('medium-editor-index')], idx);\n            }, this);\n        },\n\n        addElements: function (selector) {\n            // Convert elements into an array\n            var elements = createElementsArray(selector, this.options.ownerDocument, true);\n\n            // Do we have elements to add now?\n            if (elements.length === 0) {\n                return false;\n            }\n\n            elements.forEach(function (element) {\n                // Initialize all new elements (we check that in those functions don't worry)\n                element = initElement.call(this, element, this.id);\n\n                // Add new elements to our internal elements array\n                this.elements.push(element);\n\n                // Trigger event so extensions can know when an element has been added\n                this.trigger('addElement', { target: element, currentTarget: element }, element);\n            }, this);\n        },\n\n        removeElements: function (selector) {\n            // Convert elements into an array\n            var elements = createElementsArray(selector, this.options.ownerDocument),\n                toRemove = elements.map(function (el) {\n                    // For textareas, make sure we're looking at the editor div and not the textarea itself\n                    if (el.getAttribute('medium-editor-textarea-id') && el.parentNode) {\n                        return el.parentNode.querySelector('div[medium-editor-textarea-id=\"' + el.getAttribute('medium-editor-textarea-id') + '\"]');\n                    } else {\n                        return el;\n                    }\n                });\n\n            this.elements = this.elements.filter(function (element) {\n                // If this is an element we want to remove\n                if (toRemove.indexOf(element) !== -1) {\n                    this.events.cleanupElement(element);\n                    if (element.getAttribute('medium-editor-textarea-id')) {\n                        cleanupTextareaElement(element);\n                    }\n                    // Trigger event so extensions can clean-up elements that are being removed\n                    this.trigger('removeElement', { target: element, currentTarget: element }, element);\n                    return false;\n                }\n                return true;\n            }, this);\n        }\n    };\n\n    MediumEditor.getEditorFromElement = function (element) {\n        var index = element.getAttribute('data-medium-editor-editor-index'),\n            win = element && element.ownerDocument && (element.ownerDocument.defaultView || element.ownerDocument.parentWindow);\n        if (win && win._mediumEditors && win._mediumEditors[index]) {\n            return win._mediumEditors[index];\n        }\n        return null;\n    };\n}());\n\n(function () {\n    // summary: The default options hash used by the Editor\n\n    MediumEditor.prototype.defaults = {\n        activeButtonClass: 'medium-editor-button-active',\n        buttonLabels: false,\n        delay: 0,\n        disableReturn: false,\n        disableDoubleReturn: false,\n        disableExtraSpaces: false,\n        disableEditing: false,\n        autoLink: false,\n        elementsContainer: false,\n        contentWindow: window,\n        ownerDocument: document,\n        targetBlank: false,\n        extensions: {},\n        spellcheck: true\n    };\n})();\n\nMediumEditor.parseVersionString = function (release) {\n    var split = release.split('-'),\n        version = split[0].split('.'),\n        preRelease = (split.length > 1) ? split[1] : '';\n    return {\n        major: parseInt(version[0], 10),\n        minor: parseInt(version[1], 10),\n        revision: parseInt(version[2], 10),\n        preRelease: preRelease,\n        toString: function () {\n            return [version[0], version[1], version[2]].join('.') + (preRelease ? '-' + preRelease : '');\n        }\n    };\n};\n\nMediumEditor.version = MediumEditor.parseVersionString.call(this, ({\n    // grunt-bump looks for this:\n    'version': '5.23.3'\n}).version);\n\n    return MediumEditor;\n}()));\n"]}]}