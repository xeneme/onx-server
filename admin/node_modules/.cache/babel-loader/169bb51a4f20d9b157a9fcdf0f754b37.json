{"remainingRequest":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/thread-loader/dist/cjs.js!/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/babel-loader/lib/index.js!/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/src/components/maps/bubble-maps/BubbleMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/src/components/maps/bubble-maps/BubbleMap.vue","mtime":1594635175640},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KaW1wb3J0ICdhbWNoYXJ0czMnOwppbXBvcnQgJ2FtY2hhcnRzMy9hbWNoYXJ0cy9wbHVnaW5zL3Jlc3BvbnNpdmUvcmVzcG9uc2l2ZS5qcyc7CmltcG9ydCAnYW1jaGFydHMzL2FtY2hhcnRzL3NlcmlhbC5qcyc7CmltcG9ydCAnYW1jaGFydHMzL2FtY2hhcnRzL3RoZW1lcy9saWdodCc7CmltcG9ydCAnYW1tYXAzJzsKaW1wb3J0ICdhbW1hcDMvYW1tYXAvbWFwcy9qcy93b3JsZExvdyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYnViYmxlLW1hcCcsCiAgcHJvcHM6IFsnbWFwRGF0YSddLAogIG1ldGhvZHM6IHsKICAgIGRyYXdNYXA6IGZ1bmN0aW9uIGRyYXdNYXAoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvKiBnbG9iYWwgQW1DaGFydHMgKi8KICAgICAgdmFyIG1pbkJ1bGxldFNpemUgPSAzOwogICAgICB2YXIgbWF4QnVsbGV0U2l6ZSA9IDcwOwogICAgICB2YXIgbWluID0gSW5maW5pdHk7CiAgICAgIHZhciBtYXggPSAtSW5maW5pdHk7CiAgICAgIEFtQ2hhcnRzLnRoZW1lID0gQW1DaGFydHMudGhlbWVzLmxpZ2h0OyAvLyBnZXQgbWluIGFuZCBtYXggdmFsdWVzCgogICAgICB0aGlzLm1hcERhdGEuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhSXRlbSkgewogICAgICAgIHZhciB2YWx1ZSA9IGRhdGFJdGVtLnZhbHVlOwoKICAgICAgICBpZiAodmFsdWUgPCBtaW4pIHsKICAgICAgICAgIG1pbiA9IHZhbHVlOwogICAgICAgIH0KCiAgICAgICAgaWYgKHZhbHVlID4gbWF4KSB7CiAgICAgICAgICBtYXggPSB2YWx1ZTsKICAgICAgICB9CiAgICAgIH0pOyAvLyBidWlsZCBtYXAKCiAgICAgIHZhciBtYXAgPSBuZXcgQW1DaGFydHMuQW1NYXAoKTsKICAgICAgbWFwLnByb2plY3Rpb24gPSAnd2lua2VsMyc7CiAgICAgIG1hcC5hZGRUaXRsZSgnUG9wdWxhdGlvbiBvZiB0aGUgV29ybGQgaW4gMjAxMScsIDE0LCAxLCAxLCBmYWxzZSk7CiAgICAgIG1hcC5hZGRUaXRsZSgnc291cmNlOiBHYXBtaW5kZXInLCAxMSwgMSwgMSwgMSwgZmFsc2UpOwogICAgICBtYXAuYXJlYXNTZXR0aW5ncyA9IHsKICAgICAgICB1bmxpc3RlZEFyZWFzQ29sb3I6ICcjZWVlJywKICAgICAgICB1bmxpc3RlZEFyZWFzQWxwaGE6IDEsCiAgICAgICAgb3V0bGluZUNvbG9yOiAnI2ZmZicsCiAgICAgICAgb3V0bGluZVRoaWNrbmVzczogMgogICAgICB9OwogICAgICBtYXAuaW1hZ2VzU2V0dGluZ3MgPSB7CiAgICAgICAgYmFsbG9vblRleHQ6ICc8c3BhbiBzdHlsZT0iZm9udC1zaXplOjE0cHgiPjxiPltbdGl0bGVdXTwvYj46IFtbdmFsdWVdXTwvc3Bhbj4nLAogICAgICAgIGFscGhhOiAwLjc1CiAgICAgIH07CiAgICAgIHZhciBkYXRhUHJvdmlkZXIgPSB7CiAgICAgICAgbWFwVmFyOiBBbUNoYXJ0cy5tYXBzLndvcmxkTG93LAogICAgICAgIGltYWdlczogW10KICAgICAgfTsgLy8gY3JlYXRlIGNpcmNsZSBmb3IgZWFjaCBjb3VudHJ5CiAgICAgIC8vIGl0J3MgYmV0dGVyIHRvIHVzZSBjaXJjbGUgc3F1YXJlIHRvIHNob3cgZGlmZmVyZW5jZSBiZXR3ZWVuIHZhbHVlcywgbm90IGEgcmFkaXVzCgogICAgICB2YXIgbWF4U3F1YXJlID0gbWF4QnVsbGV0U2l6ZSAqIG1heEJ1bGxldFNpemUgKiAyICogTWF0aC5QSTsKICAgICAgdmFyIG1pblNxdWFyZSA9IG1pbkJ1bGxldFNpemUgKiBtaW5CdWxsZXRTaXplICogMiAqIE1hdGguUEk7IC8vIGNyZWF0ZSBjaXJjbGUgZm9yIGVhY2ggY291bnRyeQoKICAgICAgdGhpcy5tYXBEYXRhLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoZGF0YUl0ZW0pIHsKICAgICAgICB2YXIgdmFsdWUgPSBkYXRhSXRlbS52YWx1ZTsgLy8gY2FsY3VsYXRlIHNpemUgb2YgYSBidWJibGUKCiAgICAgICAgdmFyIHNxdWFyZSA9ICh2YWx1ZSAtIG1pbikgLyAobWF4IC0gbWluKSAqIChtYXhTcXVhcmUgLSBtaW5TcXVhcmUpICsgbWluU3F1YXJlOwoKICAgICAgICBpZiAoc3F1YXJlIDwgbWluU3F1YXJlKSB7CiAgICAgICAgICBzcXVhcmUgPSBtaW5TcXVhcmU7CiAgICAgICAgfQoKICAgICAgICB2YXIgc2l6ZSA9IE1hdGguc3FydChzcXVhcmUgLyAoTWF0aC5QSSAqIDIpKTsKICAgICAgICB2YXIgaWQgPSBkYXRhSXRlbS5jb2RlOwogICAgICAgIGRhdGFQcm92aWRlci5pbWFnZXMucHVzaCh7CiAgICAgICAgICB0eXBlOiAnY2lyY2xlJywKICAgICAgICAgIHdpZHRoOiBzaXplLAogICAgICAgICAgaGVpZ2h0OiBzaXplLAogICAgICAgICAgY29sb3I6IGRhdGFJdGVtLmNvbG9yLAogICAgICAgICAgbG9uZ2l0dWRlOiBfdGhpcy5tYXBEYXRhLmxhdGxvbmdbaWRdLmxvbmdpdHVkZSwKICAgICAgICAgIGxhdGl0dWRlOiBfdGhpcy5tYXBEYXRhLmxhdGxvbmdbaWRdLmxhdGl0dWRlLAogICAgICAgICAgdGl0bGU6IGRhdGFJdGVtLm5hbWUsCiAgICAgICAgICB2YWx1ZTogdmFsdWUKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIG1hcC5kYXRhUHJvdmlkZXIgPSBkYXRhUHJvdmlkZXI7CiAgICAgIG1hcC53cml0ZSh0aGlzLiRlbCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3TWFwKCk7CiAgfQp9Ow=="},{"version":3,"sources":["BubbleMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"bubble-map fill-height\" />\n</template>\n\n<script>\nimport 'amcharts3'\nimport 'amcharts3/amcharts/plugins/responsive/responsive.js'\nimport 'amcharts3/amcharts/serial.js'\nimport 'amcharts3/amcharts/themes/light'\n\nimport 'ammap3'\nimport 'ammap3/ammap/maps/js/worldLow'\n\nexport default {\n  name: 'bubble-map',\n\n  props: ['mapData'],\n\n  methods: {\n    drawMap () {\n      /* global AmCharts */\n      const minBulletSize = 3\n      const maxBulletSize = 70\n      let min = Infinity\n      let max = -Infinity\n      AmCharts.theme = AmCharts.themes.light\n\n      // get min and max values\n      this.mapData.data.forEach((dataItem) => {\n        const value = dataItem.value\n        if (value < min) {\n          min = value\n        }\n        if (value > max) {\n          max = value\n        }\n      })\n\n      // build map\n      const map = new AmCharts.AmMap()\n\n      map.projection = 'winkel3'\n      map.addTitle('Population of the World in 2011', 14, 1, 1, false)\n      map.addTitle('source: Gapminder', 11, 1, 1, 1, false)\n      map.areasSettings = {\n        unlistedAreasColor: '#eee',\n        unlistedAreasAlpha: 1,\n        outlineColor: '#fff',\n        outlineThickness: 2,\n      }\n      map.imagesSettings = {\n        balloonText: '<span style=\"font-size:14px\"><b>[[title]]</b>: [[value]]</span>',\n        alpha: 0.75,\n      }\n\n      const dataProvider = {\n        mapVar: AmCharts.maps.worldLow,\n        images: [],\n      }\n\n      // create circle for each country\n      // it's better to use circle square to show difference between values, not a radius\n      const maxSquare = maxBulletSize * maxBulletSize * 2 * Math.PI\n      const minSquare = minBulletSize * minBulletSize * 2 * Math.PI\n\n      // create circle for each country\n      this.mapData.data.forEach((dataItem) => {\n        const value = dataItem.value\n        // calculate size of a bubble\n        let square = (value - min) / (max - min) * (maxSquare - minSquare) + minSquare\n        if (square < minSquare) {\n          square = minSquare\n        }\n        const size = Math.sqrt(square / (Math.PI * 2))\n        const id = dataItem.code\n        dataProvider.images.push({\n          type: 'circle',\n          width: size,\n          height: size,\n          color: dataItem.color,\n          longitude: this.mapData.latlong[id].longitude,\n          latitude: this.mapData.latlong[id].latitude,\n          title: dataItem.name,\n          value: value,\n        })\n      })\n\n      map.dataProvider = dataProvider\n      map.write(this.$el)\n    },\n  },\n\n  mounted () {\n    this.drawMap()\n  },\n}\n</script>\n"],"sourceRoot":"src/components/maps/bubble-maps"}]}