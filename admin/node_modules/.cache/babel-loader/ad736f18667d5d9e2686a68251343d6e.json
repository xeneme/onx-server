{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/axios/lib/helpers/parseHeaders.js","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/axios/lib/helpers/parseHeaders.js","mtime":1477545543000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCIpOwoKdmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpOwovKioKICogUGFyc2UgaGVhZGVycyBpbnRvIGFuIG9iamVjdAogKgogKiBgYGAKICogRGF0ZTogV2VkLCAyNyBBdWcgMjAxNCAwODo1ODo0OSBHTVQKICogQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uCiAqIENvbm5lY3Rpb246IGtlZXAtYWxpdmUKICogVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQKICogYGBgCiAqCiAqIEBwYXJhbSB7U3RyaW5nfSBoZWFkZXJzIEhlYWRlcnMgbmVlZGluZyB0byBiZSBwYXJzZWQKICogQHJldHVybnMge09iamVjdH0gSGVhZGVycyBwYXJzZWQgaW50byBhbiBvYmplY3QKICovCgoKbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJzZUhlYWRlcnMoaGVhZGVycykgewogIHZhciBwYXJzZWQgPSB7fTsKICB2YXIga2V5OwogIHZhciB2YWw7CiAgdmFyIGk7CgogIGlmICghaGVhZGVycykgewogICAgcmV0dXJuIHBhcnNlZDsKICB9CgogIHV0aWxzLmZvckVhY2goaGVhZGVycy5zcGxpdCgnXG4nKSwgZnVuY3Rpb24gcGFyc2VyKGxpbmUpIHsKICAgIGkgPSBsaW5lLmluZGV4T2YoJzonKTsKICAgIGtleSA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoMCwgaSkpLnRvTG93ZXJDYXNlKCk7CiAgICB2YWwgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKGkgKyAxKSk7CgogICAgaWYgKGtleSkgewogICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsOwogICAgfQogIH0pOwogIHJldHVybiBwYXJzZWQ7Cn07"},{"version":3,"sources":["/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/axios/lib/helpers/parseHeaders.js"],"names":["utils","require","module","exports","parseHeaders","headers","parsed","key","val","i","forEach","split","parser","line","indexOf","trim","substr","toLowerCase"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;AAEA;;;;;;;;;;;;;;;AAaAC,MAAM,CAACC,OAAP,GAAiB,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC9C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,GAAJ;AACA,MAAIC,GAAJ;AACA,MAAIC,CAAJ;;AAEA,MAAI,CAACJ,OAAL,EAAc;AAAE,WAAOC,MAAP;AAAgB;;AAEhCN,EAAAA,KAAK,CAACU,OAAN,CAAcL,OAAO,CAACM,KAAR,CAAc,IAAd,CAAd,EAAmC,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACvDJ,IAAAA,CAAC,GAAGI,IAAI,CAACC,OAAL,CAAa,GAAb,CAAJ;AACAP,IAAAA,GAAG,GAAGP,KAAK,CAACe,IAAN,CAAWF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeP,CAAf,CAAX,EAA8BQ,WAA9B,EAAN;AACAT,IAAAA,GAAG,GAAGR,KAAK,CAACe,IAAN,CAAWF,IAAI,CAACG,MAAL,CAAYP,CAAC,GAAG,CAAhB,CAAX,CAAN;;AAEA,QAAIF,GAAJ,EAAS;AACPD,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAAN,GAAc,IAAd,GAAqBC,GAAnC,GAAyCA,GAAvD;AACD;AACF,GARD;AAUA,SAAOF,MAAP;AACD,CAnBD","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n"]}]}