{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/v-tooltip/dist/v-tooltip.esm.js","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/v-tooltip/dist/v-tooltip.esm.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/node_modules/v-tooltip/dist/v-tooltip.esm.js"],"names":["Popper","ResizeObserver","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","SVGAnimatedString","window","convertToArray","split","addClasses","el","classes","newClasses","classList","className","baseVal","newClass","indexOf","SVGElement","setAttribute","join","removeClasses","index","splice","supportsPassive","opts","get","addEventListener","e","listCacheClear","__data__","size","_listCacheClear","eq","other","eq_1","assocIndexOf","array","_assocIndexOf","arrayProto","Array","listCacheDelete","data","lastIndex","pop","call","_listCacheDelete","listCacheGet","undefined","_listCacheGet","listCacheHas","_listCacheHas","listCacheSet","_listCacheSet","ListCache","entries","clear","entry","set","has","_ListCache","stackClear","_stackClear","stackDelete","result","_stackDelete","stackGet","_stackGet","stackHas","_stackHas","commonjsGlobal","globalThis","global","self","createCommonjsModule","fn","module","exports","freeGlobal","_freeGlobal","freeSelf","root","Function","_root","Symbol$1","_Symbol","objectProto","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","getRawTag","isOwn","tag","unmasked","_getRawTag","objectProto$1","nativeObjectToString$1","objectToString","_objectToString","nullTag","undefinedTag","symToStringTag$1","baseGetTag","_baseGetTag","isObject","type","isObject_1","asyncTag","funcTag","genTag","proxyTag","isFunction","isFunction_1","coreJsData","_coreJsData","maskSrcKey","uid","exec","IE_PROTO","isMasked","func","_isMasked","funcProto","funcToString","toSource","_toSource","reRegExpChar","reIsHostCtor","funcProto$1","objectProto$2","funcToString$1","hasOwnProperty$1","reIsNative","RegExp","replace","baseIsNative","pattern","test","_baseIsNative","getValue","_getValue","getNative","_getNative","Map","_Map","nativeCreate","_nativeCreate","hashClear","_hashClear","hashDelete","_hashDelete","HASH_UNDEFINED","objectProto$3","hasOwnProperty$2","hashGet","_hashGet","objectProto$4","hasOwnProperty$3","hashHas","_hashHas","HASH_UNDEFINED$1","hashSet","_hashSet","Hash","_Hash","mapCacheClear","_mapCacheClear","isKeyable","_isKeyable","getMapData","map","_getMapData","mapCacheDelete","_mapCacheDelete","mapCacheGet","_mapCacheGet","mapCacheHas","_mapCacheHas","mapCacheSet","_mapCacheSet","MapCache","_MapCache","LARGE_ARRAY_SIZE","stackSet","pairs","_stackSet","Stack","_Stack","HASH_UNDEFINED$2","setCacheAdd","_setCacheAdd","setCacheHas","_setCacheHas","SetCache","values","add","_SetCache","arraySome","predicate","_arraySome","cacheHas","cache","_cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","bitmask","customizer","equalFunc","stack","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","_equalArrays","Uint8Array","_Uint8Array","mapToArray","_mapToArray","setToArray","_setToArray","COMPARE_PARTIAL_FLAG$1","COMPARE_UNORDERED_FLAG$1","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","valueOf","equalByTag","byteLength","byteOffset","buffer","name","message","convert","_equalByTag","arrayPush","offset","_arrayPush","isArray","isArray_1","baseGetAllKeys","keysFunc","symbolsFunc","_baseGetAllKeys","arrayFilter","resIndex","_arrayFilter","stubArray","stubArray_1","objectProto$5","propertyIsEnumerable","nativeGetSymbols","getSymbols","symbol","_getSymbols","baseTimes","n","iteratee","_baseTimes","isObjectLike","isObjectLike_1","argsTag","baseIsArguments","_baseIsArguments","objectProto$6","hasOwnProperty$4","propertyIsEnumerable$1","isArguments","isArguments_1","stubFalse","stubFalse_1","isBuffer_1","freeExports","nodeType","freeModule","moduleExports","Buffer","nativeIsBuffer","isBuffer","MAX_SAFE_INTEGER","reIsUint","isIndex","_isIndex","MAX_SAFE_INTEGER$1","isLength","isLength_1","argsTag$1","arrayTag","boolTag$1","dateTag$1","errorTag$1","funcTag$1","mapTag$1","numberTag$1","objectTag","regexpTag$1","setTag$1","stringTag$1","weakMapTag","arrayBufferTag$1","dataViewTag$1","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","_baseIsTypedArray","baseUnary","_baseUnary","_nodeUtil","freeProcess","process","nodeUtil","types","require","binding","nodeIsTypedArray","isTypedArray","isTypedArray_1","objectProto$7","hasOwnProperty$5","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","_arrayLikeKeys","objectProto$8","isPrototype","Ctor","proto","_isPrototype","overArg","transform","arg","_overArg","nativeKeys","_nativeKeys","objectProto$9","hasOwnProperty$6","baseKeys","_baseKeys","isArrayLike","isArrayLike_1","keys_1","getAllKeys","_getAllKeys","COMPARE_PARTIAL_FLAG$2","objectProto$a","hasOwnProperty$7","equalObjects","objProps","objLength","othProps","skipCtor","objValue","objCtor","othCtor","_equalObjects","DataView","_DataView","Promise$1","_Promise","Set","_Set","WeakMap","_WeakMap","mapTag$2","objectTag$1","promiseTag","setTag$2","weakMapTag$1","dataViewTag$2","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","_getTag","COMPARE_PARTIAL_FLAG$3","argsTag$2","arrayTag$1","objectTag$2","objectProto$b","hasOwnProperty$8","baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","_baseIsEqualDeep","baseIsEqual","_baseIsEqual","isEqual","isEqual_1","DEFAULT_OPTIONS","container","delay","html","placement","title","template","trigger","openTooltips","Tooltip","_reference","_options","_this","evt","reference","options","relatedreference","toElement","relatedTarget","callback","evt2","relatedreference2","_tooltipNode","removeEventListener","contains","_scheduleHide","jquery","show","bind","hide","_isOpen","_init","_show","_hide","dispose","_dispose","toggle","setClasses","_classes","setContent","content","_setContent","setOptions","classesUpdated","directive","defaultClass","getOptions","needPopperUpdate","needRestart","isOpen","popperInstance","update","events","_isDisposed","_enableDocumentTouch","_setEventListeners","$_originalTitle","getAttribute","removeAttribute","_create","tooltipGenerator","document","createElement","innerHTML","trim","tooltipNode","childNodes","id","concat","Math","random","substr","autoHide","_this2","asyncContent","_applyContent","then","_this3","Promise","reject","allowHtml","rootNode","titleNode","querySelector","innerSelector","firstChild","removeChild","appendChild","loadingClass","loadingContent","asyncResult","innerText","clearTimeout","_disposeTimer","assign","updateClasses","_ensureShown","_this4","style","display","enableEventListeners","_findContainer","_append","popperOptions","modifiers","arrow","element","arrowSelector","boundariesElement","preventOverflow","requestAnimationFrame","_noLongerOpen","_this5","disableEventListeners","disposeTime","disposeTimeout","setTimeout","_removeTooltipNode","parentNode","_this6","_events","_ref","event","destroy","removeOnDestroy","_this7","directEvents","oppositeEvents","hideOnTargetClick","usedByTooltip","_scheduleShow","_onDocumentTouch","_this8","computedDelay","_scheduleTimer","_this9","ownerDocument","body","isSet","_setTooltipNodeEvent","passive","capture","state","enabled","positions","defaultOptions","defaultPlacement","defaultTargetClass","defaultHtml","defaultTemplate","defaultArrowSelector","defaultInnerSelector","defaultDelay","defaultTrigger","defaultOffset","defaultContainer","defaultBoundariesElement","defaultPopperOptions","defaultLoadingClass","defaultLoadingContent","defaultHideOnTargetClick","popover","defaultBaseClass","defaultWrapperClass","defaultInnerClass","defaultArrowClass","defaultOpenClass","defaultAutoHide","defaultHandleResize","typeofOffset","getPlacement","pos","getContent","createTooltip","tooltip","_tooltip","_vueEl","targetClasses","_tooltipTargetClasses","destroyTooltip","_tooltipOldShow","oldValue","unbind","addListeners","onClick","onTouchStart","removeListeners","onTouchEnd","onTouchCancel","currentTarget","closePopover","$_vclosepopover_touch","closeAllPopover","$_closePopoverModifiers","all","changedTouches","touch","$_vclosepopover_touchPoint","firstTouch","abs","screenY","screenX","vclosepopover","_ref2","getDefault","isIOS","navigator","userAgent","MSStream","openPopovers","Element","script","components","open","Boolean","disabled","_default","Number","popoverClass","popoverBaseClass","popoverInnerClass","popoverWrapperClass","popoverArrowClass","handleResize","openGroup","openClass","computed","cssClass","popoverId","watch","val","oldVal","popoverNode","$refs","$_findContainer","console","warn","scheduleUpdate","$_removeEventListeners","$_addEventListeners","$_updatePopper","handler","deep","created","$_isDisposed","$_mounted","$_events","$_preventOpen","mounted","$_init","deactivated","beforeDestroy","methods","_ref2$skipDelay","skipDelay","_ref2$force","force","$_scheduleShow","$emit","$_beingShowed","_ref3","_ref3$skipDelay","$_scheduleHide","$_show","$_disposeTimer","$_getOffset","hidden","$_hide","$_scheduleTimer","parseInt","$_setTooltipNodeEvent","event2","_ref4","cb","$_restartPopper","$_handleGlobalClose","$_handleResize","handleGlobalTouchend","handleGlobalClick","handleGlobalClose","_loop","normalizeComponent","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","originalRender","renderWithStyleInjection","h","existing","beforeCreate","__vue_script__","__vue_render__","_vm","_h","$createElement","_c","_self","staticClass","ref","staticStyle","attrs","tabindex","_t","_v","visibility","on","keyup","$event","_k","keyCode","position","notify","_e","__vue_staticRenderFns__","_withStripped","__vue_inject_styles__","__vue_scope_id__","__vue_module_identifier__","__vue_is_functional_template__","__vue_component__","_defineProperty$1","baseAssignValue","_baseAssignValue","assignMergeValue","_assignMergeValue","createBaseFor","fromRight","iterable","_createBaseFor","baseFor","_baseFor","_cloneBuffer","allocUnsafe","cloneBuffer","isDeep","slice","copy","cloneArrayBuffer","arrayBuffer","_cloneArrayBuffer","cloneTypedArray","typedArray","_cloneTypedArray","copyArray","_copyArray","objectCreate","create","baseCreate","_baseCreate","getPrototype","getPrototypeOf","_getPrototype","initCloneObject","_initCloneObject","isArrayLikeObject","isArrayLikeObject_1","objectTag$3","funcProto$2","objectProto$c","funcToString$2","hasOwnProperty$9","objectCtorString","isPlainObject","isPlainObject_1","safeGet","_safeGet","objectProto$d","hasOwnProperty$a","assignValue","_assignValue","copyObject","isNew","newValue","_copyObject","nativeKeysIn","_nativeKeysIn","objectProto$e","hasOwnProperty$b","baseKeysIn","isProto","_baseKeysIn","keysIn","keysIn_1","toPlainObject","toPlainObject_1","baseMergeDeep","srcIndex","mergeFunc","srcValue","isCommon","isTyped","_baseMergeDeep","baseMerge","_baseMerge","identity","identity_1","thisArg","args","_apply","nativeMax","max","overRest","start","otherArgs","_overRest","constant","constant_1","baseSetToString","string","_baseSetToString","HOT_COUNT","HOT_SPAN","nativeNow","Date","now","shortOut","count","lastCalled","stamp","remaining","_shortOut","setToString","_setToString","baseRest","_baseRest","isIterateeCall","_isIterateeCall","createAssigner","assigner","sources","guard","_createAssigner","merge","merge_1","styleInject","css","insertAt","head","getElementsByTagName","insertBefore","styleSheet","cssText","createTextNode","install","Vue","installed","finalOptions","plugin","component","VTooltip","VClosePopover","VPopover","GlobalVue","use"],"mappings":"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","sourcesContent":["import Popper from 'popper.js';\nimport { ResizeObserver } from 'vue-resize';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar SVGAnimatedString = function SVGAnimatedString() {};\n\nif (typeof window !== 'undefined') {\n  SVGAnimatedString = window.SVGAnimatedString;\n}\n\nfunction convertToArray(value) {\n  if (typeof value === 'string') {\n    value = value.split(' ');\n  }\n\n  return value;\n}\n/**\n * Add classes to an element.\n * This method checks to ensure that the classes don't already exist before adding them.\n * It uses el.className rather than classList in order to be IE friendly.\n * @param {object} el - The element to add the classes to.\n * @param {classes} string - List of space separated classes to be added to the element.\n */\n\nfunction addClasses(el, classes) {\n  var newClasses = convertToArray(classes);\n  var classList;\n\n  if (el.className instanceof SVGAnimatedString) {\n    classList = convertToArray(el.className.baseVal);\n  } else {\n    classList = convertToArray(el.className);\n  }\n\n  newClasses.forEach(function (newClass) {\n    if (classList.indexOf(newClass) === -1) {\n      classList.push(newClass);\n    }\n  });\n\n  if (el instanceof SVGElement) {\n    el.setAttribute('class', classList.join(' '));\n  } else {\n    el.className = classList.join(' ');\n  }\n}\n/**\n * Remove classes from an element.\n * It uses el.className rather than classList in order to be IE friendly.\n * @export\n * @param {any} el The element to remove the classes from.\n * @param {any} classes List of space separated classes to be removed from the element.\n */\n\nfunction removeClasses(el, classes) {\n  var newClasses = convertToArray(classes);\n  var classList;\n\n  if (el.className instanceof SVGAnimatedString) {\n    classList = convertToArray(el.className.baseVal);\n  } else {\n    classList = convertToArray(el.className);\n  }\n\n  newClasses.forEach(function (newClass) {\n    var index = classList.indexOf(newClass);\n\n    if (index !== -1) {\n      classList.splice(index, 1);\n    }\n  });\n\n  if (el instanceof SVGElement) {\n    el.setAttribute('class', classList.join(' '));\n  } else {\n    el.className = classList.join(' ');\n  }\n}\nvar supportsPassive = false;\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false;\n\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supportsPassive = true;\n      }\n    });\n    window.addEventListener('test', null, opts);\n  } catch (e) {}\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nvar _listCacheClear = listCacheClear;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nvar eq_1 = eq;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq_1(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nvar _assocIndexOf = assocIndexOf;\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nvar _listCacheDelete = listCacheDelete;\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nvar _listCacheGet = listCacheGet;\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\nvar _listCacheHas = listCacheHas;\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nvar _listCacheSet = listCacheSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\n\nvar _ListCache = ListCache;\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new _ListCache;\n  this.size = 0;\n}\n\nvar _stackClear = stackClear;\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nvar _stackDelete = stackDelete;\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nvar _stackGet = stackGet;\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nvar _stackHas = stackHas;\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\n\nvar _freeGlobal = freeGlobal;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\nvar _root = root;\n\n/** Built-in value references. */\nvar Symbol$1 = _root.Symbol;\n\nvar _Symbol = Symbol$1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nvar _getRawTag = getRawTag;\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\nvar _objectToString = objectToString;\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag$1 && symToStringTag$1 in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\nvar _baseGetTag = baseGetTag;\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar isObject_1 = isObject;\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject_1(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = _baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nvar isFunction_1 = isFunction;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = _root['__core-js_shared__'];\n\nvar _coreJsData = coreJsData;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nvar _isMasked = isMasked;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nvar _toSource = toSource;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto$1 = Function.prototype,\n    objectProto$2 = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString$1 = funcProto$1.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString$1.call(hasOwnProperty$1).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject_1(value) || _isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction_1(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\nvar _baseIsNative = baseIsNative;\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nvar _getValue = getValue;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n  return _baseIsNative(value) ? value : undefined;\n}\n\nvar _getNative = getNative;\n\n/* Built-in method references that are verified to be native. */\nvar Map = _getNative(_root, 'Map');\n\nvar _Map = Map;\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = _getNative(Object, 'create');\n\nvar _nativeCreate = nativeCreate;\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\nvar _hashClear = hashClear;\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _hashDelete = hashDelete;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty$2.call(data, key) ? data[key] : undefined;\n}\n\nvar _hashGet = hashGet;\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? (data[key] !== undefined) : hasOwnProperty$3.call(data, key);\n}\n\nvar _hashHas = hashHas;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$1 = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (_nativeCreate && value === undefined) ? HASH_UNDEFINED$1 : value;\n  return this;\n}\n\nvar _hashSet = hashSet;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\n\nvar _Hash = Hash;\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash,\n    'map': new (_Map || _ListCache),\n    'string': new _Hash\n  };\n}\n\nvar _mapCacheClear = mapCacheClear;\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nvar _isKeyable = isKeyable;\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nvar _getMapData = getMapData;\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nvar _mapCacheDelete = mapCacheDelete;\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\nvar _mapCacheGet = mapCacheGet;\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\nvar _mapCacheHas = mapCacheHas;\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nvar _mapCacheSet = mapCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\n\nvar _MapCache = MapCache;\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof _ListCache) {\n    var pairs = data.__data__;\n    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new _MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nvar _stackSet = stackSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new _ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = _stackClear;\nStack.prototype['delete'] = _stackDelete;\nStack.prototype.get = _stackGet;\nStack.prototype.has = _stackHas;\nStack.prototype.set = _stackSet;\n\nvar _Stack = Stack;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED$2 = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED$2);\n  return this;\n}\n\nvar _setCacheAdd = setCacheAdd;\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nvar _setCacheHas = setCacheHas;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new _MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;\nSetCache.prototype.has = _setCacheHas;\n\nvar _SetCache = SetCache;\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar _arraySome = arraySome;\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nvar _cacheHas = cacheHas;\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new _SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!_arraySome(other, function(othValue, othIndex) {\n            if (!_cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nvar _equalArrays = equalArrays;\n\n/** Built-in value references. */\nvar Uint8Array = _root.Uint8Array;\n\nvar _Uint8Array = Uint8Array;\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nvar _mapToArray = mapToArray;\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nvar _setToArray = setToArray;\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG$1 = 1,\n    COMPARE_UNORDERED_FLAG$1 = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq_1(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = _mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1;\n      convert || (convert = _setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG$1;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nvar _equalByTag = equalByTag;\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nvar _arrayPush = arrayPush;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nvar isArray_1 = isArray;\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray_1(object) ? result : _arrayPush(result, symbolsFunc(object));\n}\n\nvar _baseGetAllKeys = baseGetAllKeys;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nvar _arrayFilter = arrayFilter;\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nvar stubArray_1 = stubArray;\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$5.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray_1 : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return _arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nvar _getSymbols = getSymbols;\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nvar _baseTimes = baseTimes;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nvar isObjectLike_1 = isObjectLike;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike_1(value) && _baseGetTag(value) == argsTag;\n}\n\nvar _baseIsArguments = baseIsArguments;\n\n/** Used for built-in method references. */\nvar objectProto$6 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$4 = objectProto$6.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable$1 = objectProto$6.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {\n  return isObjectLike_1(value) && hasOwnProperty$4.call(value, 'callee') &&\n    !propertyIsEnumerable$1.call(value, 'callee');\n};\n\nvar isArguments_1 = isArguments;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nvar stubFalse_1 = stubFalse;\n\nvar isBuffer_1 = createCommonjsModule(function (module, exports) {\n/** Detect free variable `exports`. */\nvar freeExports =  exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse_1;\n\nmodule.exports = isBuffer;\n});\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nvar _isIndex = isIndex;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;\n}\n\nvar isLength_1 = isLength;\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag$1 = '[object Boolean]',\n    dateTag$1 = '[object Date]',\n    errorTag$1 = '[object Error]',\n    funcTag$1 = '[object Function]',\n    mapTag$1 = '[object Map]',\n    numberTag$1 = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag$1 = '[object RegExp]',\n    setTag$1 = '[object Set]',\n    stringTag$1 = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag$1 = '[object ArrayBuffer]',\n    dataViewTag$1 = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag$1] = typedArrayTags[boolTag$1] =\ntypedArrayTags[dataViewTag$1] = typedArrayTags[dateTag$1] =\ntypedArrayTags[errorTag$1] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag$1] = typedArrayTags[numberTag$1] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag$1] =\ntypedArrayTags[setTag$1] = typedArrayTags[stringTag$1] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike_1(value) &&\n    isLength_1(value.length) && !!typedArrayTags[_baseGetTag(value)];\n}\n\nvar _baseIsTypedArray = baseIsTypedArray;\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nvar _baseUnary = baseUnary;\n\nvar _nodeUtil = createCommonjsModule(function (module, exports) {\n/** Detect free variable `exports`. */\nvar freeExports =  exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && _freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n});\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;\n\nvar isTypedArray_1 = isTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$7 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$5 = objectProto$7.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray_1(value),\n      isArg = !isArr && isArguments_1(value),\n      isBuff = !isArr && !isArg && isBuffer_1(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray_1(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? _baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$5.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           _isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _arrayLikeKeys = arrayLikeKeys;\n\n/** Used for built-in method references. */\nvar objectProto$8 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$8;\n\n  return value === proto;\n}\n\nvar _isPrototype = isPrototype;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nvar _overArg = overArg;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = _overArg(Object.keys, Object);\n\nvar _nativeKeys = nativeKeys;\n\n/** Used for built-in method references. */\nvar objectProto$9 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$6 = objectProto$9.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!_isPrototype(object)) {\n    return _nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$6.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _baseKeys = baseKeys;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength_1(value.length) && !isFunction_1(value);\n}\n\nvar isArrayLike_1 = isArrayLike;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike_1(object) ? _arrayLikeKeys(object) : _baseKeys(object);\n}\n\nvar keys_1 = keys;\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return _baseGetAllKeys(object, keys_1, _getSymbols);\n}\n\nvar _getAllKeys = getAllKeys;\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG$2 = 1;\n\n/** Used for built-in method references. */\nvar objectProto$a = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$7 = objectProto$a.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2,\n      objProps = _getAllKeys(object),\n      objLength = objProps.length,\n      othProps = _getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty$7.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nvar _equalObjects = equalObjects;\n\n/* Built-in method references that are verified to be native. */\nvar DataView = _getNative(_root, 'DataView');\n\nvar _DataView = DataView;\n\n/* Built-in method references that are verified to be native. */\nvar Promise$1 = _getNative(_root, 'Promise');\n\nvar _Promise = Promise$1;\n\n/* Built-in method references that are verified to be native. */\nvar Set = _getNative(_root, 'Set');\n\nvar _Set = Set;\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = _getNative(_root, 'WeakMap');\n\nvar _WeakMap = WeakMap;\n\n/** `Object#toString` result references. */\nvar mapTag$2 = '[object Map]',\n    objectTag$1 = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag$2 = '[object Set]',\n    weakMapTag$1 = '[object WeakMap]';\n\nvar dataViewTag$2 = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = _toSource(_DataView),\n    mapCtorString = _toSource(_Map),\n    promiseCtorString = _toSource(_Promise),\n    setCtorString = _toSource(_Set),\n    weakMapCtorString = _toSource(_WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = _baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != dataViewTag$2) ||\n    (_Map && getTag(new _Map) != mapTag$2) ||\n    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||\n    (_Set && getTag(new _Set) != setTag$2) ||\n    (_WeakMap && getTag(new _WeakMap) != weakMapTag$1)) {\n  getTag = function(value) {\n    var result = _baseGetTag(value),\n        Ctor = result == objectTag$1 ? value.constructor : undefined,\n        ctorString = Ctor ? _toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag$2;\n        case mapCtorString: return mapTag$2;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag$2;\n        case weakMapCtorString: return weakMapTag$1;\n      }\n    }\n    return result;\n  };\n}\n\nvar _getTag = getTag;\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG$3 = 1;\n\n/** `Object#toString` result references. */\nvar argsTag$2 = '[object Arguments]',\n    arrayTag$1 = '[object Array]',\n    objectTag$2 = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto$b = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$8 = objectProto$b.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray_1(object),\n      othIsArr = isArray_1(other),\n      objTag = objIsArr ? arrayTag$1 : _getTag(object),\n      othTag = othIsArr ? arrayTag$1 : _getTag(other);\n\n  objTag = objTag == argsTag$2 ? objectTag$2 : objTag;\n  othTag = othTag == argsTag$2 ? objectTag$2 : othTag;\n\n  var objIsObj = objTag == objectTag$2,\n      othIsObj = othTag == objectTag$2,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer_1(object)) {\n    if (!isBuffer_1(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new _Stack);\n    return (objIsArr || isTypedArray_1(object))\n      ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG$3)) {\n    var objIsWrapped = objIsObj && hasOwnProperty$8.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty$8.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new _Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new _Stack);\n  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nvar _baseIsEqualDeep = baseIsEqualDeep;\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike_1(value) && !isObjectLike_1(other))) {\n    return value !== value && other !== other;\n  }\n  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nvar _baseIsEqual = baseIsEqual;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return _baseIsEqual(value, other);\n}\n\nvar isEqual_1 = isEqual;\n\nvar DEFAULT_OPTIONS = {\n  container: false,\n  delay: 0,\n  html: false,\n  placement: 'top',\n  title: '',\n  template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n  trigger: 'hover focus',\n  offset: 0\n};\nvar openTooltips = [];\n\nvar Tooltip =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new Tooltip.js instance\n   * @class Tooltip\n   * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\n   * @param {Object} options\n   * @param {String} options.placement=bottom\n   *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n   *      left(-start, -end)`\n   * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\n   * @param {Number|Object} options.delay=0\n   *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\n   *      If a number is supplied, delay is applied to both hide/show.\n   *      Object structure is: `{ show: 500, hide: 100 }`\n   * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `innerText`.\n   * @param {String|PlacementFunction} options.placement='top' - One of the allowed placements, or a function returning one of them.\n   * @param {String} [options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>']\n   *      Base HTML to used when creating the tooltip.\n   *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\n   *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\n   *      The outermost wrapper element should have the `.tooltip` class.\n   * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\n   * @param {String} [options.trigger='hover focus']\n   *      How tooltip is triggered - click, hover, focus, manual.\n   *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\n   * @param {HTMLElement} options.boundariesElement\n   *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\n   *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\n   * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\n   *      [offset docs](https://popper.js.org/popper-documentation.html)\n   * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'\n   *      [options docs](https://popper.js.org/popper-documentation.html)\n   * @return {Object} instance - The generated tooltip instance\n   */\n  function Tooltip(_reference, _options) {\n    var _this = this;\n\n    _classCallCheck(this, Tooltip);\n\n    _defineProperty(this, \"_events\", []);\n\n    _defineProperty(this, \"_setTooltipNodeEvent\", function (evt, reference, delay, options) {\n      var relatedreference = evt.relatedreference || evt.toElement || evt.relatedTarget;\n\n      var callback = function callback(evt2) {\n        var relatedreference2 = evt2.relatedreference || evt2.toElement || evt2.relatedTarget; // Remove event listener after call\n\n        _this._tooltipNode.removeEventListener(evt.type, callback); // If the new reference is not the reference element\n\n\n        if (!reference.contains(relatedreference2)) {\n          // Schedule to hide tooltip\n          _this._scheduleHide(reference, options.delay, options, evt2);\n        }\n      };\n\n      if (_this._tooltipNode.contains(relatedreference)) {\n        // listen to mouseleave on the tooltip element to be able to hide the tooltip\n        _this._tooltipNode.addEventListener(evt.type, callback);\n\n        return true;\n      }\n\n      return false;\n    });\n\n    // apply user options over default ones\n    _options = _objectSpread2({}, DEFAULT_OPTIONS, {}, _options);\n    _reference.jquery && (_reference = _reference[0]);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this); // cache reference and options\n\n    this.reference = _reference;\n    this.options = _options; // set initial state\n\n    this._isOpen = false;\n\n    this._init();\n  } //\n  // Public methods\n  //\n\n  /**\n   * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\n   * Tooltips with zero-length titles are never displayed.\n   * @method Tooltip#show\n   * @memberof Tooltip\n   */\n\n\n  _createClass(Tooltip, [{\n    key: \"show\",\n    value: function show() {\n      this._show(this.reference, this.options);\n    }\n    /**\n     * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * @method Tooltip#hide\n     * @memberof Tooltip\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._hide();\n    }\n    /**\n     * Hides and destroys an element’s tooltip.\n     * @method Tooltip#dispose\n     * @memberof Tooltip\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._dispose();\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n     * @method Tooltip#toggle\n     * @memberof Tooltip\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._isOpen) {\n        return this.hide();\n      } else {\n        return this.show();\n      }\n    }\n  }, {\n    key: \"setClasses\",\n    value: function setClasses(classes) {\n      this._classes = classes;\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {\n      this.options.title = content;\n\n      if (this._tooltipNode) {\n        this._setContent(content, this.options);\n      }\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      var classesUpdated = false;\n      var classes = options && options.classes || directive.options.defaultClass;\n\n      if (!isEqual_1(this._classes, classes)) {\n        this.setClasses(classes);\n        classesUpdated = true;\n      }\n\n      options = getOptions(options);\n      var needPopperUpdate = false;\n      var needRestart = false;\n\n      if (this.options.offset !== options.offset || this.options.placement !== options.placement) {\n        needPopperUpdate = true;\n      }\n\n      if (this.options.template !== options.template || this.options.trigger !== options.trigger || this.options.container !== options.container || classesUpdated) {\n        needRestart = true;\n      }\n\n      for (var key in options) {\n        this.options[key] = options[key];\n      }\n\n      if (this._tooltipNode) {\n        if (needRestart) {\n          var isOpen = this._isOpen;\n          this.dispose();\n\n          this._init();\n\n          if (isOpen) {\n            this.show();\n          }\n        } else if (needPopperUpdate) {\n          this.popperInstance.update();\n        }\n      }\n    } //\n    // Private methods\n    //\n\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      // get events list\n      var events = typeof this.options.trigger === 'string' ? this.options.trigger.split(' ') : [];\n      this._isDisposed = false;\n      this._enableDocumentTouch = events.indexOf('manual') === -1;\n      events = events.filter(function (trigger) {\n        return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n      }); // set event listeners\n\n      this._setEventListeners(this.reference, events, this.options); // title attribute\n\n\n      this.$_originalTitle = this.reference.getAttribute('title');\n      this.reference.removeAttribute('title');\n      this.reference.setAttribute('data-original-title', this.$_originalTitle);\n    }\n    /**\n     * Creates a new tooltip node\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} reference\n     * @param {String} template\n     * @param {String|HTMLElement|TitleFunction} title\n     * @param {Boolean} allowHtml\n     * @return {HTMLelement} tooltipNode\n     */\n\n  }, {\n    key: \"_create\",\n    value: function _create(reference, template) {\n      // create tooltip element\n      var tooltipGenerator = window.document.createElement('div');\n      tooltipGenerator.innerHTML = template.trim();\n      var tooltipNode = tooltipGenerator.childNodes[0]; // add unique ID to our tooltip (needed for accessibility reasons)\n\n      tooltipNode.id = \"tooltip_\".concat(Math.random().toString(36).substr(2, 10)); // Initially hide the tooltip\n      // The attribute will be switched in a next frame so\n      // CSS transitions can play\n\n      tooltipNode.setAttribute('aria-hidden', 'true');\n\n      if (this.options.autoHide && this.options.trigger.indexOf('hover') !== -1) {\n        tooltipNode.addEventListener('mouseenter', this.hide);\n        tooltipNode.addEventListener('click', this.hide);\n      } // return the generated tooltip node\n\n\n      return tooltipNode;\n    }\n  }, {\n    key: \"_setContent\",\n    value: function _setContent(content, options) {\n      var _this2 = this;\n\n      this.asyncContent = false;\n\n      this._applyContent(content, options).then(function () {\n        _this2.popperInstance.update();\n      });\n    }\n  }, {\n    key: \"_applyContent\",\n    value: function _applyContent(title, options) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var allowHtml = options.html;\n        var rootNode = _this3._tooltipNode;\n        if (!rootNode) return;\n        var titleNode = rootNode.querySelector(_this3.options.innerSelector);\n\n        if (title.nodeType === 1) {\n          // if title is a node, append it only if allowHtml is true\n          if (allowHtml) {\n            while (titleNode.firstChild) {\n              titleNode.removeChild(titleNode.firstChild);\n            }\n\n            titleNode.appendChild(title);\n          }\n        } else if (typeof title === 'function') {\n          // if title is a function, call it and set innerText or innerHtml depending by `allowHtml` value\n          var result = title();\n\n          if (result && typeof result.then === 'function') {\n            _this3.asyncContent = true;\n            options.loadingClass && addClasses(rootNode, options.loadingClass);\n\n            if (options.loadingContent) {\n              _this3._applyContent(options.loadingContent, options);\n            }\n\n            result.then(function (asyncResult) {\n              options.loadingClass && removeClasses(rootNode, options.loadingClass);\n              return _this3._applyContent(asyncResult, options);\n            }).then(resolve).catch(reject);\n          } else {\n            _this3._applyContent(result, options).then(resolve).catch(reject);\n          }\n\n          return;\n        } else {\n          // if it's just a simple text, set innerText or innerHtml depending by `allowHtml` value\n          allowHtml ? titleNode.innerHTML = title : titleNode.innerText = title;\n        }\n\n        resolve();\n      });\n    }\n  }, {\n    key: \"_show\",\n    value: function _show(reference, options) {\n      if (options && typeof options.container === 'string') {\n        var container = document.querySelector(options.container);\n        if (!container) return;\n      }\n\n      clearTimeout(this._disposeTimer);\n      options = Object.assign({}, options);\n      delete options.offset;\n      var updateClasses = true;\n\n      if (this._tooltipNode) {\n        addClasses(this._tooltipNode, this._classes);\n        updateClasses = false;\n      }\n\n      var result = this._ensureShown(reference, options);\n\n      if (updateClasses && this._tooltipNode) {\n        addClasses(this._tooltipNode, this._classes);\n      }\n\n      addClasses(reference, ['v-tooltip-open']);\n      return result;\n    }\n  }, {\n    key: \"_ensureShown\",\n    value: function _ensureShown(reference, options) {\n      var _this4 = this;\n\n      // don't show if it's already visible\n      if (this._isOpen) {\n        return this;\n      }\n\n      this._isOpen = true;\n      openTooltips.push(this); // if the tooltipNode already exists, just show it\n\n      if (this._tooltipNode) {\n        this._tooltipNode.style.display = '';\n\n        this._tooltipNode.setAttribute('aria-hidden', 'false');\n\n        this.popperInstance.enableEventListeners();\n        this.popperInstance.update();\n\n        if (this.asyncContent) {\n          this._setContent(options.title, options);\n        }\n\n        return this;\n      } // get title\n\n\n      var title = reference.getAttribute('title') || options.title; // don't show tooltip if no title is defined\n\n      if (!title) {\n        return this;\n      } // create tooltip node\n\n\n      var tooltipNode = this._create(reference, options.template);\n\n      this._tooltipNode = tooltipNode; // Add `aria-describedby` to our reference element for accessibility reasons\n\n      reference.setAttribute('aria-describedby', tooltipNode.id); // append tooltip to container\n\n      var container = this._findContainer(options.container, reference);\n\n      this._append(tooltipNode, container);\n\n      var popperOptions = _objectSpread2({}, options.popperOptions, {\n        placement: options.placement\n      });\n\n      popperOptions.modifiers = _objectSpread2({}, popperOptions.modifiers, {\n        arrow: {\n          element: this.options.arrowSelector\n        }\n      });\n\n      if (options.boundariesElement) {\n        popperOptions.modifiers.preventOverflow = {\n          boundariesElement: options.boundariesElement\n        };\n      }\n\n      this.popperInstance = new Popper(reference, tooltipNode, popperOptions);\n\n      this._setContent(title, options); // Fix position\n\n\n      requestAnimationFrame(function () {\n        if (!_this4._isDisposed && _this4.popperInstance) {\n          _this4.popperInstance.update(); // Show the tooltip\n\n\n          requestAnimationFrame(function () {\n            if (!_this4._isDisposed) {\n              _this4._isOpen && tooltipNode.setAttribute('aria-hidden', 'false');\n            } else {\n              _this4.dispose();\n            }\n          });\n        } else {\n          _this4.dispose();\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"_noLongerOpen\",\n    value: function _noLongerOpen() {\n      var index = openTooltips.indexOf(this);\n\n      if (index !== -1) {\n        openTooltips.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"_hide\",\n    value: function _hide()\n    /* reference, options */\n    {\n      var _this5 = this;\n\n      // don't hide if it's already hidden\n      if (!this._isOpen) {\n        return this;\n      }\n\n      this._isOpen = false;\n\n      this._noLongerOpen(); // hide tooltipNode\n\n\n      this._tooltipNode.style.display = 'none';\n\n      this._tooltipNode.setAttribute('aria-hidden', 'true');\n\n      this.popperInstance.disableEventListeners();\n      clearTimeout(this._disposeTimer);\n      var disposeTime = directive.options.disposeTimeout;\n\n      if (disposeTime !== null) {\n        this._disposeTimer = setTimeout(function () {\n          if (_this5._tooltipNode) {\n            _this5._tooltipNode.removeEventListener('mouseenter', _this5.hide);\n\n            _this5._tooltipNode.removeEventListener('click', _this5.hide); // Don't remove popper instance, just the HTML element\n\n\n            _this5._removeTooltipNode();\n          }\n        }, disposeTime);\n      }\n\n      removeClasses(this.reference, ['v-tooltip-open']);\n      return this;\n    }\n  }, {\n    key: \"_removeTooltipNode\",\n    value: function _removeTooltipNode() {\n      if (!this._tooltipNode) return;\n      var parentNode = this._tooltipNode.parentNode;\n\n      if (parentNode) {\n        parentNode.removeChild(this._tooltipNode);\n        this.reference.removeAttribute('aria-describedby');\n      }\n\n      this._tooltipNode = null;\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      var _this6 = this;\n\n      this._isDisposed = true;\n      this.reference.removeAttribute('data-original-title');\n\n      if (this.$_originalTitle) {\n        this.reference.setAttribute('title', this.$_originalTitle);\n      } // remove event listeners first to prevent any unexpected behaviour\n\n\n      this._events.forEach(function (_ref) {\n        var func = _ref.func,\n            event = _ref.event;\n\n        _this6.reference.removeEventListener(event, func);\n      });\n\n      this._events = [];\n\n      if (this._tooltipNode) {\n        this._hide();\n\n        this._tooltipNode.removeEventListener('mouseenter', this.hide);\n\n        this._tooltipNode.removeEventListener('click', this.hide); // destroy instance\n\n\n        this.popperInstance.destroy(); // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element\n\n        if (!this.popperInstance.options.removeOnDestroy) {\n          this._removeTooltipNode();\n        }\n      } else {\n        this._noLongerOpen();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_findContainer\",\n    value: function _findContainer(container, reference) {\n      // if container is a query, get the relative element\n      if (typeof container === 'string') {\n        container = window.document.querySelector(container);\n      } else if (container === false) {\n        // if container is `false`, set it to reference parent\n        container = reference.parentNode;\n      }\n\n      return container;\n    }\n    /**\n     * Append tooltip to container\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} tooltip\n     * @param {HTMLElement|String|false} container\n     */\n\n  }, {\n    key: \"_append\",\n    value: function _append(tooltipNode, container) {\n      container.appendChild(tooltipNode);\n    }\n  }, {\n    key: \"_setEventListeners\",\n    value: function _setEventListeners(reference, events, options) {\n      var _this7 = this;\n\n      var directEvents = [];\n      var oppositeEvents = [];\n      events.forEach(function (event) {\n        switch (event) {\n          case 'hover':\n            directEvents.push('mouseenter');\n            oppositeEvents.push('mouseleave');\n            if (_this7.options.hideOnTargetClick) oppositeEvents.push('click');\n            break;\n\n          case 'focus':\n            directEvents.push('focus');\n            oppositeEvents.push('blur');\n            if (_this7.options.hideOnTargetClick) oppositeEvents.push('click');\n            break;\n\n          case 'click':\n            directEvents.push('click');\n            oppositeEvents.push('click');\n            break;\n        }\n      }); // schedule show tooltip\n\n      directEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (_this7._isOpen === true) {\n            return;\n          }\n\n          evt.usedByTooltip = true;\n\n          _this7._scheduleShow(reference, options.delay, options, evt);\n        };\n\n        _this7._events.push({\n          event: event,\n          func: func\n        });\n\n        reference.addEventListener(event, func);\n      }); // schedule hide tooltip\n\n      oppositeEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (evt.usedByTooltip === true) {\n            return;\n          }\n\n          _this7._scheduleHide(reference, options.delay, options, evt);\n        };\n\n        _this7._events.push({\n          event: event,\n          func: func\n        });\n\n        reference.addEventListener(event, func);\n      });\n    }\n  }, {\n    key: \"_onDocumentTouch\",\n    value: function _onDocumentTouch(event) {\n      if (this._enableDocumentTouch) {\n        this._scheduleHide(this.reference, this.options.delay, this.options, event);\n      }\n    }\n  }, {\n    key: \"_scheduleShow\",\n    value: function _scheduleShow(reference, delay, options\n    /*, evt */\n    ) {\n      var _this8 = this;\n\n      // defaults to 0\n      var computedDelay = delay && delay.show || delay || 0;\n      clearTimeout(this._scheduleTimer);\n      this._scheduleTimer = window.setTimeout(function () {\n        return _this8._show(reference, options);\n      }, computedDelay);\n    }\n  }, {\n    key: \"_scheduleHide\",\n    value: function _scheduleHide(reference, delay, options, evt) {\n      var _this9 = this;\n\n      // defaults to 0\n      var computedDelay = delay && delay.hide || delay || 0;\n      clearTimeout(this._scheduleTimer);\n      this._scheduleTimer = window.setTimeout(function () {\n        if (_this9._isOpen === false) {\n          return;\n        }\n\n        if (!_this9._tooltipNode.ownerDocument.body.contains(_this9._tooltipNode)) {\n          return;\n        } // if we are hiding because of a mouseleave, we must check that the new\n        // reference isn't the tooltip, because in this case we don't want to hide it\n\n\n        if (evt.type === 'mouseleave') {\n          var isSet = _this9._setTooltipNodeEvent(evt, reference, delay, options); // if we set the new event, don't hide the tooltip yet\n          // the new event will take care to hide it if necessary\n\n\n          if (isSet) {\n            return;\n          }\n        }\n\n        _this9._hide(reference, options);\n      }, computedDelay);\n    }\n  }]);\n\n  return Tooltip;\n}(); // Hide tooltips on touch devices\n\nif (typeof document !== 'undefined') {\n  document.addEventListener('touchstart', function (event) {\n    for (var i = 0; i < openTooltips.length; i++) {\n      openTooltips[i]._onDocumentTouch(event);\n    }\n  }, supportsPassive ? {\n    passive: true,\n    capture: true\n  } : true);\n}\n/**\n * Placement function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback PlacementFunction\n * @param {HTMLElement} tooltip - tooltip DOM node.\n * @param {HTMLElement} reference - reference DOM node.\n * @return {String} placement - One of the allowed placement options.\n */\n\n/**\n * Title function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback TitleFunction\n * @return {String} placement - The desired title.\n */\n\nvar state = {\n  enabled: true\n};\nvar positions = ['top', 'top-start', 'top-end', 'right', 'right-start', 'right-end', 'bottom', 'bottom-start', 'bottom-end', 'left', 'left-start', 'left-end'];\nvar defaultOptions = {\n  // Default tooltip placement relative to target element\n  defaultPlacement: 'top',\n  // Default CSS classes applied to the tooltip element\n  defaultClass: 'vue-tooltip-theme',\n  // Default CSS classes applied to the target element of the tooltip\n  defaultTargetClass: 'has-tooltip',\n  // Is the content HTML by default?\n  defaultHtml: true,\n  // Default HTML template of the tooltip element\n  // It must include `tooltip-arrow` & `tooltip-inner` CSS classes (can be configured, see below)\n  // Change if the classes conflict with other libraries (for example bootstrap)\n  defaultTemplate: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n  // Selector used to get the arrow element in the tooltip template\n  defaultArrowSelector: '.tooltip-arrow, .tooltip__arrow',\n  // Selector used to get the inner content element in the tooltip template\n  defaultInnerSelector: '.tooltip-inner, .tooltip__inner',\n  // Delay (ms)\n  defaultDelay: 0,\n  // Default events that trigger the tooltip\n  defaultTrigger: 'hover focus',\n  // Default position offset (px)\n  defaultOffset: 0,\n  // Default container where the tooltip will be appended\n  defaultContainer: 'body',\n  defaultBoundariesElement: undefined,\n  defaultPopperOptions: {},\n  // Class added when content is loading\n  defaultLoadingClass: 'tooltip-loading',\n  // Displayed when tooltip content is loading\n  defaultLoadingContent: '...',\n  // Hide on mouseover tooltip\n  autoHide: true,\n  // Close tooltip on click on tooltip target?\n  defaultHideOnTargetClick: true,\n  // Auto destroy tooltip DOM nodes (ms)\n  disposeTimeout: 5000,\n  // Options for popover\n  popover: {\n    defaultPlacement: 'bottom',\n    // Use the `popoverClass` prop for theming\n    defaultClass: 'vue-popover-theme',\n    // Base class (change if conflicts with other libraries)\n    defaultBaseClass: 'tooltip popover',\n    // Wrapper class (contains arrow and inner)\n    defaultWrapperClass: 'wrapper',\n    // Inner content class\n    defaultInnerClass: 'tooltip-inner popover-inner',\n    // Arrow class\n    defaultArrowClass: 'tooltip-arrow popover-arrow',\n    // Class added when popover is open\n    defaultOpenClass: 'open',\n    defaultDelay: 0,\n    defaultTrigger: 'click',\n    defaultOffset: 0,\n    defaultContainer: 'body',\n    defaultBoundariesElement: undefined,\n    defaultPopperOptions: {},\n    // Hides if clicked outside of popover\n    defaultAutoHide: true,\n    // Update popper on content resize\n    defaultHandleResize: true\n  }\n};\nfunction getOptions(options) {\n  var result = {\n    placement: typeof options.placement !== 'undefined' ? options.placement : directive.options.defaultPlacement,\n    delay: typeof options.delay !== 'undefined' ? options.delay : directive.options.defaultDelay,\n    html: typeof options.html !== 'undefined' ? options.html : directive.options.defaultHtml,\n    template: typeof options.template !== 'undefined' ? options.template : directive.options.defaultTemplate,\n    arrowSelector: typeof options.arrowSelector !== 'undefined' ? options.arrowSelector : directive.options.defaultArrowSelector,\n    innerSelector: typeof options.innerSelector !== 'undefined' ? options.innerSelector : directive.options.defaultInnerSelector,\n    trigger: typeof options.trigger !== 'undefined' ? options.trigger : directive.options.defaultTrigger,\n    offset: typeof options.offset !== 'undefined' ? options.offset : directive.options.defaultOffset,\n    container: typeof options.container !== 'undefined' ? options.container : directive.options.defaultContainer,\n    boundariesElement: typeof options.boundariesElement !== 'undefined' ? options.boundariesElement : directive.options.defaultBoundariesElement,\n    autoHide: typeof options.autoHide !== 'undefined' ? options.autoHide : directive.options.autoHide,\n    hideOnTargetClick: typeof options.hideOnTargetClick !== 'undefined' ? options.hideOnTargetClick : directive.options.defaultHideOnTargetClick,\n    loadingClass: typeof options.loadingClass !== 'undefined' ? options.loadingClass : directive.options.defaultLoadingClass,\n    loadingContent: typeof options.loadingContent !== 'undefined' ? options.loadingContent : directive.options.defaultLoadingContent,\n    popperOptions: _objectSpread2({}, typeof options.popperOptions !== 'undefined' ? options.popperOptions : directive.options.defaultPopperOptions)\n  };\n\n  if (result.offset) {\n    var typeofOffset = _typeof(result.offset);\n\n    var offset = result.offset; // One value -> switch\n\n    if (typeofOffset === 'number' || typeofOffset === 'string' && offset.indexOf(',') === -1) {\n      offset = \"0, \".concat(offset);\n    }\n\n    if (!result.popperOptions.modifiers) {\n      result.popperOptions.modifiers = {};\n    }\n\n    result.popperOptions.modifiers.offset = {\n      offset: offset\n    };\n  }\n\n  if (result.trigger && result.trigger.indexOf('click') !== -1) {\n    result.hideOnTargetClick = false;\n  }\n\n  return result;\n}\nfunction getPlacement(value, modifiers) {\n  var placement = value.placement;\n\n  for (var i = 0; i < positions.length; i++) {\n    var pos = positions[i];\n\n    if (modifiers[pos]) {\n      placement = pos;\n    }\n  }\n\n  return placement;\n}\nfunction getContent(value) {\n  var type = _typeof(value);\n\n  if (type === 'string') {\n    return value;\n  } else if (value && type === 'object') {\n    return value.content;\n  } else {\n    return false;\n  }\n}\nfunction createTooltip(el, value) {\n  var modifiers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = getContent(value);\n  var classes = typeof value.classes !== 'undefined' ? value.classes : directive.options.defaultClass;\n\n  var opts = _objectSpread2({\n    title: content\n  }, getOptions(_objectSpread2({}, value, {\n    placement: getPlacement(value, modifiers)\n  })));\n\n  var tooltip = el._tooltip = new Tooltip(el, opts);\n  tooltip.setClasses(classes);\n  tooltip._vueEl = el; // Class on target\n\n  var targetClasses = typeof value.targetClasses !== 'undefined' ? value.targetClasses : directive.options.defaultTargetClass;\n  el._tooltipTargetClasses = targetClasses;\n  addClasses(el, targetClasses);\n  return tooltip;\n}\nfunction destroyTooltip(el) {\n  if (el._tooltip) {\n    el._tooltip.dispose();\n\n    delete el._tooltip;\n    delete el._tooltipOldShow;\n  }\n\n  if (el._tooltipTargetClasses) {\n    removeClasses(el, el._tooltipTargetClasses);\n    delete el._tooltipTargetClasses;\n  }\n}\nfunction bind(el, _ref) {\n  var value = _ref.value,\n      oldValue = _ref.oldValue,\n      modifiers = _ref.modifiers;\n  var content = getContent(value);\n\n  if (!content || !state.enabled) {\n    destroyTooltip(el);\n  } else {\n    var tooltip;\n\n    if (el._tooltip) {\n      tooltip = el._tooltip; // Content\n\n      tooltip.setContent(content); // Options\n\n      tooltip.setOptions(_objectSpread2({}, value, {\n        placement: getPlacement(value, modifiers)\n      }));\n    } else {\n      tooltip = createTooltip(el, value, modifiers);\n    } // Manual show\n\n\n    if (typeof value.show !== 'undefined' && value.show !== el._tooltipOldShow) {\n      el._tooltipOldShow = value.show;\n      value.show ? tooltip.show() : tooltip.hide();\n    }\n  }\n}\nvar directive = {\n  options: defaultOptions,\n  bind: bind,\n  update: bind,\n  unbind: function unbind(el) {\n    destroyTooltip(el);\n  }\n};\n\nfunction addListeners(el) {\n  el.addEventListener('click', onClick);\n  el.addEventListener('touchstart', onTouchStart, supportsPassive ? {\n    passive: true\n  } : false);\n}\n\nfunction removeListeners(el) {\n  el.removeEventListener('click', onClick);\n  el.removeEventListener('touchstart', onTouchStart);\n  el.removeEventListener('touchend', onTouchEnd);\n  el.removeEventListener('touchcancel', onTouchCancel);\n}\n\nfunction onClick(event) {\n  var el = event.currentTarget;\n  event.closePopover = !el.$_vclosepopover_touch;\n  event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;\n}\n\nfunction onTouchStart(event) {\n  if (event.changedTouches.length === 1) {\n    var el = event.currentTarget;\n    el.$_vclosepopover_touch = true;\n    var touch = event.changedTouches[0];\n    el.$_vclosepopover_touchPoint = touch;\n    el.addEventListener('touchend', onTouchEnd);\n    el.addEventListener('touchcancel', onTouchCancel);\n  }\n}\n\nfunction onTouchEnd(event) {\n  var el = event.currentTarget;\n  el.$_vclosepopover_touch = false;\n\n  if (event.changedTouches.length === 1) {\n    var touch = event.changedTouches[0];\n    var firstTouch = el.$_vclosepopover_touchPoint;\n    event.closePopover = Math.abs(touch.screenY - firstTouch.screenY) < 20 && Math.abs(touch.screenX - firstTouch.screenX) < 20;\n    event.closeAllPopover = el.$_closePopoverModifiers && !!el.$_closePopoverModifiers.all;\n  }\n}\n\nfunction onTouchCancel(event) {\n  var el = event.currentTarget;\n  el.$_vclosepopover_touch = false;\n}\n\nvar vclosepopover = {\n  bind: function bind(el, _ref) {\n    var value = _ref.value,\n        modifiers = _ref.modifiers;\n    el.$_closePopoverModifiers = modifiers;\n\n    if (typeof value === 'undefined' || value) {\n      addListeners(el);\n    }\n  },\n  update: function update(el, _ref2) {\n    var value = _ref2.value,\n        oldValue = _ref2.oldValue,\n        modifiers = _ref2.modifiers;\n    el.$_closePopoverModifiers = modifiers;\n\n    if (value !== oldValue) {\n      if (typeof value === 'undefined' || value) {\n        addListeners(el);\n      } else {\n        removeListeners(el);\n      }\n    }\n  },\n  unbind: function unbind(el) {\n    removeListeners(el);\n  }\n};\n\nfunction getDefault(key) {\n  var value = directive.options.popover[key];\n\n  if (typeof value === 'undefined') {\n    return directive.options[key];\n  }\n\n  return value;\n}\n\nvar isIOS = false;\n\nif (typeof window !== 'undefined' && typeof navigator !== 'undefined') {\n  isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n\nvar openPopovers = [];\n\nvar Element = function Element() {};\n\nif (typeof window !== 'undefined') {\n  Element = window.Element;\n}\n\nvar script = {\n  name: 'VPopover',\n  components: {\n    ResizeObserver: ResizeObserver\n  },\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    placement: {\n      type: String,\n      default: function _default() {\n        return getDefault('defaultPlacement');\n      }\n    },\n    delay: {\n      type: [String, Number, Object],\n      default: function _default() {\n        return getDefault('defaultDelay');\n      }\n    },\n    offset: {\n      type: [String, Number],\n      default: function _default() {\n        return getDefault('defaultOffset');\n      }\n    },\n    trigger: {\n      type: String,\n      default: function _default() {\n        return getDefault('defaultTrigger');\n      }\n    },\n    container: {\n      type: [String, Object, Element, Boolean],\n      default: function _default() {\n        return getDefault('defaultContainer');\n      }\n    },\n    boundariesElement: {\n      type: [String, Element],\n      default: function _default() {\n        return getDefault('defaultBoundariesElement');\n      }\n    },\n    popperOptions: {\n      type: Object,\n      default: function _default() {\n        return getDefault('defaultPopperOptions');\n      }\n    },\n    popoverClass: {\n      type: [String, Array],\n      default: function _default() {\n        return getDefault('defaultClass');\n      }\n    },\n    popoverBaseClass: {\n      type: [String, Array],\n      default: function _default() {\n        return directive.options.popover.defaultBaseClass;\n      }\n    },\n    popoverInnerClass: {\n      type: [String, Array],\n      default: function _default() {\n        return directive.options.popover.defaultInnerClass;\n      }\n    },\n    popoverWrapperClass: {\n      type: [String, Array],\n      default: function _default() {\n        return directive.options.popover.defaultWrapperClass;\n      }\n    },\n    popoverArrowClass: {\n      type: [String, Array],\n      default: function _default() {\n        return directive.options.popover.defaultArrowClass;\n      }\n    },\n    autoHide: {\n      type: Boolean,\n      default: function _default() {\n        return directive.options.popover.defaultAutoHide;\n      }\n    },\n    handleResize: {\n      type: Boolean,\n      default: function _default() {\n        return directive.options.popover.defaultHandleResize;\n      }\n    },\n    openGroup: {\n      type: String,\n      default: null\n    },\n    openClass: {\n      type: [String, Array],\n      default: function _default() {\n        return directive.options.popover.defaultOpenClass;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false,\n      id: Math.random().toString(36).substr(2, 10)\n    };\n  },\n  computed: {\n    cssClass: function cssClass() {\n      return _defineProperty({}, this.openClass, this.isOpen);\n    },\n    popoverId: function popoverId() {\n      return \"popover_\".concat(this.id);\n    }\n  },\n  watch: {\n    open: function open(val) {\n      if (val) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    },\n    disabled: function disabled(val, oldVal) {\n      if (val !== oldVal) {\n        if (val) {\n          this.hide();\n        } else if (this.open) {\n          this.show();\n        }\n      }\n    },\n    container: function container(val) {\n      if (this.isOpen && this.popperInstance) {\n        var popoverNode = this.$refs.popover;\n        var reference = this.$refs.trigger;\n        var container = this.$_findContainer(this.container, reference);\n\n        if (!container) {\n          console.warn('No container for popover', this);\n          return;\n        }\n\n        container.appendChild(popoverNode);\n        this.popperInstance.scheduleUpdate();\n      }\n    },\n    trigger: function trigger(val) {\n      this.$_removeEventListeners();\n      this.$_addEventListeners();\n    },\n    placement: function placement(val) {\n      var _this = this;\n\n      this.$_updatePopper(function () {\n        _this.popperInstance.options.placement = val;\n      });\n    },\n    offset: '$_restartPopper',\n    boundariesElement: '$_restartPopper',\n    popperOptions: {\n      handler: '$_restartPopper',\n      deep: true\n    }\n  },\n  created: function created() {\n    this.$_isDisposed = false;\n    this.$_mounted = false;\n    this.$_events = [];\n    this.$_preventOpen = false;\n  },\n  mounted: function mounted() {\n    var popoverNode = this.$refs.popover;\n    popoverNode.parentNode && popoverNode.parentNode.removeChild(popoverNode);\n    this.$_init();\n\n    if (this.open) {\n      this.show();\n    }\n  },\n  deactivated: function deactivated() {\n    this.hide();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.dispose();\n  },\n  methods: {\n    show: function show() {\n      var _this2 = this;\n\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          event = _ref2.event,\n          _ref2$skipDelay = _ref2.skipDelay,\n          _ref2$force = _ref2.force,\n          force = _ref2$force === void 0 ? false : _ref2$force;\n\n      if (force || !this.disabled) {\n        this.$_scheduleShow(event);\n        this.$emit('show');\n      }\n\n      this.$emit('update:open', true);\n      this.$_beingShowed = true;\n      requestAnimationFrame(function () {\n        _this2.$_beingShowed = false;\n      });\n    },\n    hide: function hide() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          event = _ref3.event,\n          _ref3$skipDelay = _ref3.skipDelay;\n\n      this.$_scheduleHide(event);\n      this.$emit('hide');\n      this.$emit('update:open', false);\n    },\n    dispose: function dispose() {\n      this.$_isDisposed = true;\n      this.$_removeEventListeners();\n      this.hide({\n        skipDelay: true\n      });\n\n      if (this.popperInstance) {\n        this.popperInstance.destroy(); // destroy tooltipNode if removeOnDestroy is not set, as popperInstance.destroy() already removes the element\n\n        if (!this.popperInstance.options.removeOnDestroy) {\n          var popoverNode = this.$refs.popover;\n          popoverNode.parentNode && popoverNode.parentNode.removeChild(popoverNode);\n        }\n      }\n\n      this.$_mounted = false;\n      this.popperInstance = null;\n      this.isOpen = false;\n      this.$emit('dispose');\n    },\n    $_init: function $_init() {\n      if (this.trigger.indexOf('manual') === -1) {\n        this.$_addEventListeners();\n      }\n    },\n    $_show: function $_show() {\n      var _this3 = this;\n\n      var reference = this.$refs.trigger;\n      var popoverNode = this.$refs.popover;\n      clearTimeout(this.$_disposeTimer); // Already open\n\n      if (this.isOpen) {\n        return;\n      } // Popper is already initialized\n\n\n      if (this.popperInstance) {\n        this.isOpen = true;\n        this.popperInstance.enableEventListeners();\n        this.popperInstance.scheduleUpdate();\n      }\n\n      if (!this.$_mounted) {\n        var container = this.$_findContainer(this.container, reference);\n\n        if (!container) {\n          console.warn('No container for popover', this);\n          return;\n        }\n\n        container.appendChild(popoverNode);\n        this.$_mounted = true;\n      }\n\n      if (!this.popperInstance) {\n        var popperOptions = _objectSpread2({}, this.popperOptions, {\n          placement: this.placement\n        });\n\n        popperOptions.modifiers = _objectSpread2({}, popperOptions.modifiers, {\n          arrow: _objectSpread2({}, popperOptions.modifiers && popperOptions.modifiers.arrow, {\n            element: this.$refs.arrow\n          })\n        });\n\n        if (this.offset) {\n          var offset = this.$_getOffset();\n          popperOptions.modifiers.offset = _objectSpread2({}, popperOptions.modifiers && popperOptions.modifiers.offset, {\n            offset: offset\n          });\n        }\n\n        if (this.boundariesElement) {\n          popperOptions.modifiers.preventOverflow = _objectSpread2({}, popperOptions.modifiers && popperOptions.modifiers.preventOverflow, {\n            boundariesElement: this.boundariesElement\n          });\n        }\n\n        this.popperInstance = new Popper(reference, popoverNode, popperOptions); // Fix position\n\n        requestAnimationFrame(function () {\n          if (_this3.hidden) {\n            _this3.hidden = false;\n\n            _this3.$_hide();\n\n            return;\n          }\n\n          if (!_this3.$_isDisposed && _this3.popperInstance) {\n            _this3.popperInstance.scheduleUpdate(); // Show the tooltip\n\n\n            requestAnimationFrame(function () {\n              if (_this3.hidden) {\n                _this3.hidden = false;\n\n                _this3.$_hide();\n\n                return;\n              }\n\n              if (!_this3.$_isDisposed) {\n                _this3.isOpen = true;\n              } else {\n                _this3.dispose();\n              }\n            });\n          } else {\n            _this3.dispose();\n          }\n        });\n      }\n\n      var openGroup = this.openGroup;\n\n      if (openGroup) {\n        var popover;\n\n        for (var i = 0; i < openPopovers.length; i++) {\n          popover = openPopovers[i];\n\n          if (popover.openGroup !== openGroup) {\n            popover.hide();\n            popover.$emit('close-group');\n          }\n        }\n      }\n\n      openPopovers.push(this);\n      this.$emit('apply-show');\n    },\n    $_hide: function $_hide() {\n      var _this4 = this;\n\n      // Already hidden\n      if (!this.isOpen) {\n        return;\n      }\n\n      var index = openPopovers.indexOf(this);\n\n      if (index !== -1) {\n        openPopovers.splice(index, 1);\n      }\n\n      this.isOpen = false;\n\n      if (this.popperInstance) {\n        this.popperInstance.disableEventListeners();\n      }\n\n      clearTimeout(this.$_disposeTimer);\n      var disposeTime = directive.options.popover.disposeTimeout || directive.options.disposeTimeout;\n\n      if (disposeTime !== null) {\n        this.$_disposeTimer = setTimeout(function () {\n          var popoverNode = _this4.$refs.popover;\n\n          if (popoverNode) {\n            // Don't remove popper instance, just the HTML element\n            popoverNode.parentNode && popoverNode.parentNode.removeChild(popoverNode);\n            _this4.$_mounted = false;\n          }\n        }, disposeTime);\n      }\n\n      this.$emit('apply-hide');\n    },\n    $_findContainer: function $_findContainer(container, reference) {\n      // if container is a query, get the relative element\n      if (typeof container === 'string') {\n        container = window.document.querySelector(container);\n      } else if (container === false) {\n        // if container is `false`, set it to reference parent\n        container = reference.parentNode;\n      }\n\n      return container;\n    },\n    $_getOffset: function $_getOffset() {\n      var typeofOffset = _typeof(this.offset);\n\n      var offset = this.offset; // One value -> switch\n\n      if (typeofOffset === 'number' || typeofOffset === 'string' && offset.indexOf(',') === -1) {\n        offset = \"0, \".concat(offset);\n      }\n\n      return offset;\n    },\n    $_addEventListeners: function $_addEventListeners() {\n      var _this5 = this;\n\n      var reference = this.$refs.trigger;\n      var directEvents = [];\n      var oppositeEvents = [];\n      var events = typeof this.trigger === 'string' ? this.trigger.split(' ').filter(function (trigger) {\n        return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n      }) : [];\n      events.forEach(function (event) {\n        switch (event) {\n          case 'hover':\n            directEvents.push('mouseenter');\n            oppositeEvents.push('mouseleave');\n            break;\n\n          case 'focus':\n            directEvents.push('focus');\n            oppositeEvents.push('blur');\n            break;\n\n          case 'click':\n            directEvents.push('click');\n            oppositeEvents.push('click');\n            break;\n        }\n      }); // schedule show tooltip\n\n      directEvents.forEach(function (event) {\n        var func = function func(event) {\n          if (_this5.isOpen) {\n            return;\n          }\n\n          event.usedByTooltip = true;\n          !_this5.$_preventOpen && _this5.show({\n            event: event\n          });\n          _this5.hidden = false;\n        };\n\n        _this5.$_events.push({\n          event: event,\n          func: func\n        });\n\n        reference.addEventListener(event, func);\n      }); // schedule hide tooltip\n\n      oppositeEvents.forEach(function (event) {\n        var func = function func(event) {\n          if (event.usedByTooltip) {\n            return;\n          }\n\n          _this5.hide({\n            event: event\n          });\n\n          _this5.hidden = true;\n        };\n\n        _this5.$_events.push({\n          event: event,\n          func: func\n        });\n\n        reference.addEventListener(event, func);\n      });\n    },\n    $_scheduleShow: function $_scheduleShow() {\n      var skipDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      clearTimeout(this.$_scheduleTimer);\n\n      if (skipDelay) {\n        this.$_show();\n      } else {\n        // defaults to 0\n        var computedDelay = parseInt(this.delay && this.delay.show || this.delay || 0);\n        this.$_scheduleTimer = setTimeout(this.$_show.bind(this), computedDelay);\n      }\n    },\n    $_scheduleHide: function $_scheduleHide() {\n      var _this6 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var skipDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      clearTimeout(this.$_scheduleTimer);\n\n      if (skipDelay) {\n        this.$_hide();\n      } else {\n        // defaults to 0\n        var computedDelay = parseInt(this.delay && this.delay.hide || this.delay || 0);\n        this.$_scheduleTimer = setTimeout(function () {\n          if (!_this6.isOpen) {\n            return;\n          } // if we are hiding because of a mouseleave, we must check that the new\n          // reference isn't the tooltip, because in this case we don't want to hide it\n\n\n          if (event && event.type === 'mouseleave') {\n            var isSet = _this6.$_setTooltipNodeEvent(event); // if we set the new event, don't hide the tooltip yet\n            // the new event will take care to hide it if necessary\n\n\n            if (isSet) {\n              return;\n            }\n          }\n\n          _this6.$_hide();\n        }, computedDelay);\n      }\n    },\n    $_setTooltipNodeEvent: function $_setTooltipNodeEvent(event) {\n      var _this7 = this;\n\n      var reference = this.$refs.trigger;\n      var popoverNode = this.$refs.popover;\n      var relatedreference = event.relatedreference || event.toElement || event.relatedTarget;\n\n      var callback = function callback(event2) {\n        var relatedreference2 = event2.relatedreference || event2.toElement || event2.relatedTarget; // Remove event listener after call\n\n        popoverNode.removeEventListener(event.type, callback); // If the new reference is not the reference element\n\n        if (!reference.contains(relatedreference2)) {\n          // Schedule to hide tooltip\n          _this7.hide({\n            event: event2\n          });\n        }\n      };\n\n      if (popoverNode.contains(relatedreference)) {\n        // listen to mouseleave on the tooltip element to be able to hide the tooltip\n        popoverNode.addEventListener(event.type, callback);\n        return true;\n      }\n\n      return false;\n    },\n    $_removeEventListeners: function $_removeEventListeners() {\n      var reference = this.$refs.trigger;\n      this.$_events.forEach(function (_ref4) {\n        var func = _ref4.func,\n            event = _ref4.event;\n        reference.removeEventListener(event, func);\n      });\n      this.$_events = [];\n    },\n    $_updatePopper: function $_updatePopper(cb) {\n      if (this.popperInstance) {\n        cb();\n        if (this.isOpen) this.popperInstance.scheduleUpdate();\n      }\n    },\n    $_restartPopper: function $_restartPopper() {\n      if (this.popperInstance) {\n        var isOpen = this.isOpen;\n        this.dispose();\n        this.$_isDisposed = false;\n        this.$_init();\n\n        if (isOpen) {\n          this.show({\n            skipDelay: true,\n            force: true\n          });\n        }\n      }\n    },\n    $_handleGlobalClose: function $_handleGlobalClose(event) {\n      var _this8 = this;\n\n      var touch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (this.$_beingShowed) return;\n      this.hide({\n        event: event\n      });\n\n      if (event.closePopover) {\n        this.$emit('close-directive');\n      } else {\n        this.$emit('auto-hide');\n      }\n\n      if (touch) {\n        this.$_preventOpen = true;\n        setTimeout(function () {\n          _this8.$_preventOpen = false;\n        }, 300);\n      }\n    },\n    $_handleResize: function $_handleResize() {\n      if (this.isOpen && this.popperInstance) {\n        this.popperInstance.scheduleUpdate();\n        this.$emit('resize');\n      }\n    }\n  }\n};\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (isIOS) {\n    document.addEventListener('touchend', handleGlobalTouchend, supportsPassive ? {\n      passive: true,\n      capture: true\n    } : true);\n  } else {\n    window.addEventListener('click', handleGlobalClick, true);\n  }\n}\n\nfunction handleGlobalClick(event) {\n  handleGlobalClose(event);\n}\n\nfunction handleGlobalTouchend(event) {\n  handleGlobalClose(event, true);\n}\n\nfunction handleGlobalClose(event) {\n  var touch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var _loop = function _loop(i) {\n    var popover = openPopovers[i];\n\n    if (popover.$refs.popover) {\n      var contains = popover.$refs.popover.contains(event.target);\n      requestAnimationFrame(function () {\n        if (event.closeAllPopover || event.closePopover && contains || popover.autoHide && !contains) {\n          popover.$_handleGlobalClose(event, touch);\n        }\n      });\n    }\n  };\n\n  // Delay so that close directive has time to set values\n  for (var i = 0; i < openPopovers.length; i++) {\n    _loop(i);\n  }\n}\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\n/* script */\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c(\"div\", {\n    staticClass: \"v-popover\",\n    class: _vm.cssClass\n  }, [_c(\"div\", {\n    ref: \"trigger\",\n    staticClass: \"trigger\",\n    staticStyle: {\n      display: \"inline-block\"\n    },\n    attrs: {\n      \"aria-describedby\": _vm.popoverId,\n      tabindex: _vm.trigger.indexOf(\"focus\") !== -1 ? 0 : undefined\n    }\n  }, [_vm._t(\"default\")], 2), _vm._v(\" \"), _c(\"div\", {\n    ref: \"popover\",\n    class: [_vm.popoverBaseClass, _vm.popoverClass, _vm.cssClass],\n    style: {\n      visibility: _vm.isOpen ? \"visible\" : \"hidden\"\n    },\n    attrs: {\n      id: _vm.popoverId,\n      \"aria-hidden\": _vm.isOpen ? \"false\" : \"true\",\n      tabindex: _vm.autoHide ? 0 : undefined\n    },\n    on: {\n      keyup: function keyup($event) {\n        if (!$event.type.indexOf(\"key\") && _vm._k($event.keyCode, \"esc\", 27, $event.key, [\"Esc\", \"Escape\"])) {\n          return null;\n        }\n\n        _vm.autoHide && _vm.hide();\n      }\n    }\n  }, [_c(\"div\", {\n    class: _vm.popoverWrapperClass\n  }, [_c(\"div\", {\n    ref: \"inner\",\n    class: _vm.popoverInnerClass,\n    staticStyle: {\n      position: \"relative\"\n    }\n  }, [_c(\"div\", [_vm._t(\"popover\")], 2), _vm._v(\" \"), _vm.handleResize ? _c(\"ResizeObserver\", {\n    on: {\n      notify: _vm.$_handleResize\n    }\n  }) : _vm._e()], 1), _vm._v(\" \"), _c(\"div\", {\n    ref: \"arrow\",\n    class: _vm.popoverArrowClass\n  })])])]);\n};\n\nvar __vue_staticRenderFns__ = [];\n__vue_render__._withStripped = true;\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\n/* style inject shadow dom */\n\nvar __vue_component__ = normalizeComponent({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);\n\nvar defineProperty = (function() {\n  try {\n    var func = _getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nvar _defineProperty$1 = defineProperty;\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && _defineProperty$1) {\n    _defineProperty$1(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nvar _baseAssignValue = baseAssignValue;\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq_1(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\nvar _assignMergeValue = assignMergeValue;\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nvar _createBaseFor = createBaseFor;\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = _createBaseFor();\n\nvar _baseFor = baseFor;\n\nvar _cloneBuffer = createCommonjsModule(function (module, exports) {\n/** Detect free variable `exports`. */\nvar freeExports =  exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n});\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));\n  return result;\n}\n\nvar _cloneArrayBuffer = cloneArrayBuffer;\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nvar _cloneTypedArray = cloneTypedArray;\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nvar _copyArray = copyArray;\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject_1(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nvar _baseCreate = baseCreate;\n\n/** Built-in value references. */\nvar getPrototype = _overArg(Object.getPrototypeOf, Object);\n\nvar _getPrototype = getPrototype;\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !_isPrototype(object))\n    ? _baseCreate(_getPrototype(object))\n    : {};\n}\n\nvar _initCloneObject = initCloneObject;\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike_1(value) && isArrayLike_1(value);\n}\n\nvar isArrayLikeObject_1 = isArrayLikeObject;\n\n/** `Object#toString` result references. */\nvar objectTag$3 = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto$2 = Function.prototype,\n    objectProto$c = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString$2 = funcProto$2.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$9 = objectProto$c.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString$2.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike_1(value) || _baseGetTag(value) != objectTag$3) {\n    return false;\n  }\n  var proto = _getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty$9.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString$2.call(Ctor) == objectCtorString;\n}\n\nvar isPlainObject_1 = isPlainObject;\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nvar _safeGet = safeGet;\n\n/** Used for built-in method references. */\nvar objectProto$d = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$a = objectProto$d.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty$a.call(object, key) && eq_1(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\nvar _assignValue = assignValue;\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      _baseAssignValue(object, key, newValue);\n    } else {\n      _assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nvar _copyObject = copyObject;\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _nativeKeysIn = nativeKeysIn;\n\n/** Used for built-in method references. */\nvar objectProto$e = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$b = objectProto$e.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject_1(object)) {\n    return _nativeKeysIn(object);\n  }\n  var isProto = _isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty$b.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nvar _baseKeysIn = baseKeysIn;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike_1(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);\n}\n\nvar keysIn_1 = keysIn;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return _copyObject(value, keysIn_1(value));\n}\n\nvar toPlainObject_1 = toPlainObject;\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = _safeGet(object, key),\n      srcValue = _safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    _assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray_1(srcValue),\n        isBuff = !isArr && isBuffer_1(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray_1(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray_1(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject_1(objValue)) {\n        newValue = _copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = _cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = _cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject_1(srcValue) || isArguments_1(srcValue)) {\n      newValue = objValue;\n      if (isArguments_1(objValue)) {\n        newValue = toPlainObject_1(objValue);\n      }\n      else if (!isObject_1(objValue) || isFunction_1(objValue)) {\n        newValue = _initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  _assignMergeValue(object, key, newValue);\n}\n\nvar _baseMergeDeep = baseMergeDeep;\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  _baseFor(source, function(srcValue, key) {\n    stack || (stack = new _Stack);\n    if (isObject_1(srcValue)) {\n      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(_safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      _assignMergeValue(object, key, newValue);\n    }\n  }, keysIn_1);\n}\n\nvar _baseMerge = baseMerge;\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nvar identity_1 = identity;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nvar _apply = apply;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return _apply(func, this, otherArgs);\n  };\n}\n\nvar _overRest = overRest;\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nvar constant_1 = constant;\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !_defineProperty$1 ? identity_1 : function(func, string) {\n  return _defineProperty$1(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant_1(string),\n    'writable': true\n  });\n};\n\nvar _baseSetToString = baseSetToString;\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nvar _shortOut = shortOut;\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = _shortOut(_baseSetToString);\n\nvar _setToString = setToString;\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return _setToString(_overRest(func, start, identity_1), func + '');\n}\n\nvar _baseRest = baseRest;\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject_1(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike_1(object) && _isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq_1(object[index], value);\n  }\n  return false;\n}\n\nvar _isIterateeCall = isIterateeCall;\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return _baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nvar _createAssigner = createAssigner;\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = _createAssigner(function(object, source, srcIndex) {\n  _baseMerge(object, source, srcIndex);\n});\n\nvar merge_1 = merge;\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".resize-observer[data-v-b329ee4c]{position:absolute;top:0;left:0;z-index:-1;width:100%;height:100%;border:none;background-color:transparent;pointer-events:none;display:block;overflow:hidden;opacity:0}.resize-observer[data-v-b329ee4c] object{display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1}\";\nstyleInject(css);\n\nfunction install(Vue) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (install.installed) return;\n  install.installed = true;\n  var finalOptions = {};\n  merge_1(finalOptions, defaultOptions, options);\n  plugin.options = finalOptions;\n  directive.options = finalOptions;\n  Vue.directive('tooltip', directive);\n  Vue.directive('close-popover', vclosepopover);\n  Vue.component('v-popover', __vue_component__);\n}\nvar VTooltip = directive;\nvar VClosePopover = vclosepopover;\nvar VPopover = __vue_component__;\nvar plugin = {\n  install: install,\n\n  get enabled() {\n    return state.enabled;\n  },\n\n  set enabled(value) {\n    state.enabled = value;\n  }\n\n}; // Auto-install\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { VClosePopover, VPopover, VTooltip, createTooltip, destroyTooltip, install };\n"]}]}