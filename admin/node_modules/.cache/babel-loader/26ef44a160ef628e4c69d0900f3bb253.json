{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/components/ui/icons/Icons.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/components/ui/icons/Icons.vue","mtime":1594635176185},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCnZhciBpY29uVHlwZXMgPSBbJ3Z1ZXN0aWMnLCAnYnJhbmRpY28nLCAnZW50eXBvJywgJ2ZvbnQtYXdlc29tZScsICdmb250ZWxpY28nLCAnZ2x5cGhpY29ucycsICdpY29uaWMtc3Ryb2tlJywgJ2lvbmljb25zJywgJ21ha2knLCAnb3BlbndlYicsICdtYXRlcmlhbC1pY29ucyddOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2ljb25zJywKICBjb21wdXRlZDogewogICAgc2V0czogZnVuY3Rpb24gc2V0cygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBzZXRzID0gW107CiAgICAgIGljb25UeXBlcy5mb3JFYWNoKGZ1bmN0aW9uIChpY29uVHlwZSkgewogICAgICAgIHZhciBzZXQgPSByZXF1aXJlKCcuL3NldHMvJyArIGljb25UeXBlICsgJy5qc29uJyk7CgogICAgICAgIF90aGlzLmFkZEZpbHRlcmVkTGlzdHNUbyhzZXQpOwoKICAgICAgICBzZXRzLnB1c2goc2V0KTsKICAgICAgfSk7CiAgICAgIHJldHVybiBzZXRzOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkRmlsdGVyZWRMaXN0c1RvOiBmdW5jdGlvbiBhZGRGaWx0ZXJlZExpc3RzVG8oc2V0KSB7CiAgICAgIC8vIFRoaXMgYWxsb3dzIHVzIHRvIGFkZCBpY29ucyB0byBpY29uIHNldC4KICAgICAgdmFyIGxpc3QgPSBzZXQubGlzdHNbMF0uaWNvbnM7CiAgICAgIHZhciBmaWx0ZXJlZExpc3RzID0gW107CiAgICAgIGZpbHRlcmVkTGlzdHMucHVzaChsaXN0LnNsaWNlKDAsIDYpKTsKICAgICAgZmlsdGVyZWRMaXN0cy5wdXNoKGxpc3Quc2xpY2UoNiwgOCkpOwogICAgICBmaWx0ZXJlZExpc3RzLnB1c2gobGlzdC5zbGljZSg4LCAxNCkpOwogICAgICBzZXQuZmlsdGVyZWRMaXN0cyA9IGZpbHRlcmVkTGlzdHM7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2V0c1BhdGg6ICcuL3NldHMvJwogICAgfTsKICB9Cn07"},{"version":3,"sources":["Icons.vue"],"names":[],"mappings":";;;;;;;;AAOA,IAAA,SAAA,GAAA,CACA,SADA,EAEA,UAFA,EAGA,QAHA,EAIA,cAJA,EAKA,WALA,EAMA,YANA,EAOA,eAPA,EAQA,UARA,EASA,MATA,EAUA,SAVA,EAWA,gBAXA,CAAA;AAcA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,UAAA,IAAA,GAAA,EAAA;AACA,MAAA,SAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,GAAA,GAAA,OAAA,CAAA,YAAA,QAAA,GAAA,OAAA,CAAA;;AACA,QAAA,KAAA,CAAA,kBAAA,CAAA,GAAA;;AACA,QAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,OAJA;AAKA,aAAA,IAAA;AACA;AATA,GAFA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,8BACA,GADA,EACA;AACA;AACA,UAAA,IAAA,GAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA,KAAA;AACA,UAAA,aAAA,GAAA,EAAA;AACA,MAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,MAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,MAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,MAAA,GAAA,CAAA,aAAA,GAAA,aAAA;AACA;AATA,GAbA;AAwBA,EAAA,IAxBA,kBAwBA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA;AA5BA,CAAA","sourcesContent":["<template>\n  <div class=\"icons\">\n    <router-view :sets=\"sets\"></router-view>\n  </div>\n</template>\n\n<script>\nconst iconTypes = [\n  'vuestic',\n  'brandico',\n  'entypo',\n  'font-awesome',\n  'fontelico',\n  'glyphicons',\n  'iconic-stroke',\n  'ionicons',\n  'maki',\n  'openweb',\n  'material-icons',\n]\n\nexport default {\n  name: 'icons',\n  computed: {\n    sets () {\n      const sets = []\n      iconTypes.forEach(iconType => {\n        const set = require('./sets/' + iconType + '.json')\n        this.addFilteredListsTo(set)\n        sets.push(set)\n      })\n      return sets\n    },\n  },\n  methods: {\n    addFilteredListsTo (set) {\n      // This allows us to add icons to icon set.\n      const list = set.lists[0].icons\n      const filteredLists = []\n      filteredLists.push(list.slice(0, 6))\n      filteredLists.push(list.slice(6, 8))\n      filteredLists.push(list.slice(8, 14))\n      set.filteredLists = filteredLists\n    },\n  },\n  data () {\n    return {\n      setsPath: './sets/',\n    }\n  },\n}\n</script>\n"],"sourceRoot":"src/components/ui/icons"}]}