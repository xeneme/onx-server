{"remainingRequest":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/babel-loader/lib/index.js!/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/src/components/dashboard/dashboard-tabs/BillingAddressTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/src/components/dashboard/dashboard-tabs/BillingAddressTab.vue","mtime":1594635175387},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpOyB9CgpmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlIik7IH0KCmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikgeyBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09ICJbb2JqZWN0IEFyZ3VtZW50c10iKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTsgfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH0gfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IF9jb3VudHJpZXNMaXN0IGZyb20gJ0AvZGF0YS9Db3VudHJpZXNMaXN0JzsKaW1wb3J0IHsgZ2V0TGluZU1hcERhdGEgfSBmcm9tICcuLi8uLi8uLi9kYXRhL21hcHMvTGluZU1hcERhdGEnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2JpbGxpbmctYWRkcmVzcy10YWInLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgbmFtZTogJ0pvaG4gU21pdGgnLAogICAgICAgIGVtYWlsOiAnc21pdGhAZ21haWwuY29tJywKICAgICAgICBhZGRyZXNzOiAnOTMgIEd1aWxkIFN0cmVldCcsCiAgICAgICAgY2l0eTogewogICAgICAgICAgdGV4dDogJ0xvbmRvbicKICAgICAgICB9LAogICAgICAgIGNvdW50cnk6ICdVbml0ZWQgS2luZ2RvbScsCiAgICAgICAgY29ubmVjdGlvbjogdHJ1ZQogICAgICB9LAogICAgICBhbGxvd2VkQ291bnRyaWVzTGlzdDogW10sCiAgICAgIGFsbG93ZWRDaXRpZXNMaXN0OiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAnZm9ybS5jb3VudHJ5JzogZnVuY3Rpb24gZm9ybUNvdW50cnkodmFsdWUpIHsKICAgICAgdGhpcy5hbGxvd2VkQ2l0aWVzTGlzdCA9IHZhbHVlID8gdGhpcy5jaXRpZXNMaXN0LmZpbHRlcihmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciBjb3VudHJ5ID0gX3JlZi5jb3VudHJ5OwogICAgICAgIHJldHVybiBjb3VudHJ5ID09PSB2YWx1ZTsKICAgICAgfSkgOiBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5jaXRpZXNMaXN0KTsKICAgIH0sCiAgICAnZm9ybS5jaXR5JzogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKF9yZWYyKSB7CiAgICAgICAgdmFyIGNvdW50cnkgPSBfcmVmMi5jb3VudHJ5OwogICAgICAgIHRoaXMuZm9ybS5jb3VudHJ5ID0gdGhpcy5jb3VudHJpZXNMaXN0LmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtID09PSBjb3VudHJ5OwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXQ6IGZ1bmN0aW9uIHN1Ym1pdCgpIHsKICAgICAgdGhpcy4kZW1pdCgnc3VibWl0JywgdGhpcy5mb3JtKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaXRpZXNMaXN0OiBmdW5jdGlvbiBjaXRpZXNMaXN0KCkgewogICAgICByZXR1cm4gZ2V0TGluZU1hcERhdGEodGhpcy4kdGhlbWVzKS5jaXRpZXMubWFwKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgIHZhciB0aXRsZSA9IF9yZWYzLnRpdGxlLAogICAgICAgICAgICBjb3VudHJ5ID0gX3JlZjMuY291bnRyeTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdGV4dDogdGl0bGUsCiAgICAgICAgICBjb3VudHJ5OiBjb3VudHJ5CiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgY291bnRyaWVzTGlzdDogZnVuY3Rpb24gY291bnRyaWVzTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfY291bnRyaWVzTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gX3RoaXMuY2l0aWVzTGlzdC5maWx0ZXIoZnVuY3Rpb24gKF9yZWY0KSB7CiAgICAgICAgICB2YXIgY291bnRyeSA9IF9yZWY0LmNvdW50cnk7CiAgICAgICAgICByZXR1cm4gY291bnRyeSA9PT0gaXRlbTsKICAgICAgICB9KS5sZW5ndGg7CiAgICAgIH0pOwogICAgfSwKICAgIGNvbXB1dGVkU3R5bGVzVGl0bGU6IGZ1bmN0aW9uIGNvbXB1dGVkU3R5bGVzVGl0bGUoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29sb3I6IHRoaXMuJHRoZW1lcy5kYXJrCiAgICAgIH07CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5hbGxvd2VkQ2l0aWVzTGlzdCA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmNpdGllc0xpc3QpOwogIH0KfTs="},{"version":3,"sources":["BillingAddressTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,cAAA,MAAA,sBAAA;AACA,SAAA,cAAA,QAAA,gCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,KAAA,EAAA,iBAFA;AAGA,QAAA,OAAA,EAAA,kBAHA;AAIA,QAAA,IAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAJA;AAKA,QAAA,OAAA,EAAA,gBALA;AAMA,QAAA,UAAA,EAAA;AANA,OADA;AASA,MAAA,oBAAA,EAAA,EATA;AAUA,MAAA,iBAAA,EAAA;AAVA,KAAA;AAYA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,kBADA,uBACA,KADA,EACA;AACA,WAAA,iBAAA,GAAA,KAAA,GACA,KAAA,UAAA,CAAA,MAAA,CAAA;AAAA,YAAA,OAAA,QAAA,OAAA;AAAA,eAAA,OAAA,KAAA,KAAA;AAAA,OAAA,CADA,sBAEA,KAAA,UAFA,CAAA;AAGA,KALA;AAMA,iBAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAFA,0BAEA;AAAA,YAAA,OAAA,SAAA,OAAA;AACA,aAAA,IAAA,CAAA,OAAA,GAAA,KAAA,aAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iBAAA,IAAA,KAAA,OAAA;AAAA,SAAA,CAAA;AACA;AAJA;AANA,GAhBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA,IAAA;AACA;AAHA,GA7BA;AAkCA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,cAAA,CAAA,KAAA,OAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA;AAAA,YAAA,KAAA,SAAA,KAAA;AAAA,YAAA,OAAA,SAAA,OAAA;AAAA,eAAA;AAAA,UAAA,IAAA,EAAA,KAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AAAA,OAAA,CAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AAAA;;AACA,aAAA,cAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CAAA;AAAA,cAAA,OAAA,SAAA,OAAA;AAAA,iBAAA,OAAA,KAAA,IAAA;AAAA,SAAA,EAAA,MAAA;AAAA,OAAA,CAAA;AACA,KANA;AAOA,IAAA,mBAPA,iCAOA;AACA,aAAA;AACA,QAAA,KAAA,EAAA,KAAA,OAAA,CAAA;AADA,OAAA;AAGA;AAXA,GAlCA;AA+CA,EAAA,OA/CA,qBA+CA;AACA,SAAA,iBAAA,sBAAA,KAAA,UAAA;AACA;AAjDA,CAAA","sourcesContent":["<template>\n  <div class=\"pt-2\">\n    <div class=\"row\">\n      <div class=\"flex xs12 md6\">\n        <div\n          class=\"title mb-3\"\n          :style=\"computedStylesTitle\"\n        >\n          {{$t('dashboard.tabs.billingAddress.personalInfo')}}\n        </div>\n        <va-input\n          :label=\"$t('dashboard.tabs.billingAddress.firstName')\"\n          v-model=\"form.name\"\n        />\n        <va-input\n          :label=\"$t('dashboard.tabs.billingAddress.email')\"\n          v-model=\"form.email\"\n        />\n        <va-input\n          :label=\"$t('dashboard.tabs.billingAddress.address')\"\n          v-model=\"form.address\"\n        />\n      </div>\n      <div class=\"flex xs12 md6\">\n        <div\n          class=\"title mb-3\"\n          :style=\"computedStylesTitle\"\n        >\n          {{$t('dashboard.tabs.billingAddress.companyInfo')}}\n        </div>\n        <va-select\n          :options=\"countriesList\"\n          :label=\"$t('dashboard.tabs.billingAddress.country')\"\n          v-model=\"form.country\"\n          searchable\n        />\n        <va-select\n          :label=\"$t('dashboard.tabs.billingAddress.city')\"\n          v-model=\"form.city\"\n          :options=\"allowedCitiesList\"\n          key-by=\"text\"\n        />\n        <va-checkbox\n          :label=\"$t('dashboard.tabs.billingAddress.infiniteConnections')\"\n          v-model=\"form.connection\"\n        />\n      </div>\n    </div>\n    <div class=\"row justify--center\">\n      <va-button @click=\"submit\">\n        {{$t('dashboard.tabs.billingAddress.addConnection')}}\n      </va-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport countriesList from '@/data/CountriesList'\nimport { getLineMapData } from '../../../data/maps/LineMapData'\n\nexport default {\n  name: 'billing-address-tab',\n  data () {\n    return {\n      form: {\n        name: 'John Smith',\n        email: 'smith@gmail.com',\n        address: '93  Guild Street',\n        city: { text: 'London' },\n        country: 'United Kingdom',\n        connection: true,\n      },\n      allowedCountriesList: [],\n      allowedCitiesList: [],\n    }\n  },\n  watch: {\n    'form.country' (value) {\n      this.allowedCitiesList = value\n        ? this.citiesList.filter(({ country }) => country === value)\n        : [...this.citiesList]\n    },\n    'form.city': {\n      deep: true,\n      handler ({ country }) {\n        this.form.country = this.countriesList.find(item => item === country)\n      },\n    },\n  },\n  methods: {\n    submit () {\n      this.$emit('submit', this.form)\n    },\n  },\n  computed: {\n    citiesList () {\n      return getLineMapData(this.$themes).cities.map(({ title, country }) => ({ text: title, country }))\n    },\n    countriesList () {\n      return countriesList.filter(item => this.citiesList.filter(({ country }) => country === item).length)\n    },\n    computedStylesTitle () {\n      return {\n        color: this.$themes.dark,\n      }\n    },\n  },\n  mounted () {\n    this.allowedCitiesList = [...this.citiesList]\n  },\n}\n</script>\n"],"sourceRoot":"src/components/dashboard/dashboard-tabs"}]}