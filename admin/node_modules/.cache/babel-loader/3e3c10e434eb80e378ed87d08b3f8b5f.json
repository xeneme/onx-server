{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/data/charts/LineChartData.js","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/data/charts/LineChartData.js","mtime":1594635176499},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IHsgaGV4MnJnYiB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3Z1ZXN0aWMtdWknOwoKdmFyIGdlbmVyYXRlVmFsdWUgPSBmdW5jdGlvbiBnZW5lcmF0ZVZhbHVlKCkgewogIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDApOwp9OwoKdmFyIGdlbmVyYXRlWUxhYmVscyA9IGZ1bmN0aW9uIGdlbmVyYXRlWUxhYmVscygpIHsKICB2YXIgZmxpcCA9ICEhTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMik7CiAgcmV0dXJuIGZsaXAgPyBbJ0RlYml0JywgJ0NyZWRpdCddIDogWydDcmVkaXQnLCAnRGViaXQnXTsKfTsKCnZhciBnZW5lcmF0ZUFycmF5ID0gZnVuY3Rpb24gZ2VuZXJhdGVBcnJheShsZW5ndGgpIHsKICByZXR1cm4gQXJyYXkuZnJvbShBcnJheShsZW5ndGgpLCBnZW5lcmF0ZVZhbHVlKTsKfTsKCnZhciBnZXRTaXplID0gZnVuY3Rpb24gZ2V0U2l6ZSgpIHsKICB2YXIgbWluU2l6ZSA9IDQ7CiAgcmV0dXJuIE1hdGgubWF4KG1pblNpemUsIG5ldyBEYXRlKCkuZ2V0TW9udGgoKSk7Cn07Cgp2YXIgZ2VuZXJhdGVkRGF0YTsKdmFyIGZpcnN0TW9udGhJbmRleCA9IDA7CmV4cG9ydCB2YXIgZ2V0TGluZUNoYXJ0RGF0YSA9IGZ1bmN0aW9uIGdldExpbmVDaGFydERhdGEodGhlbWVzLCBmaXJzdE1vbnRoKSB7CiAgdmFyIHNpemUgPSBnZXRTaXplKCk7CiAgdmFyIG1vbnRocyA9IFsnSmFudWFyeScsICdGZWJydWFyeScsICdNYXJjaCcsICdBcHJpbCcsICdNYXknLCAnSnVuZScsICdKdWx5JywgJ0F1Z3VzdCcsICdTZXB0ZW1iZXInLCAnT2N0b2JlcicsICdOb3ZlbWJlcicsICdEZWNlbWJlciddOwogIHZhciB5TGFiZWxzID0gZ2VuZXJhdGVZTGFiZWxzKCk7CgogIGlmIChnZW5lcmF0ZWREYXRhKSB7CiAgICBnZW5lcmF0ZWREYXRhLmRhdGFzZXRzWzBdLmJhY2tncm91bmRDb2xvciA9IGhleDJyZ2IodGhlbWVzLnByaW1hcnksIDAuNikuY3NzOwogICAgZ2VuZXJhdGVkRGF0YS5kYXRhc2V0c1sxXS5iYWNrZ3JvdW5kQ29sb3IgPSBoZXgycmdiKHRoZW1lcy5pbmZvLCAwLjYpLmNzczsKCiAgICBpZiAoZmlyc3RNb250aCAmJiBmaXJzdE1vbnRoSW5kZXggIT09IGZpcnN0TW9udGgpIHsKICAgICAgZ2VuZXJhdGVkRGF0YS5sYWJlbHMuc2hpZnQoKTsKICAgICAgZ2VuZXJhdGVkRGF0YS5kYXRhc2V0cy5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhc2V0KSB7CiAgICAgICAgZGF0YXNldC5kYXRhLnNoaWZ0KCk7CiAgICAgIH0pOwogICAgICBmaXJzdE1vbnRoSW5kZXggPSBmaXJzdE1vbnRoOwogICAgfQogIH0gZWxzZSB7CiAgICBnZW5lcmF0ZWREYXRhID0gewogICAgICBsYWJlbHM6IG1vbnRocy5zcGxpY2UoZmlyc3RNb250aEluZGV4LCBzaXplKSwKICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgbGFiZWw6IHlMYWJlbHNbMF0sCiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBoZXgycmdiKHRoZW1lcy5wcmltYXJ5LCAwLjYpLmNzcywKICAgICAgICBib3JkZXJDb2xvcjogJ3RyYW5zcGFyZW50JywKICAgICAgICBkYXRhOiBnZW5lcmF0ZUFycmF5KHNpemUgLSBmaXJzdE1vbnRoSW5kZXgpCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogeUxhYmVsc1sxXSwKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGhleDJyZ2IodGhlbWVzLmluZm8sIDAuNikuY3NzLAogICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLAogICAgICAgIGRhdGE6IGdlbmVyYXRlQXJyYXkoc2l6ZSkKICAgICAgfV0KICAgIH07CiAgfQoKICByZXR1cm4gZ2VuZXJhdGVkRGF0YTsKfTs="},{"version":3,"sources":["/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/data/charts/LineChartData.js"],"names":["hex2rgb","generateValue","Math","floor","random","generateYLabels","flip","generateArray","length","Array","from","getSize","minSize","max","Date","getMonth","generatedData","firstMonthIndex","getLineChartData","themes","firstMonth","size","months","yLabels","datasets","backgroundColor","primary","css","info","labels","shift","forEach","dataset","data","splice","label","borderColor"],"mappings":"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","sourcesContent":["import { hex2rgb } from '../../services/vuestic-ui'\n\nconst generateValue = () => {\n  return Math.floor(Math.random() * 100)\n}\n\nconst generateYLabels = () => {\n  const flip = !!Math.floor(Math.random() * 2)\n  return flip ? ['Debit', 'Credit'] : ['Credit', 'Debit']\n}\n\nconst generateArray = (length) => {\n  return Array.from(Array(length), generateValue)\n}\n\nconst getSize = () => {\n  const minSize = 4\n  return Math.max(minSize, new Date().getMonth())\n}\n\nlet generatedData\nlet firstMonthIndex = 0\n\nexport const getLineChartData = (themes, firstMonth) => {\n  const size = getSize()\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  const yLabels = generateYLabels()\n\n  if (generatedData) {\n    generatedData.datasets[0].backgroundColor = hex2rgb(themes.primary, 0.6).css\n    generatedData.datasets[1].backgroundColor = hex2rgb(themes.info, 0.6).css\n    if (firstMonth && firstMonthIndex !== firstMonth) {\n      generatedData.labels.shift()\n      generatedData.datasets.forEach((dataset) => {\n        dataset.data.shift()\n      })\n      firstMonthIndex = firstMonth\n    }\n  } else {\n    generatedData = {\n      labels: months.splice(firstMonthIndex, size),\n      datasets: [\n        {\n          label: yLabels[0],\n          backgroundColor: hex2rgb(themes.primary, 0.6).css,\n          borderColor: 'transparent',\n          data: generateArray(size - firstMonthIndex),\n        },\n        {\n          label: yLabels[1],\n          backgroundColor: hex2rgb(themes.info, 0.6).css,\n          borderColor: 'transparent',\n          data: generateArray(size),\n        },\n      ],\n    }\n  }\n\n  return generatedData\n}\n"]}]}