{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/components/maps/line-maps/LineMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/components/maps/line-maps/LineMap.vue","mtime":1594635175722},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICdhbWNoYXJ0czMnOwppbXBvcnQgJ2FtY2hhcnRzMy9hbWNoYXJ0cy9wbHVnaW5zL3Jlc3BvbnNpdmUvcmVzcG9uc2l2ZS5qcyc7CmltcG9ydCAnYW1jaGFydHMzL2FtY2hhcnRzL3NlcmlhbC5qcyc7CmltcG9ydCAnYW1jaGFydHMzL2FtY2hhcnRzL3RoZW1lcy9saWdodCc7CmltcG9ydCAnYW1tYXAzJzsKaW1wb3J0ICdhbW1hcDMvYW1tYXAvbWFwcy9qcy93b3JsZExvdyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbGluZS1tYXAnLAogIHByb3BzOiBbJ21hcERhdGEnXSwKICB3YXRjaDogewogICAgbWFwRGF0YTogZnVuY3Rpb24gbWFwRGF0YSgpIHsKICAgICAgdGhpcy5hZGREYXRhVG9NYXAoKTsKICAgICAgdGhpcy5tYXAudmFsaWRhdGVEYXRhKCk7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YVByb3ZpZGVyOiB7CiAgICAgICAgbWFwVmFyOiBBbUNoYXJ0cy5tYXBzLndvcmxkTG93CiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgbWFwOiBmdW5jdGlvbiBtYXAoKSB7CiAgICAgIHJldHVybiBuZXcgQW1DaGFydHMuQW1NYXAoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXdNYXA6IGZ1bmN0aW9uIGRyYXdNYXAoKSB7CiAgICAgIC8qIGdsb2JhbCBBbUNoYXJ0cyAqLwogICAgICB0aGlzLm1hcC5hcmVhc1NldHRpbmdzID0gewogICAgICAgIHVubGlzdGVkQXJlYXNDb2xvcjogJyNlZWUnLAogICAgICAgIHVubGlzdGVkQXJlYXNBbHBoYTogMSwKICAgICAgICBvdXRsaW5lQ29sb3I6ICcjZmZmJywKICAgICAgICBvdXRsaW5lVGhpY2tuZXNzOiAyCiAgICAgIH07CiAgICAgIHRoaXMubWFwLmltYWdlc1NldHRpbmdzID0gewogICAgICAgIGNvbG9yOiB0aGlzLiR0aGVtZXMuaW5mbywKICAgICAgICByb2xsT3ZlckNvbG9yOiB0aGlzLiR0aGVtZXMuaW5mbywKICAgICAgICBzZWxlY3RlZENvbG9yOiB0aGlzLiR0aGVtZXMucHJpbWFyeQogICAgICB9OwogICAgICB0aGlzLm1hcC5saW5lc1NldHRpbmdzID0gewogICAgICAgIGNvbG9yOiB0aGlzLiR0aGVtZXMuaW5mbywKICAgICAgICBhbHBoYTogMC40CiAgICAgIH07CiAgICAgIHRoaXMuYWRkRGF0YVRvTWFwKCk7CiAgICAgIHRoaXMubWFwLmRhdGFQcm92aWRlciA9IHRoaXMuZGF0YVByb3ZpZGVyOwogICAgICB0aGlzLm1hcC5iYWNrZ3JvdW5kWm9vbXNUb1RvcCA9IHRydWU7CiAgICAgIHRoaXMubWFwLmxpbmVzQWJvdmVJbWFnZXMgPSB0cnVlOwogICAgICB0aGlzLm1hcC53cml0ZSh0aGlzLiRlbCk7CiAgICB9LAogICAgYWRkRGF0YVRvTWFwOiBmdW5jdGlvbiBhZGREYXRhVG9NYXAoKSB7CiAgICAgIHRoaXMuZGF0YVByb3ZpZGVyLmxpbmtUb09iamVjdCA9IHRoaXMubWFwRGF0YS5tYWluQ2l0eTsKICAgICAgdGhpcy5kYXRhUHJvdmlkZXIuaW1hZ2VzID0gdGhpcy5tYXBEYXRhLmNpdGllczsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmRyYXdNYXAoKTsKICB9Cn07"},{"version":3,"sources":["LineMap.vue"],"names":[],"mappings":";;;;;;;AAOA,OAAA,WAAA;AACA,OAAA,qDAAA;AACA,OAAA,8BAAA;AACA,OAAA,iCAAA;AAEA,OAAA,QAAA;AACA,OAAA,+BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAGA,EAAA,KAAA,EAAA,CAAA,SAAA,CAHA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,WAAA,YAAA;AACA,WAAA,GAAA,CAAA,YAAA;AACA;AAJA,GAJA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,MAAA,EAAA,QAAA,CAAA,IAAA,CAAA;AADA;AADA,KAAA;AAKA,GAhBA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA,aAAA,IAAA,QAAA,CAAA,KAAA,EAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA;AACA,WAAA,GAAA,CAAA,aAAA,GAAA;AACA,QAAA,kBAAA,EAAA,MADA;AAEA,QAAA,kBAAA,EAAA,CAFA;AAGA,QAAA,YAAA,EAAA,MAHA;AAIA,QAAA,gBAAA,EAAA;AAJA,OAAA;AAMA,WAAA,GAAA,CAAA,cAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,OAAA,CAAA,IADA;AAEA,QAAA,aAAA,EAAA,KAAA,OAAA,CAAA,IAFA;AAGA,QAAA,aAAA,EAAA,KAAA,OAAA,CAAA;AAHA,OAAA;AAKA,WAAA,GAAA,CAAA,aAAA,GAAA;AACA,QAAA,KAAA,EAAA,KAAA,OAAA,CAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA,WAAA,YAAA;AACA,WAAA,GAAA,CAAA,YAAA,GAAA,KAAA,YAAA;AACA,WAAA,GAAA,CAAA,oBAAA,GAAA,IAAA;AACA,WAAA,GAAA,CAAA,gBAAA,GAAA,IAAA;AAEA,WAAA,GAAA,CAAA,KAAA,CAAA,KAAA,GAAA;AACA,KAxBA;AAyBA,IAAA,YAzBA,0BAyBA;AACA,WAAA,YAAA,CAAA,YAAA,GAAA,KAAA,OAAA,CAAA,QAAA;AACA,WAAA,YAAA,CAAA,MAAA,GAAA,KAAA,OAAA,CAAA,MAAA;AACA;AA5BA,GAtBA;AAoDA,EAAA,OApDA,qBAoDA;AACA,SAAA,OAAA;AACA;AAtDA,CAAA","sourcesContent":["<template>\n  <div class=\"line-map fill-height\">\n    Line Map\n  </div>\n</template>\n\n<script>\nimport 'amcharts3'\nimport 'amcharts3/amcharts/plugins/responsive/responsive.js'\nimport 'amcharts3/amcharts/serial.js'\nimport 'amcharts3/amcharts/themes/light'\n\nimport 'ammap3'\nimport 'ammap3/ammap/maps/js/worldLow'\n\nexport default {\n  name: 'line-map',\n\n  props: ['mapData'],\n  watch: {\n    mapData () {\n      this.addDataToMap()\n      this.map.validateData()\n    },\n  },\n  data () {\n    return {\n      dataProvider: {\n        mapVar: AmCharts.maps.worldLow,\n      },\n    }\n  },\n  computed: {\n    map () {\n      return new AmCharts.AmMap()\n    },\n  },\n  methods: {\n    drawMap () {\n      /* global AmCharts */\n      this.map.areasSettings = {\n        unlistedAreasColor: '#eee',\n        unlistedAreasAlpha: 1,\n        outlineColor: '#fff',\n        outlineThickness: 2,\n      }\n      this.map.imagesSettings = {\n        color: this.$themes.info,\n        rollOverColor: this.$themes.info,\n        selectedColor: this.$themes.primary,\n      }\n      this.map.linesSettings = {\n        color: this.$themes.info,\n        alpha: 0.4,\n      }\n      this.addDataToMap()\n      this.map.dataProvider = this.dataProvider\n      this.map.backgroundZoomsToTop = true\n      this.map.linesAboveImages = true\n\n      this.map.write(this.$el)\n    },\n    addDataToMap () {\n      this.dataProvider.linkToObject = this.mapData.mainCity\n      this.dataProvider.images = this.mapData.cities\n    },\n  },\n  mounted () {\n    this.drawMap()\n  },\n}\n</script>\n"],"sourceRoot":"src/components/maps/line-maps"}]}