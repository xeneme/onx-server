{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/src/components/vuestic-components/va-slider/VaSlider.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vuestic-ui/src/components/vuestic-components/va-slider/VaSlider.vue","mtime":1598034796000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAiLi4vLi4vdnVlc3RpYy1zYXNzL3Jlc291cmNlcy9yZXNvdXJjZXMiOw0KDQoudmEtc2xpZGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCg0KICAmLS1kaXNhYmxlZCB7DQogICAgQGluY2x1ZGUgdmEtZGlzYWJsZWQ7DQoNCiAgICAudmEtc2xpZGVyX19jb250YWluZXJfX2hhbmRsZXIgew0KDQogICAgICAmOmhvdmVyIHsNCiAgICAgICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgICAgfQ0KICAgIH0NCiAgfQ0KDQogICZfX2lucHV0LXdyYXBwZXIgew0KICAgIGZsZXgtYmFzaXM6IDguMzMzMzMlOw0KICAgIGZsZXgtZ3JvdzogMDsNCiAgICBtYXgtd2lkdGg6IDguMzMzMzMlOw0KICAgIG1hcmdpbi1yaWdodDogMXJlbTsNCiAgICBtaW4td2lkdGg6IDIuNXJlbTsNCg0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KDQogICAgJjpsYXN0LW9mLXR5cGUgew0KICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07DQogICAgfQ0KICB9DQoNCiAgJl9fbGFiZWwgew0KICAgIG1hcmdpbi1yaWdodDogMXJlbTsNCiAgICB1c2VyLXNlbGVjdDogbm9uZTsNCiAgICBmb250LXNpemU6IC42MjVyZW07DQogICAgbGV0dGVyLXNwYWNpbmc6IDAuNnB4Ow0KICAgIGxpbmUtaGVpZ2h0OiAxLjI7DQogICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCiAgfQ0KDQogICZfX2ludmVyc2UtbGFiZWwgew0KICAgIHVzZXItc2VsZWN0OiBub25lOw0KICAgIGZvbnQtc2l6ZTogLjYyNXJlbTsNCiAgICBsZXR0ZXItc3BhY2luZzogMC42cHg7DQogICAgbGluZS1oZWlnaHQ6IDEuMjsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOw0KICAgIG1hcmdpbi1sZWZ0OiAxcmVtOw0KICB9DQoNCiAgJl9fY29udGFpbmVyIHsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiAxLjVyZW07DQogICAgZGlzcGxheTogZmxleDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KDQogICAgJl9fdHJhY2ssICZfX3RyYWNrLS1hY3RpdmUgew0KICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgaGVpZ2h0OiAwLjVyZW07DQogICAgICBib3JkZXItcmFkaXVzOiAwLjI1cmVtOw0KICAgIH0NCg0KICAgICZfX3RyYWNrIHsNCiAgICAgIHdpZHRoOiAxMDAlOw0KICAgIH0NCg0KICAgICZfX21hcmsgew0KICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgd2lkdGg6IDAuMTI1cmVtOw0KICAgICAgaGVpZ2h0OiAwLjc1cmVtOw0KICAgIH0NCg0KICAgICZfX2hhbmRsZXIgew0KICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgd2lkdGg6IDEuMjVyZW07DQogICAgICBoZWlnaHQ6IDEuMjVyZW07DQogICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7DQogICAgICBib3JkZXI6IDAuMzc1cmVtIHNvbGlkOw0KICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50Ow0KDQogICAgICAmOmhvdmVyIHsNCiAgICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgfQ0KDQogICAgICAmLS1vbi1rZXlib2FyZC1mb2N1cyB7DQogICAgICAgIEBhdC1yb290IC52YS1zbGlkZXJfX2NvbnRhaW5lcl9faGFuZGxlciN7Jn06YmVmb3JlIHsNCiAgICAgICAgICBjb250ZW50OiAnJzsNCiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMC42MjVyZW0sIC0wLjYyNXJlbSk7DQogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2sgIWltcG9ydGFudDsNCiAgICAgICAgICBkaXNwbGF5OiBibG9jazsNCiAgICAgICAgICB3aWR0aDogMS43NXJlbTsNCiAgICAgICAgICBoZWlnaHQ6IDEuNzVyZW07DQogICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICAgICAgICBvcGFjaXR5OiAwLjE7DQogICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgJi12YWx1ZSB7DQogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgdG9wOiAtOHB4Ow0KICAgICAgICBsZWZ0OiA1MCU7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC0xMDAlKTsNCiAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7DQogICAgICAgIGZvbnQtc2l6ZTogLjYyNXJlbTsNCiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuNnB4Ow0KICAgICAgICBsaW5lLWhlaWdodDogMS4yOw0KICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["VaSlider.vue"],"names":[],"mappingsknfile":"VaSlider.vue","sourceRoot":"node_modules/vuestic-ui/src/components/vuestic-components/va-slider","sourcesContent":["<template>\r\n  <div\r\n    class=\"va-slider\"\r\n    :class=\"sliderClass\"\r\n  >\r\n    <div class=\"va-slider__input-wrapper\" v-if=\"$slots.beforeInput\">\r\n      <slot name=\"beforeInput\"/>\r\n    </div>\r\n    <span\r\n      v-if=\"label && !inverseLabel\"\r\n      :style=\"labelStyle\"\r\n      class=\"va-slider__label\">\r\n      {{ label }}\r\n    </span>\r\n    <span\r\n      v-if=\"icon\"\r\n      class=\"va-slider__label\">\r\n      <va-icon :name=\"icon\" :color=\"colorComputed\" :size=\"16\"/>\r\n    </span>\r\n    <div\r\n      class=\"va-slider__container\"\r\n      @click=\"wrapClick\"\r\n      ref=\"sliderContainer\"\r\n    >\r\n      <div\r\n        class=\"va-slider__container__track\"\r\n        :style=\"trackStyles\"/>\r\n      <template v-if=\"pins\">\r\n        <div\r\n          v-for=\"(pin, key) in pinsCol\"\r\n          :key=\"key\"\r\n          class=\"va-slider__container__mark\"\r\n          :class=\"{ 'va-slider__container__mark--active': checkActivePin(pin) }\"\r\n          :style=\"getPinStyles(pin)\"\r\n        />\r\n      </template>\r\n      <template v-if=\"isRange\">\r\n        <div\r\n          ref=\"process\"\r\n          class=\"va-slider__container__track va-slider__container__track--active\"\r\n          :style=\"processedStyles\"\r\n          @mousedown=\"moveStart($event, 0)\"/>\r\n        <div\r\n          ref=\"dot0\"\r\n          class=\"va-slider__container__handler\"\r\n          :class=\"{'va-slider__container__handler--on-keyboard-focus': isKeyboardFocused === 1}\"\r\n          :style=\"dottedStyles[0]\"\r\n          @mousedown=\"(moveStart($event, 0), setMouseDown($event, 1))\"\r\n          @touchstart=\"moveStart($event, 0)\"\r\n          @focus=\"onFocus($event, 1)\"\r\n          @blur=\"isKeyboardFocused = false\"\r\n          :tabindex=\"!this.disabled && 0\"\r\n        >\r\n          <div\r\n            v-if=\"valueVisible\"\r\n            :style=\"labelStyle\"\r\n            class=\"va-slider__container__handler-value\"\r\n          >\r\n            {{ val[0] }}\r\n          </div>\r\n        </div>\r\n        <div\r\n          ref=\"dot1\"\r\n          class=\"va-slider__container__handler\"\r\n          :class=\"{'va-slider__container__handler--on-keyboard-focus': isKeyboardFocused === 2}\"\r\n          :style=\"dottedStyles[1]\"\r\n          @mousedown=\"(moveStart($event, 1), setMouseDown($event, 2))\"\r\n          @touchstart=\"moveStart($event, 1)\"\r\n          @focus=\"onFocus($event, 2)\"\r\n          @blur=\"isKeyboardFocused = false\"\r\n          :tabindex=\"!this.disabled && 0\"\r\n        >\r\n          <div\r\n            v-if=\"valueVisible\"\r\n            :style=\"labelStyle\"\r\n            class=\"va-slider__container__handler-value\">\r\n            {{ val[1] }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template v-else>\r\n        <div\r\n          ref=\"process\"\r\n          class=\"va-slider__container__track va-slider__container__track--active\"\r\n          :style=\"processedStyles\"\r\n          @mousedown=\"moveStart($event, 0)\"/>\r\n        <div\r\n          ref=\"dot\"\r\n          class=\"va-slider__container__handler\"\r\n          :class=\"{'va-slider__container__handler--on-keyboard-focus': isKeyboardFocused}\"\r\n          :style=\"dottedStyles\"\r\n          @mousedown=\"(moveStart(), setMouseDown())\"\r\n          @touchstart=\"moveStart()\"\r\n          @focus=\"onFocus\"\r\n          @blur=\"isKeyboardFocused = false\"\r\n          :tabindex=\"!this.disabled && 0\"\r\n        >\r\n          <div\r\n            v-if=\"valueVisible\"\r\n            :style=\"labelStyle\"\r\n            class=\"va-slider__container__handler-value\"\r\n          >\r\n            {{ labelValue || val }}\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <span\r\n      v-if=\"iconRight\"\r\n      class=\"va-slider__inverse-label\">\r\n      <va-icon :name=\"iconRight\" :color=\"colorComputed\" :size=\"16\"/>\r\n    </span>\r\n    <span\r\n      v-if=\"inverseLabel\"\r\n      :style=\"labelStyle\"\r\n      class=\"va-slider__label va-slider__inverse-label\">\r\n      {{ label }}\r\n    </span>\r\n    <div class=\"va-slider__input-wrapper\" v-if=\"$slots.afterInput\">\r\n      <slot name=\"afterInput\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { validateSlider } from './validateSlider'\r\nimport { getHoverColor } from '../../../services/color-functions'\r\nimport VaIcon from '../va-icon/VaIcon'\r\nimport { ColorThemeMixin } from '../../../services/ColorThemePlugin'\r\nimport { KeyboardOnlyFocusMixin } from '../va-checkbox/KeyboardOnlyFocusMixin'\r\n\r\nexport default {\r\n  name: 'va-slider',\r\n  components: {\r\n    VaIcon,\r\n  },\r\n  mixins: [\r\n    ColorThemeMixin,\r\n    KeyboardOnlyFocusMixin,\r\n  ],\r\n  props: {\r\n    range: {\r\n      type: Boolean,\r\n    },\r\n    value: {\r\n      type: [Number, Array],\r\n    },\r\n    labelValue: {\r\n      type: String,\r\n    },\r\n    valueVisible: {\r\n      type: Boolean,\r\n    },\r\n    min: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    max: {\r\n      type: Number,\r\n      default: 100,\r\n    },\r\n    step: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    label: {\r\n      type: String,\r\n    },\r\n    inverseLabel: {\r\n      type: Boolean,\r\n    },\r\n    disabled: {\r\n      type: [Boolean, Array],\r\n    },\r\n    pins: {\r\n      type: Boolean,\r\n    },\r\n    icon: {\r\n      type: String,\r\n    },\r\n    iconRight: {\r\n      type: String,\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      flag: false,\r\n      size: 0,\r\n      currentValue: this.value,\r\n      currentSlider: 0,\r\n      isComponentExists: false,\r\n    }\r\n  },\r\n  computed: {\r\n    sliderClass () {\r\n      return {\r\n        'va-slider--disabled': this.disabled,\r\n      }\r\n    },\r\n    labelStyle () {\r\n      return {\r\n        color: this.colorComputed,\r\n      }\r\n    },\r\n    trackStyles () {\r\n      return {\r\n        backgroundColor: getHoverColor(this.colorComputed),\r\n      }\r\n    },\r\n    processedStyles () {\r\n      const validatedValue = this.limitValue(this.value)\r\n\r\n      if (this.range) {\r\n        const val0 = ((validatedValue[0] - this.min) / (this.max - this.min)) * 100\r\n        const val1 = ((validatedValue[1] - this.min) / (this.max - this.min)) * 100\r\n\r\n        return {\r\n          left: `${val0}%`,\r\n          width: `${val1 - val0}%`,\r\n          backgroundColor: this.colorComputed,\r\n        }\r\n      } else {\r\n        const val = ((validatedValue - this.min) / (this.max - this.min)) * 100\r\n\r\n        return {\r\n          width: `${val}%`,\r\n          backgroundColor: this.colorComputed,\r\n        }\r\n      }\r\n    },\r\n    dottedStyles () {\r\n      const validatedValue = this.limitValue(this.value)\r\n\r\n      if (this.range) {\r\n        const val0 = ((validatedValue[0] - this.min) / (this.max - this.min)) * 100\r\n        const val1 = ((validatedValue[1] - this.min) / (this.max - this.min)) * 100\r\n\r\n        return [\r\n          {\r\n            left: `calc(${val0}% - 8px)`,\r\n            backgroundColor: '#ffffff',\r\n            borderColor: this.colorComputed,\r\n          },\r\n          {\r\n            left: `calc(${val1}% - 8px)`,\r\n            backgroundColor: '#ffffff',\r\n            borderColor: this.colorComputed,\r\n          },\r\n        ]\r\n      } else {\r\n        const val = ((validatedValue - this.min) / (this.max - this.min)) * 100\r\n\r\n        return {\r\n          left: `calc(${val}% - 8px)`,\r\n          backgroundColor: '#ffffff',\r\n          borderColor: this.colorComputed,\r\n        }\r\n      }\r\n    },\r\n    val: {\r\n      get () {\r\n        return this.value\r\n      },\r\n      set (val) {\r\n        if (!this.range) {\r\n          val = this.limitValue(val)\r\n        }\r\n        this.$emit('input', val)\r\n      },\r\n    },\r\n    total () {\r\n      return (this.max - this.min) / this.step\r\n    },\r\n    gap () {\r\n      return this.size / this.total\r\n    },\r\n    multiple () {\r\n      let decimals = `${this.step}`.split('.')[1]\r\n      return decimals ? Math.pow(10, decimals.length) : 1\r\n    },\r\n    interval () {\r\n      return this.value[1] - this.value[0]\r\n    },\r\n    pinsCol () {\r\n      return (this.max / this.step) - 1\r\n    },\r\n    position () {\r\n      return this.isRange ? [(this.value[0] - this.min) / this.step * this.gap, (this.value[1] - this.min) / this.step * this.gap] : ((this.value - this.min) / this.step * this.gap)\r\n    },\r\n    limit () {\r\n      return [0, this.size]\r\n    },\r\n    valueLimit () {\r\n      return [this.min, this.max]\r\n    },\r\n    isRange () {\r\n      return Array.isArray(this.value)\r\n    },\r\n  },\r\n  watch: {\r\n    val (val) {\r\n      validateSlider(val, this.step, this.min, this.max)\r\n    },\r\n    max (val) {\r\n      if (val < this.min) {\r\n        validateSlider(this.value, this.step, val, this.max)\r\n      }\r\n    },\r\n    min (val) {\r\n      if (val > this.max) {\r\n        validateSlider(this.value, this.step, this.min, val)\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    bindEvents () {\r\n      document.addEventListener('mousemove', this.moving)\r\n      document.addEventListener('touchmove', this.moving)\r\n      document.addEventListener('mouseup', this.moveEnd)\r\n      document.addEventListener('mouseleave', this.moveEnd)\r\n      document.addEventListener('touchcancel', this.moveEnd)\r\n      document.addEventListener('touchend', this.moveEnd)\r\n      document.addEventListener('keydown', this.moveWithKeys)\r\n    },\r\n    unbindEvents () {\r\n      document.removeEventListener('mousemove', this.moving)\r\n      document.removeEventListener('touchmove', this.moving)\r\n      document.removeEventListener('mouseup', this.moveEnd)\r\n      document.removeEventListener('mouseleave', this.moveEnd)\r\n      document.removeEventListener('touchcancel', this.moveEnd)\r\n      document.removeEventListener('touchend', this.moveEnd)\r\n      document.removeEventListener('keydown', this.moveWithKeys)\r\n    },\r\n    setMouseDown (e, index) {\r\n      this.hasMouseDown = index || true\r\n    },\r\n    moveStart (e, index) {\r\n      if (this.isRange) {\r\n        this.currentSlider = index\r\n      }\r\n\r\n      this.flag = true\r\n      this.$emit('drag-start', this)\r\n    },\r\n    moving (e) {\r\n      if (!this.disabled) {\r\n        if (!this.flag) {\r\n          return false\r\n        }\r\n\r\n        if (e.type === 'touchmove') {\r\n          this.setValueOnPos(this.getPos(e.touches[0]))\r\n        } else {\r\n          e.preventDefault()\r\n          this.setValueOnPos(this.getPos(e))\r\n        }\r\n      }\r\n    },\r\n    moveEnd (e) {\r\n      if (!this.disabled) {\r\n        if (this.flag) {\r\n          this.$emit('drag-end', this)\r\n        } else {\r\n          return false\r\n        }\r\n        this.flag = false\r\n        this.hasMouseDown = false\r\n      }\r\n    },\r\n    moveWithKeys (event) {\r\n      // don't do anything if a dot isn't focused or if the slider's disabled\r\n      if (![this.$refs.dot0, this.$refs.dot1, this.$refs.dot].includes(document.activeElement)) return\r\n      if (this.disabled) return\r\n\r\n      /*\r\n        where: where to move\r\n          0 - to left\r\n          1 - to right\r\n\r\n        which: which dot to move (only makes sence when isRange is true)\r\n          0 - left dot\r\n          1 - right dot\r\n       */\r\n      const moveDot = (isRange, where, which) => {\r\n        if (isRange) {\r\n          if (!this.pins) return this.val.splice(which, 1, this.val[which] + (where ? this.step : -this.step))\r\n\r\n          // how many value units one pin occupies\r\n          let onePinInterval = (this.max - this.min) / (this.pinsCol + 1)\r\n          // how many full pins are to the left of the dot now\r\n          let fullPinsNow = this.val[which] / onePinInterval | 0\r\n          // the value of the nearest pin\r\n          let nearestPinVal = fullPinsNow * onePinInterval\r\n\r\n          if (this.val[which] !== nearestPinVal) { // if the dot's not pinned already\r\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\r\n            this.val.splice(which, 1, nearestPinVal)\r\n          } else {\r\n            this.val.splice(which, 1, this.val[which] + (where ? this.step : -this.step))\r\n          }\r\n        } else {\r\n          if (!this.pins) {\r\n            this.val += where ? this.step : -this.step\r\n            return\r\n          }\r\n\r\n          // how many value units one pin occupies\r\n          let onePinInterval = (this.max - this.min) / (this.pinsCol + 1)\r\n          // how many full pins are to the left of the dot now\r\n          let fullPinsNow = this.val / onePinInterval | 0\r\n          // the value of the nearest pin\r\n          let nearestPinVal = fullPinsNow * onePinInterval\r\n\r\n          if (this.val !== nearestPinVal) { // if the dot's not pinned already\r\n            nearestPinVal += where ? onePinInterval : 0 // take one more pin if moving right\r\n            this.val = nearestPinVal\r\n          } else {\r\n            this.val += where ? this.step : -this.step\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.range) {\r\n        if (this.$refs.dot0 === document.activeElement) { // left dot\r\n          if (\r\n            event.keyCode === 37 && // left arrow pressed\r\n            !((this.val[0] - this.step) < this.min) // and won't become less than `min`\r\n          ) moveDot(true, 0, 0)\r\n\r\n          if (\r\n            event.keyCode === 39 && // right arrow pressed\r\n            !((this.val[0] + this.step) > this.val[1]) // and won't become more than the second dot is\r\n          ) moveDot(true, 1, 0)\r\n        } else if (this.$refs.dot1 === document.activeElement) { // right dot\r\n          if (\r\n            event.keyCode === 37 && // left arrow pressed\r\n            !((this.val[1] - this.step) < this.val[0]) // and won't become less then the first dot is\r\n          ) moveDot(true, 0, 1)\r\n\r\n          if (\r\n            event.keyCode === 39 && // right arrow pressed\r\n            !((this.val[1] + this.step) > this.max) // and won't become more than `max`\r\n          ) moveDot(true, 1, 1)\r\n        }\r\n      } else {\r\n        if (event.keyCode === 37) moveDot(false, 0)\r\n        if (event.keyCode === 39) moveDot(false, 1)\r\n      }\r\n    },\r\n    wrapClick (e) {\r\n      if (!this.disabled && !this.flag) {\r\n        let pos = this.getPos(e)\r\n        if (this.isRange) {\r\n          this.currentSlider = pos > ((this.position[1] - this.position[0]) / 2 + this.position[0]) ? 1 : 0\r\n        }\r\n        this.setValueOnPos(pos)\r\n        if (this.pins) {\r\n          if (this.isRange) {\r\n            if (this.currentValue[0] % this.step !== 0) {\r\n              this.currentValue[0] = this.normalizeValue(this.currentValue[0])\r\n              this.val = [this.currentValue[0], this.val[1]]\r\n            }\r\n            if (this.currentValue[1] % this.step !== 0) {\r\n              this.currentValue[1] = this.normalizeValue(this.currentValue[1])\r\n              this.val = [this.val[0], this.currentValue[1]]\r\n            }\r\n          } else {\r\n            this.currentValue = this.normalizeValue(this.currentValue)\r\n            this.val = this.currentValue\r\n          }\r\n        }\r\n      }\r\n    },\r\n    checkActivePin (pin) {\r\n      if (this.isRange) {\r\n        return pin * this.step > this.val[0] && pin * this.step < this.val[1]\r\n      } else {\r\n        return pin * this.step < this.val\r\n      }\r\n    },\r\n    getPinStyles (pin) {\r\n      return {\r\n        backgroundColor: this.checkActivePin(pin) ? this.colorComputed : getHoverColor(this.colorComputed),\r\n        left: `${pin * this.step}%`,\r\n      }\r\n    },\r\n    getPos (e) {\r\n      this.getStaticData()\r\n      return e.clientX - this.offset\r\n    },\r\n    getStaticData () {\r\n      if (this.$refs.sliderContainer) {\r\n        this.size = this.$refs.sliderContainer.offsetWidth\r\n        this.offset = this.$refs.sliderContainer.getBoundingClientRect().left\r\n      }\r\n    },\r\n    getValueByIndex (index) {\r\n      return ((this.step * this.multiple) * index + (this.min * this.multiple)) / this.multiple\r\n    },\r\n    setCurrentValue (val) {\r\n      let slider = this.currentSlider\r\n      if (this.isRange) {\r\n        if (this.isDiff(this.currentValue[slider], val)) {\r\n          this.currentValue.splice(slider, 1, val)\r\n          if (slider === 0) {\r\n            this.val = [this.currentValue.splice(slider, 1, val)[0], this.value[1]]\r\n            this.currentValue = [this.currentValue.splice(slider, 1, val)[0], this.value[1]]\r\n          } else {\r\n            this.val = [this.value[0], this.currentValue.splice(slider, 1, val)[0]]\r\n            this.currentValue = [this.value[0], this.currentValue.splice(slider, 1, val)[0]]\r\n          }\r\n        }\r\n      } else {\r\n        if (val < this.min || val > this.max) {\r\n          return false\r\n        }\r\n        if (this.isDiff(this.currentValue, val)) {\r\n          this.currentValue = val\r\n          this.val = val\r\n        }\r\n      }\r\n    },\r\n    setValueOnPos (pixelPosition, isDrag) {\r\n      const range = this.limit\r\n      const valueRange = this.valueLimit\r\n\r\n      this.setTransform()\r\n\r\n      if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\r\n        if (this.currentSlider) {\r\n          if (pixelPosition <= this.position[0]) {\r\n            this.currentSlider = 0\r\n          }\r\n          let v = this.getValueByIndex(Math.round(pixelPosition / this.gap))\r\n          this.setCurrentValue(v, isDrag)\r\n        } else {\r\n          if (pixelPosition >= this.position[1]) {\r\n            this.currentSlider = 1\r\n          }\r\n          let v = this.getValueByIndex(Math.round(pixelPosition / this.gap))\r\n          this.setCurrentValue(v, isDrag)\r\n        }\r\n      } else if (pixelPosition < range[0]) {\r\n        this.setCurrentValue(valueRange[0])\r\n      } else {\r\n        this.setCurrentValue(valueRange[1])\r\n      }\r\n    },\r\n    setTransform () {\r\n      if (this.isRange) {\r\n        const slider = this.currentSlider\r\n        const difference = 100 / (this.max - this.min)\r\n        const val0 = (this.value[0] - this.min) * difference\r\n        const val1 = (this.value[1] - this.min) * difference\r\n        const processSize = `${val1 - val0}%`\r\n        const processPosition = `${val0}%`\r\n\r\n        this.$refs.process.style.width = processSize\r\n        this.$refs.process.style['left'] = processPosition\r\n        if (slider === 0) {\r\n          this.$refs.dot0.style['left'] = `calc('${processPosition} - 8px)`\r\n        } else {\r\n          this.$refs.dot1.style['left'] = `calc('${processPosition} - 8px)`\r\n        }\r\n      } else {\r\n        const val = ((this.value - this.min) / (this.max - this.min)) * 100\r\n\r\n        this.$refs.process.style.width = `${val}%`\r\n        this.$refs.dot.style['left'] = `calc('${val} - 8px)`\r\n      }\r\n    },\r\n    normalizeValue (value) {\r\n      const currentRest = value % this.step\r\n      if ((currentRest / this.step) >= 0.5) {\r\n        value = value + (this.step - currentRest)\r\n      } else {\r\n        value = value - currentRest\r\n      }\r\n      return value\r\n    },\r\n    limitValue (val) {\r\n      const inRange = (v) => {\r\n        if (v < this.min) {\r\n          return this.min\r\n        } else if (v > this.max) {\r\n          return this.max\r\n        }\r\n        return v\r\n      }\r\n\r\n      if (this.isRange) {\r\n        if (val[0] >= val[1] && this.currentSlider === 0) {\r\n          return [val[1], val[1]]\r\n        }\r\n        if (val[0] >= val[1] && this.currentSlider === 1) {\r\n          return [val[0], val[0]]\r\n        }\r\n        return val.map((v) => inRange(v))\r\n      } else {\r\n        return inRange(val)\r\n      }\r\n    },\r\n    isDiff (a, b) {\r\n      if (Object.prototype.toString.call(a) !== Object.prototype.toString.call(b)) {\r\n        return true\r\n      } else if (Array.isArray(a) && a.length === b.length) {\r\n        return a.some((v, i) => v !== b[i])\r\n      }\r\n      return a !== b\r\n    },\r\n  },\r\n  mounted () {\r\n    this.$nextTick(() => {\r\n      if (validateSlider(this.value, this.step, this.min, this.max)) {\r\n        this.getStaticData()\r\n        this.bindEvents()\r\n      }\r\n    })\r\n  },\r\n  beforeDestroy () {\r\n    this.unbindEvents()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n@import \"../../vuestic-sass/resources/resources\";\r\n\r\n.va-slider {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  &--disabled {\r\n    @include va-disabled;\r\n\r\n    .va-slider__container__handler {\r\n\r\n      &:hover {\r\n        cursor: default;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__input-wrapper {\r\n    flex-basis: 8.33333%;\r\n    flex-grow: 0;\r\n    max-width: 8.33333%;\r\n    margin-right: 1rem;\r\n    min-width: 2.5rem;\r\n\r\n    position: relative;\r\n    display: flex;\r\n\r\n    &:last-of-type {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n\r\n  &__label {\r\n    margin-right: 1rem;\r\n    user-select: none;\r\n    font-size: .625rem;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.2;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  &__inverse-label {\r\n    user-select: none;\r\n    font-size: .625rem;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.2;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    margin-left: 1rem;\r\n  }\r\n\r\n  &__container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    &__track, &__track--active {\r\n      position: absolute;\r\n      height: 0.5rem;\r\n      border-radius: 0.25rem;\r\n    }\r\n\r\n    &__track {\r\n      width: 100%;\r\n    }\r\n\r\n    &__mark {\r\n      position: absolute;\r\n      width: 0.125rem;\r\n      height: 0.75rem;\r\n    }\r\n\r\n    &__handler {\r\n      position: absolute;\r\n      width: 1.25rem;\r\n      height: 1.25rem;\r\n      background: $white;\r\n      border: 0.375rem solid;\r\n      border-radius: 50%;\r\n      outline: none !important;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n\r\n      &--on-keyboard-focus {\r\n        @at-root .va-slider__container__handler#{&}:before {\r\n          content: '';\r\n          transform: translate(-0.625rem, -0.625rem);\r\n          background-color: black !important;\r\n          display: block;\r\n          width: 1.75rem;\r\n          height: 1.75rem;\r\n          position: absolute;\r\n          border-radius: 50%;\r\n          opacity: 0.1;\r\n          pointer-events: none;\r\n        }\r\n      }\r\n\r\n      &-value {\r\n        position: absolute;\r\n        top: -8px;\r\n        left: 50%;\r\n        transform: translate(-50%, -100%);\r\n        user-select: none;\r\n        font-size: .625rem;\r\n        letter-spacing: 0.6px;\r\n        line-height: 1.2;\r\n        font-weight: bold;\r\n        text-transform: uppercase;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}