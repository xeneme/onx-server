{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vuestic-ui/src/components/vuestic-components/va-popup/popup/VaPopup.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vuestic-ui/src/components/vuestic-components/va-popup/popup/VaPopup.vue","mtime":1598034796000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICIuLi8uLi8uLi92dWVzdGljLXNhc3MvcmVzb3VyY2VzL3Jlc291cmNlcyI7DQoNCi5xLXBvcG92ZXIgew0KICBwb3NpdGlvbjogZml4ZWQ7DQogIGJveC1zaGFkb3c6IDAgNHB4IDkuNnB4IDAuNHB4IHJnYmEoNzQsIDIyNywgMTM1LCAuNSk7DQogIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgYmFja2dyb3VuZDogd2hpdGU7DQogIHotaW5kZXg6IDgwMDA7DQogIG92ZXJmbG93LXk6IGF1dG87DQogIG92ZXJmbG93LXg6IGhpZGRlbjsNCiAgbWF4LXdpZHRoOiAxMDB2dzsNCiAgb3V0bGluZTogMDsNCg0KICA+IC5xLWxpc3Q6b25seS1jaGlsZCB7DQogICAgYm9yZGVyOiBub25lOw0KICB9DQoNCiAgJl9fY29udGFpbmVyIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBvdmVyZmxvdzogYXV0bzsNCiAgfQ0KfQ0KDQpib2R5IGRpdiAucS1wb3BvdmVyIHsNCiAgZGlzcGxheTogbm9uZTsNCn0NCg=="},{"version":3,"sources":["VaPopup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"VaPopup.vue","sourceRoot":"node_modules/vuestic-ui/src/components/vuestic-components/va-popup/popup","sourcesContent":["<script>\r\nimport {\r\n  offsetValidator,\r\n  parsePosition,\r\n  positionValidator,\r\n  setPosition,\r\n} from '../utils/popup.js'\r\nimport frameDebounce from '../utils/frame-debounce.js'\r\nimport { getScrollTarget } from '../utils/scroll.js'\r\nimport EscapeKey from '../utils/escape-key.js'\r\nimport ModelToggleMixin from '../mixins/model-toggle.js'\r\nimport { listenOpts, position as eventPosition } from '../utils/event.js'\r\nimport CanRenderMixinMixin from '../mixins/can-render.js'\r\n\r\n// HACK Should not be in vuestic 2.0.\r\n\r\n// @depecated\r\nexport default {\r\n  name: 'va-popup',\r\n  mixins: [ModelToggleMixin, CanRenderMixinMixin],\r\n  props: {\r\n    anchor: {\r\n      type: String,\r\n      validator: positionValidator,\r\n    },\r\n    self: {\r\n      type: String,\r\n      validator: positionValidator,\r\n    },\r\n    fit: Boolean,\r\n    cover: Boolean,\r\n    persistent: Boolean,\r\n    keepOnScreen: Boolean,\r\n    maxHeight: String,\r\n    touchPosition: Boolean,\r\n    anchorClick: {\r\n      /*\r\n        for handling anchor outside of Popover\r\n        example: context menu component\r\n      */\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    offset: {\r\n      type: Array,\r\n      validator: offsetValidator,\r\n    },\r\n    noFocus: Boolean,\r\n    noRefocus: Boolean,\r\n    disable: Boolean,\r\n  },\r\n  watch: {\r\n    $route () {\r\n      this.hide()\r\n    },\r\n  },\r\n  computed: {\r\n    horizSide () {\r\n      return 'right'\r\n      // return this.$q.i18n.rtl ? 'right' : 'left'\r\n    },\r\n    anchorOrigin () {\r\n      return parsePosition(\r\n        this.cover\r\n          ? `top ${this.horizSide}`\r\n          : this.anchor || `bottom ${this.horizSide}`,\r\n      )\r\n    },\r\n    selfOrigin () {\r\n      return parsePosition(this.self || `top ${this.horizSide}`)\r\n    },\r\n  },\r\n  render (h) {\r\n    if (!this.canRender) {\r\n      return\r\n    }\r\n\r\n    return h('div', {\r\n      staticClass: 'q-popover scroll',\r\n      ref: 'content',\r\n      attrs: { tabindex: -1 },\r\n      on: {\r\n        click (e) {\r\n          e.stopPropagation()\r\n        },\r\n      },\r\n    }, this.$slots.default)\r\n  },\r\n  mounted () {\r\n    this.__updatePosition = frameDebounce((_, event, animate) => this.reposition(event, animate))\r\n    this.$nextTick(() => {\r\n      this.anchorEl = this.$el.parentNode\r\n      this.anchorEl.removeChild(this.$el)\r\n\r\n      if (\r\n        this.anchorEl.classList.contains('q-btn-inner') ||\r\n        this.anchorEl.classList.contains('q-if-inner') ||\r\n        this.anchorEl.classList.contains('no-pointer-events')\r\n      ) {\r\n        this.anchorEl = this.anchorEl.parentNode\r\n      }\r\n\r\n      if (this.anchorClick) {\r\n        this.anchorEl.classList.add('cursor-pointer')\r\n        this.anchorEl.addEventListener('click', this.toggle)\r\n        this.anchorEl.addEventListener('keyup', this.__toggleKey)\r\n      }\r\n    })\r\n\r\n    this.value && this.show()\r\n  },\r\n  beforeDestroy () {\r\n    this.showing && this.__cleanup()\r\n    if (this.anchorClick && this.anchorEl) {\r\n      this.anchorEl.removeEventListener('click', this.toggle)\r\n      this.anchorEl.removeEventListener('keyup', this.__toggleKey)\r\n    }\r\n  },\r\n  methods: {\r\n    __show (evt) {\r\n      if (!this.noRefocus) {\r\n        this.__refocusTarget = (this.anchorClick && this.anchorEl) || document.activeElement\r\n      }\r\n      document.body.appendChild(this.$el)\r\n      EscapeKey.register(() => {\r\n        this.$emit('escape-key')\r\n        this.hide()\r\n      })\r\n      this.scrollTarget = getScrollTarget(this.anchorEl)\r\n      this.scrollTarget.addEventListener('scroll', this.__updatePosition, listenOpts.passive)\r\n      if (this.scrollTarget !== window) {\r\n        window.addEventListener('scroll', this.__updatePosition, listenOpts.passive)\r\n      }\r\n      window.addEventListener('resize', this.__updatePosition, listenOpts.passive)\r\n      this.__updatePosition(0, evt, true)\r\n\r\n      clearTimeout(this.timer)\r\n      if (!this.noFocus && this.$refs.content) {\r\n        this.$refs.content.focus()\r\n      }\r\n      this.timer = setTimeout(() => {\r\n        document.body.addEventListener('mousedown', this.__bodyHide, true)\r\n        document.body.addEventListener('touchstart', this.__bodyHide, true)\r\n        this.showPromise && this.showPromiseResolve()\r\n      }, 0)\r\n    },\r\n    __toggleKey (evt) {\r\n      if (evt.keyCode === 13) {\r\n        this.toggle(evt)\r\n      }\r\n    },\r\n    __bodyHide (evt) {\r\n      if (\r\n        this.persistent || (\r\n          evt && evt.target &&\r\n          (this.$el.contains(evt.target) || this.anchorEl.contains(evt.target))\r\n        )\r\n      ) {\r\n        return\r\n      }\r\n\r\n      this.hide(evt)\r\n    },\r\n    __hide () {\r\n      this.__cleanup()\r\n      this.hidePromise && this.hidePromiseResolve()\r\n      if (!this.noRefocus && this.__refocusTarget) {\r\n        this.__refocusTarget.focus()\r\n        !this.__refocusTarget.classList.contains('q-if') && this.__refocusTarget.blur()\r\n      }\r\n    },\r\n    __cleanup () {\r\n      clearTimeout(this.timer)\r\n\r\n      document.body.removeEventListener('mousedown', this.__bodyHide, true)\r\n      document.body.removeEventListener('touchstart', this.__bodyHide, true)\r\n      this.scrollTarget.removeEventListener('scroll', this.__updatePosition, listenOpts.passive)\r\n      if (this.scrollTarget !== window) {\r\n        window.removeEventListener('scroll', this.__updatePosition, listenOpts.passive)\r\n      }\r\n      window.removeEventListener('resize', this.__updatePosition, listenOpts.passive)\r\n      EscapeKey.pop()\r\n\r\n      this.$el.remove()\r\n    },\r\n    reposition (event, animate) {\r\n      const { top, bottom, left, right } = this.anchorEl.getBoundingClientRect()\r\n\r\n      if (\r\n        !this.keepOnScreen &&\r\n        (bottom < 0 || top > window.innerHeight || right < 0 || left > window.innerWidth)\r\n      ) {\r\n        return this.hide()\r\n      }\r\n\r\n      if (this.fit || this.cover) {\r\n        const style = window.getComputedStyle(this.anchorEl)\r\n        this.$el.style.minWidth = style.getPropertyValue('width')\r\n        if (this.cover) {\r\n          this.$el.style.minHeight = style.getPropertyValue('height')\r\n        }\r\n      }\r\n\r\n      if (animate) {\r\n        if (this.touchPosition) {\r\n          const { top: eventTop, left: eventLeft } = eventPosition(event)\r\n          this.touchOffset = { left: eventLeft - left, top: eventTop - top }\r\n        } else {\r\n          delete this.touchOffset\r\n        }\r\n      }\r\n\r\n      setPosition({\r\n        event,\r\n        animate,\r\n        el: this.$el,\r\n        offset: this.offset,\r\n        anchorEl: this.anchorEl,\r\n        anchorOrigin: this.anchorOrigin,\r\n        selfOrigin: this.selfOrigin,\r\n        maxHeight: this.maxHeight,\r\n        anchorClick: this.anchorClick,\r\n        touchPosition: this.touchPosition,\r\n        touchOffset: this.touchOffset,\r\n        cover: this.cover,\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"../../../vuestic-sass/resources/resources\";\r\n\r\n.q-popover {\r\n  position: fixed;\r\n  box-shadow: 0 4px 9.6px 0.4px rgba(74, 227, 135, .5);\r\n  border-radius: 3px;\r\n  background: white;\r\n  z-index: 8000;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  max-width: 100vw;\r\n  outline: 0;\r\n\r\n  > .q-list:only-child {\r\n    border: none;\r\n  }\r\n\r\n  &__container {\r\n    width: 100%;\r\n    overflow: auto;\r\n  }\r\n}\r\n\r\nbody div .q-popover {\r\n  display: none;\r\n}\r\n</style>\r\n"]}]}