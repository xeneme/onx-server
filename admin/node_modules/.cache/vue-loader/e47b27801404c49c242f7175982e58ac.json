{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/dashboard/dashboard-profile-tabs/ProfileTransactions.vue?vue&type=style&index=0&id=993c35d6&lang=scss&scoped=true&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/dashboard/dashboard-profile-tabs/ProfileTransactions.vue","mtime":1600594818606},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5uby1kYXRhIHsNCiAgbWluLWhlaWdodDogNjVweDsNCiAgcGFkZGluZy10b3A6IDAuNXJlbTsNCiAgZm9udC1zaXplOiAxLjJyZW07DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnRhYiB7DQogICZfX2NyZWF0ZSB7DQogICAganVzdGlmeS1pdGVtczogY2VudGVyOw0KICB9DQoNCiAgJl9fdHJhbnNhY3Rpb25zIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47DQogICAgd2lkdGg6IGNhbGMoMTAwJSArIDQwcHgpOw0KICAgIHBhZGRpbmc6IDAgMjBweDsNCiAgICBtYXJnaW46IDAgLTIwcHg7DQoNCiAgICAmX19pdGVtIHsNCiAgICAgIGRpc3BsYXk6IGdyaWQ7DQogICAgICB3aWR0aDogMTAwJTsNCg0KICAgICAgZGl2IHsNCiAgICAgICAgZGlzcGxheTogZ3JpZDsNCiAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyOw0KICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjsNCiAgICAgICAgZm9udC1zaXplOiAwLjhyZW07DQogICAgICB9DQogICAgfQ0KDQogICAgJl9faXRlbTpudGgtY2hpbGQob2RkKSB7DQogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGQ0ZDRkMTE7DQogICAgfQ0KICB9DQoNCiAgJl9fcGFnaW5hdGlvbl93cmFwIHsNCiAgICBkaXNwbGF5OiBncmlkOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGhlaWdodDogMnJlbTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["ProfileTransactions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyVA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ProfileTransactions.vue","sourceRoot":"src/components/dashboard/dashboard-profile-tabs","sourcesContent":["<template>\r\n  <va-inner-loading :loading=\"loading || updating\">\r\n    <div class=\"tab\" :style=\"computedStyle\">\r\n      <div class=\"tab__create flex\">\r\n        <va-accordion>\r\n          <va-collapse\r\n            isOpenDefault\r\n            :updateHeight=\"\r\n              selectedAction || currentDateToggle || collapseUpdateToggle\r\n            \"\r\n          >\r\n            <span slot=\"header\">\r\n              {{ $t('dashboard.profile.tabs.transactions.create') }}\r\n            </span>\r\n            <div slot=\"body\">\r\n              <va-select\r\n                :options=\"['BTC', 'LTC', 'ETH']\"\r\n                v-model=\"selectedCurrency\"\r\n                class=\"ma-0\"\r\n                :label=\"$t('dashboard.profile.tabs.transactions.currency')\"\r\n                no-clear\r\n              />\r\n              <va-input\r\n                class=\"mb-3\"\r\n                :value=\"wallets[selectedCurrency]\"\r\n                :label=\"$t('dashboard.profile.tabs.transactions.balance')\"\r\n                disabled\r\n              ></va-input>\r\n              <va-select\r\n                class=\"ma-0\"\r\n                :options=\"['Transfer', 'Deposit', 'Withdrawal']\"\r\n                v-model=\"selectedAction\"\r\n                :label=\"$t('dashboard.profile.tabs.transactions.action')\"\r\n                no-clear\r\n              />\r\n              <va-select\r\n                class=\"ma-0\"\r\n                v-if=\"selectedAction === 'Transfer'\"\r\n                :options=\"['Sent', 'Received']\"\r\n                v-model=\"selectedDirection\"\r\n                :label=\"$t('dashboard.profile.tabs.transactions.direction')\"\r\n                no-clear\r\n              />\r\n\r\n              <va-input\r\n                class=\"mb-3\"\r\n                label=\"Amount\"\r\n                v-model=\"coinAmount\"\r\n              ></va-input>\r\n              <va-checkbox\r\n                class=\"mb-3\"\r\n                v-model=\"currentDateToggle\"\r\n                v-if=\"selectedAction === 'Transfer'\"\r\n                :label=\"$t('dashboard.profile.tabs.transactions.currentTime')\"\r\n              />\r\n              <va-date-picker\r\n                class=\"mb-3\"\r\n                v-if=\"!currentDateToggle && selectedAction === 'Transfer'\"\r\n                :label=\"$t('dashboard.profile.tabs.transactions.customDate')\"\r\n                v-model=\"customDate\"\r\n                :config=\"{ enableTime: true }\"\r\n              />\r\n              <va-button\r\n                class=\"mt-2 justify--center\"\r\n                small\r\n                color=\"info\"\r\n                @click=\"createTransaction\"\r\n              >\r\n                {{ $t('dashboard.profile.tabs.transactions.submit') }}\r\n              </va-button>\r\n            </div>\r\n          </va-collapse>\r\n          <va-collapse :updateHeight=\"selectedAction || collapseUpdateToggle\">\r\n            <span slot=\"header\">\r\n              {{ $t('dashboard.profile.tabs.transactions.list') }}\r\n            </span>\r\n            <div slot=\"body\">\r\n              <div class=\"tab__transactions pt-3 pb-2\">\r\n                <div\r\n                  class=\"tab__transactions__item\"\r\n                  :style=\"{\r\n                    gridTemplateColumns: {\r\n                      Transfer: '1.5fr 1fr 1fr 1fr 1fr 0.1fr',\r\n                      Deposit: '1.5fr 1fr 1fr 0.1fr',\r\n                    }[selectedAction],\r\n                  }\"\r\n                  v-for=\"(transaction, i) in transactions\"\r\n                  :key=\"i\"\r\n                >\r\n                  <div class=\"tab__transactions__item-date\">\r\n                    {{ transaction.date }}\r\n                  </div>\r\n                  <div class=\"tab__transactions__item-amount\">\r\n                    {{ transaction.amount }}\r\n                  </div>\r\n                  <div\r\n                    v-if=\"transaction.type\"\r\n                    class=\"tab__transactions__item-type\"\r\n                  >\r\n                    {{ transaction.type }}\r\n                  </div>\r\n                  <div\r\n                    v-if=\"transaction.fake\"\r\n                    class=\"tab__transactions__item-real\"\r\n                  >\r\n                    {{ transaction.fake }}\r\n                  </div>\r\n                  <div class=\"tab__transactions__item-status\">\r\n                    <va-badge\r\n                      outline\r\n                      :color=\"getStatusColor(transaction.status)\"\r\n                    >\r\n                      {{ transaction.status }}\r\n                    </va-badge>\r\n                  </div>\r\n                  <va-button\r\n                    class=\"justify--end\"\r\n                    small\r\n                    flat\r\n                    color=\"danger\"\r\n                    @click=\"deleteTransaction(transaction.id)\"\r\n                  >\r\n                    <va-icon name=\"fa fa-trash\" />\r\n                  </va-button>\r\n                </div>\r\n              </div>\r\n              <div class=\"tab__pagination_wrap\" v-if=\"pages > 1\">\r\n                <va-pagination\r\n                  v-model=\"activePage\"\r\n                  :pages=\"pages\"\r\n                  visiblePages=\"5\"\r\n                  small\r\n                ></va-pagination>\r\n              </div>\r\n            </div>\r\n          </va-collapse>\r\n        </va-accordion>\r\n      </div>\r\n    </div>\r\n  </va-inner-loading>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  DeleteTransaction,\r\n  CreateTransaction,\r\n  DeleteDeposit,\r\n  RequestDeposit,\r\n} from '../../../services/Transactions'\r\n\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'profile-transactions-tab',\r\n  inject: ['user', 'accordion'],\r\n  props: ['loading'],\r\n  data: () => ({\r\n    selectedCurrency: 'BTC',\r\n    selectedAction: 'Transfer',\r\n    selectedDirection: 'Received',\r\n    currentDateToggle: true,\r\n    customDate: '2018-05-08 14:10',\r\n    coinAmount: 0.01,\r\n    updating: false,\r\n    activePage: 1,\r\n    collapseUpdateToggle: false,\r\n  }),\r\n  watch: {\r\n    transactions: 'updateCollapseHeight',\r\n    currentDateToggle(v) {\r\n      this.accordion.onChildChange(\r\n        this.$el.querySelector('.tab__pagination_wrap'),\r\n        true\r\n      )\r\n    },\r\n  },\r\n  computed: {\r\n    computedStyle() {\r\n      return {\r\n        color: this.$themes.brightForeground,\r\n        opacity: this.updating || this.loading ? 0.2 : 1,\r\n      }\r\n    },\r\n    wallets() {\r\n      return {\r\n        BTC: this.user.wallets.bitcoin.balance,\r\n        LTC: this.user.wallets.litecoin.balance,\r\n        ETH: this.user.wallets.ethereum.balance,\r\n      }\r\n    },\r\n    pages() {\r\n      return _.chunk(\r\n        this.user.transactions.filter(t => t.name === this.selectedAction),\r\n        6\r\n      ).length\r\n    },\r\n    transactions() {\r\n      let result = _.chunk(\r\n        this.user.transactions\r\n          .sort((ta, tb) => (ta.at > tb.at ? -1 : ta.at < tb.at ? 1 : 0))\r\n          .filter(t => t.name === this.selectedAction),\r\n        6\r\n      )\r\n\r\n      return result.length\r\n        ? result[this.activePage - 1].map(t => {\r\n            let locale = this.$time.pacificToLocale(t.at)\r\n            let formated = moment(locale).format('YYYY-MM-DD H:mm')\r\n\r\n            if (t.name === 'Transfer') {\r\n              return {\r\n                id: t.id,\r\n                date: formated,\r\n                type: t.type,\r\n                fake: t.fake ? 'fake' : 'real',\r\n                status: t.status,\r\n                amount:\r\n                  t.amount +\r\n                  ' ' +\r\n                  { Ethereum: 'ETH', Bitcoin: 'BTC', Litecoin: 'LTC' }[\r\n                    t.currency\r\n                  ],\r\n              }\r\n            } else if (t.name === 'Deposit') {\r\n              return {\r\n                id: t.id,\r\n                date: formated,\r\n                status: t.status,\r\n                amount: t.amount + ' ' + t.network,\r\n              }\r\n            }\r\n          })\r\n        : []\r\n    },\r\n  },\r\n  methods: {\r\n    updateCollapseHeight() {\r\n      this.collapseUpdateToggle = !this.collapseUpdateToggle\r\n    },\r\n    netToCurrency: net =>\r\n      ({\r\n        BTC: 'bitcoin',\r\n        LTC: 'litecoin',\r\n        ETH: 'ethereum',\r\n      }[net]),\r\n    deleteTransaction(id) {\r\n      this.updating = true\r\n\r\n      var pending = {\r\n        Transfer: DeleteTransaction(id, this.user.id),\r\n        Deposit: DeleteDeposit(id, this.user.id),\r\n      }[this.selectedAction]\r\n\r\n      pending\r\n        .then(({ data: transaction }) => {\r\n          this.updating = false\r\n          this.$root.$emit('remove-transaction', transaction)\r\n          this.showToast('The transaction deleted', {\r\n            icon: 'fa-check',\r\n            position: 'bottom-center',\r\n            duration: 4000,\r\n            type: 'success',\r\n          })\r\n        })\r\n        .catch(err => {\r\n          this.updating = false\r\n        })\r\n    },\r\n    netToCurrency: net =>\r\n      ({\r\n        BTC: 'bitcoin',\r\n        LTC: 'litecoin',\r\n        ETH: 'ethereum',\r\n      }[net]),\r\n    createTransaction() {\r\n      this.updating = true\r\n\r\n      var pending = {\r\n        Transfer: CreateTransaction({\r\n          user: this.user.id,\r\n          direction: this.selectedDirection,\r\n          action: this.selectedAction,\r\n          amount: +this.coinAmount,\r\n          net: this.selectedCurrency,\r\n          date: !this.currentDateToggle\r\n            ? this.customDate\r\n            : +moment(\r\n                moment()\r\n                  .utc()\r\n                  .format('YYYY-MM-DD H:mm')\r\n              ),\r\n        }),\r\n        Deposit: RequestDeposit({\r\n          amount: +this.coinAmount,\r\n          currency: {\r\n            BTC: 'Bitcoin',\r\n            LTC: 'Litecoin',\r\n            ETH: 'Ethereum',\r\n          }[this.selectedCurrency],\r\n        }),\r\n      }[this.selectedAction]\r\n\r\n      pending\r\n        .then(({ data: transaction }) => {\r\n          this.updating = false\r\n\r\n          this.$root.$emit('add-transaction', transaction.deposit || transaction)\r\n\r\n          this.showToast('The transaction was successfully emited!', {\r\n            icon: 'fa-check',\r\n            position: 'bottom-center',\r\n            duration: 4000,\r\n            type: 'success',\r\n          })\r\n        })\r\n        .catch(err => {\r\n          this.updating = false\r\n\r\n          if (err.response) {\r\n            this.showToast(err.response.data.message, {\r\n              icon: 'fa-times',\r\n              position: 'bottom-center',\r\n              duration: 4000,\r\n              type: 'primary',\r\n            })\r\n          } else {\r\n            console.log(err)\r\n          }\r\n        })\r\n    },\r\n    getStatusColor(status) {\r\n      return {\r\n        processing: 'warning',\r\n        'await approval': 'warning',\r\n        failed: 'danger',\r\n        success: 'success',\r\n      }[status]\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.no-data {\r\n  min-height: 65px;\r\n  padding-top: 0.5rem;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n}\r\n\r\n.tab {\r\n  &__create {\r\n    justify-items: center;\r\n  }\r\n\r\n  &__transactions {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: calc(100% + 40px);\r\n    padding: 0 20px;\r\n    margin: 0 -20px;\r\n\r\n    &__item {\r\n      display: grid;\r\n      width: 100%;\r\n\r\n      div {\r\n        display: grid;\r\n        align-self: center;\r\n        justify-self: center;\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n\r\n    &__item:nth-child(odd) {\r\n      background-color: #4d4d4d11;\r\n    }\r\n  }\r\n\r\n  &__pagination_wrap {\r\n    display: grid;\r\n    justify-content: center;\r\n    height: 2rem;\r\n  }\r\n}\r\n</style>\r\n"]}]}