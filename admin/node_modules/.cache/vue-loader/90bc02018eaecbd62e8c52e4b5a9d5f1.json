{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/admin/app-sidebar/components/TransitionExpand.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/admin/app-sidebar/components/TransitionExpand.vue","mtime":1594635175197},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmV4cGFuZC1lbnRlci1hY3RpdmUsCi5leHBhbmQtbGVhdmUtYWN0aXZlIHsKICB0cmFuc2l0aW9uOiBoZWlnaHQgMC4zNzdzIGVhc2U7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmV4cGFuZC1lbnRlciwKLmV4cGFuZC1sZWF2ZS10byB7CiAgaGVpZ2h0OiAwOwp9Cg=="},{"version":3,"sources":["TransitionExpand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TransitionExpand.vue","sourceRoot":"src/components/admin/app-sidebar/components","sourcesContent":["<script>\n/* adopted from https://github.com/maoberlehner/transition-to-height-auto-with-vue */\nexport default {\n  name: 'TransitionExpand',\n  functional: true,\n  render (createElement, context) {\n    const data = {\n      props: {\n        name: 'expand',\n      },\n      on: {\n        afterEnter (element) {\n          // eslint-disable-next-line no-param-reassign\n          element.style.height = 'auto'\n        },\n        enter (element) {\n          const { width } = getComputedStyle(element)\n\n          /* eslint-disable no-param-reassign */\n          element.style.width = width\n          element.style.position = 'absolute'\n          element.style.visibility = 'hidden'\n          element.style.height = 'auto'\n          /* eslint-enable */\n\n          const { height } = getComputedStyle(element)\n\n          /* eslint-disable no-param-reassign */\n          element.style.width = null\n          element.style.position = null\n          element.style.visibility = null\n          element.style.height = 0\n          /* eslint-enable */\n\n          // Force repaint to make sure the\n          // animation is triggered correctly.\n          // eslint-disable-next-line no-unused-expressions\n          getComputedStyle(element).height\n\n          setTimeout(() => {\n            // eslint-disable-next-line no-param-reassign\n            element.style.height = height\n          })\n        },\n        leave (element) {\n          const { height } = getComputedStyle(element)\n\n          // eslint-disable-next-line no-param-reassign\n          element.style.height = height\n\n          // Force repaint to make sure the\n          // animation is triggered correctly.\n          // eslint-disable-next-line no-unused-expressions\n          getComputedStyle(element).height\n\n          setTimeout(() => {\n            // eslint-disable-next-line no-param-reassign\n            element.style.height = 0\n          })\n        },\n      },\n    }\n\n    return createElement('transition', data, context.children)\n  },\n}\n</script>\n\n<style scoped>\n  * {\n    will-change: height;\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    perspective: 1000px;\n  }\n</style>\n\n<style>\n  .expand-enter-active,\n  .expand-leave-active {\n    transition: height 0.377s ease;\n    overflow: hidden;\n  }\n\n  .expand-enter,\n  .expand-leave-to {\n    height: 0;\n  }\n</style>\n"]}]}