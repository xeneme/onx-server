{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/ui/collapse/Collapses.vue?vue&type=template&id=cbb18342&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/ui/collapse/Collapses.vue","mtime":1594635176047},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}