{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/dashboard/DashboardSupport.vue?vue&type=style&index=0&id=7387f7e6&lang=scss&scoped=true&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/dashboard/DashboardSupport.vue","mtime":1603529868026},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRhYiB7DQogIGhlaWdodDogMTAwJTsNCn0NCg0KLm5vLWRhdGEgew0KICBtaW4taGVpZ2h0OiA2NXB4Ow0KICBwYWRkaW5nLXRvcDogMC41cmVtOw0KICBmb250LXNpemU6IDEuMnJlbTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KDQoudXNlci10aXRsZSB7DQogIGZvbnQtc2l6ZTogMC44cmVtOw0KICBsZXR0ZXItc3BhY2luZzogMC4wNnJlbTsNCiAgZm9udC13ZWlnaHQ6IDUwMDsNCiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCn0NCg=="},{"version":3,"sources":["DashboardSupport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DashboardSupport.vue","sourceRoot":"src/components/dashboard","sourcesContent":["<template>\r\n  <va-card\r\n    :color=\"$themes.background\"\r\n    :style=\"computedWidgetStyle\"\r\n    :title=\"$t('dashboard.support.title')\"\r\n  >\r\n    <h6\r\n      slot=\"actions\"\r\n      class=\"user-title\"\r\n      :style=\"{ color: $themes.foreground }\"\r\n    >\r\n      <va-icon name=\"fa fa-user-circle\" class=\"mr-2\"></va-icon>\r\n      {{ user.name }}\r\n    </h6>\r\n    <va-inner-loading :loading=\"!itsAdmin && loading\">\r\n      <div v-if=\"!itsAdmin\" class=\"tab\" :style=\"computedStyle\">\r\n        <chat :value=\"user.supportMessages\" @input=\"sendMessage\" />\r\n      </div>\r\n      <VaCardNoData\r\n        v-else\r\n        :loading=\"loading\"\r\n        LT=\"Fetching support messages...\"\r\n        ET=\"Can't talk to this person\"\r\n      />\r\n    </va-inner-loading>\r\n  </va-card>\r\n</template>\r\n\r\n<script>\r\nimport Chat from '../ui/chat/Chat'\r\nimport VaCardNoData from './components/VaCardNoData'\r\nimport * as Support from '../../services/Support'\r\n\r\nexport default {\r\n  name: 'dashboard-support',\r\n  components: { Chat, VaCardNoData },\r\n  props: {\r\n    loading: Boolean,\r\n  },\r\n  data: () => ({\r\n    user: {\r\n      id: '',\r\n      name: '',\r\n      supportMessages: [],\r\n    },\r\n    loading: false,\r\n    itsAdmin: true,\r\n  }),\r\n  methods: {\r\n    startFetchingMessages() {\r\n      Support.fetchMessages(this.user.id)\r\n        .then(({ data }) => {\r\n          this.user.supportMessages = data.messages\r\n          setTimeout(this.startFetchingMessages, 2000)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    },\r\n    sendMessage(message) {\r\n      let i = this.user.supportMessages.length\r\n\r\n      this.user.supportMessages.push(message)\r\n\r\n      Support.sendMessage(this.user.id, message.text).then(({ data }) => {\r\n        this.user.supportMessages[i] = data.message\r\n        this.user.supportMessages = this.user.supportMessages.slice()\r\n      })\r\n    },\r\n    gettingDialogue() {\r\n      this.loading = true\r\n    },\r\n    openDialogue({ user, messages }) {\r\n      this.unread = 0\r\n      this.loading = false\r\n      this.itsAdmin = user.role != 'user'\r\n      this.user.id = user.id\r\n      this.user.name = user.name\r\n\r\n      if (!this.itsAdmin) {\r\n        this.user.supportMessages = messages\r\n        setTimeout(this.startFetchingMessages, 2000)\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    computedStyle() {\r\n      return {\r\n        color: this.$themes.brightForeground,\r\n        opacity: this.loading ? 0.2 : 1,\r\n      }\r\n    },\r\n    computedWidgetStyle() {\r\n      return {\r\n        color: this.$themes.brightForeground,\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    this.$root.$on('open-dialogue', this.openDialogue)\r\n    this.$root.$on('getting-dialogue', this.gettingDialogue)\r\n  },\r\n  beforeDestroy() {\r\n    this.$root.$off('open-dialogue', this.openDialogue)\r\n    this.$root.$off('getting-dialogue', this.gettingDialogue)\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tab {\r\n  height: 100%;\r\n}\r\n\r\n.no-data {\r\n  min-height: 65px;\r\n  padding-top: 0.5rem;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n}\r\n\r\n.user-title {\r\n  font-size: 0.8rem;\r\n  letter-spacing: 0.06rem;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n}\r\n</style>\r\n"]}]}