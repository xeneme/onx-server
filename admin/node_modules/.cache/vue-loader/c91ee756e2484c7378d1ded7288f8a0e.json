{"remainingRequest":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/src/components/dashboard/dashboard-tabs/BillingAddressTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/src/components/dashboard/dashboard-tabs/BillingAddressTab.vue","mtime":1594635175387},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjb3VudHJpZXNMaXN0IGZyb20gJ0AvZGF0YS9Db3VudHJpZXNMaXN0JwppbXBvcnQgeyBnZXRMaW5lTWFwRGF0YSB9IGZyb20gJy4uLy4uLy4uL2RhdGEvbWFwcy9MaW5lTWFwRGF0YScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYmlsbGluZy1hZGRyZXNzLXRhYicsCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgbmFtZTogJ0pvaG4gU21pdGgnLAogICAgICAgIGVtYWlsOiAnc21pdGhAZ21haWwuY29tJywKICAgICAgICBhZGRyZXNzOiAnOTMgIEd1aWxkIFN0cmVldCcsCiAgICAgICAgY2l0eTogeyB0ZXh0OiAnTG9uZG9uJyB9LAogICAgICAgIGNvdW50cnk6ICdVbml0ZWQgS2luZ2RvbScsCiAgICAgICAgY29ubmVjdGlvbjogdHJ1ZSwKICAgICAgfSwKICAgICAgYWxsb3dlZENvdW50cmllc0xpc3Q6IFtdLAogICAgICBhbGxvd2VkQ2l0aWVzTGlzdDogW10sCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJ2Zvcm0uY291bnRyeScgKHZhbHVlKSB7CiAgICAgIHRoaXMuYWxsb3dlZENpdGllc0xpc3QgPSB2YWx1ZQogICAgICAgID8gdGhpcy5jaXRpZXNMaXN0LmZpbHRlcigoeyBjb3VudHJ5IH0pID0+IGNvdW50cnkgPT09IHZhbHVlKQogICAgICAgIDogWy4uLnRoaXMuY2l0aWVzTGlzdF0KICAgIH0sCiAgICAnZm9ybS5jaXR5JzogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyICh7IGNvdW50cnkgfSkgewogICAgICAgIHRoaXMuZm9ybS5jb3VudHJ5ID0gdGhpcy5jb3VudHJpZXNMaXN0LmZpbmQoaXRlbSA9PiBpdGVtID09PSBjb3VudHJ5KQogICAgICB9LAogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdCAoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ3N1Ym1pdCcsIHRoaXMuZm9ybSkKICAgIH0sCiAgfSwKICBjb21wdXRlZDogewogICAgY2l0aWVzTGlzdCAoKSB7CiAgICAgIHJldHVybiBnZXRMaW5lTWFwRGF0YSh0aGlzLiR0aGVtZXMpLmNpdGllcy5tYXAoKHsgdGl0bGUsIGNvdW50cnkgfSkgPT4gKHsgdGV4dDogdGl0bGUsIGNvdW50cnkgfSkpCiAgICB9LAogICAgY291bnRyaWVzTGlzdCAoKSB7CiAgICAgIHJldHVybiBjb3VudHJpZXNMaXN0LmZpbHRlcihpdGVtID0+IHRoaXMuY2l0aWVzTGlzdC5maWx0ZXIoKHsgY291bnRyeSB9KSA9PiBjb3VudHJ5ID09PSBpdGVtKS5sZW5ndGgpCiAgICB9LAogICAgY29tcHV0ZWRTdHlsZXNUaXRsZSAoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29sb3I6IHRoaXMuJHRoZW1lcy5kYXJrLAogICAgICB9CiAgICB9LAogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLmFsbG93ZWRDaXRpZXNMaXN0ID0gWy4uLnRoaXMuY2l0aWVzTGlzdF0KICB9LAp9Cg=="},{"version":3,"sources":["BillingAddressTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BillingAddressTab.vue","sourceRoot":"src/components/dashboard/dashboard-tabs","sourcesContent":["<template>\n  <div class=\"pt-2\">\n    <div class=\"row\">\n      <div class=\"flex xs12 md6\">\n        <div\n          class=\"title mb-3\"\n          :style=\"computedStylesTitle\"\n        >\n          {{$t('dashboard.tabs.billingAddress.personalInfo')}}\n        </div>\n        <va-input\n          :label=\"$t('dashboard.tabs.billingAddress.firstName')\"\n          v-model=\"form.name\"\n        />\n        <va-input\n          :label=\"$t('dashboard.tabs.billingAddress.email')\"\n          v-model=\"form.email\"\n        />\n        <va-input\n          :label=\"$t('dashboard.tabs.billingAddress.address')\"\n          v-model=\"form.address\"\n        />\n      </div>\n      <div class=\"flex xs12 md6\">\n        <div\n          class=\"title mb-3\"\n          :style=\"computedStylesTitle\"\n        >\n          {{$t('dashboard.tabs.billingAddress.companyInfo')}}\n        </div>\n        <va-select\n          :options=\"countriesList\"\n          :label=\"$t('dashboard.tabs.billingAddress.country')\"\n          v-model=\"form.country\"\n          searchable\n        />\n        <va-select\n          :label=\"$t('dashboard.tabs.billingAddress.city')\"\n          v-model=\"form.city\"\n          :options=\"allowedCitiesList\"\n          key-by=\"text\"\n        />\n        <va-checkbox\n          :label=\"$t('dashboard.tabs.billingAddress.infiniteConnections')\"\n          v-model=\"form.connection\"\n        />\n      </div>\n    </div>\n    <div class=\"row justify--center\">\n      <va-button @click=\"submit\">\n        {{$t('dashboard.tabs.billingAddress.addConnection')}}\n      </va-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport countriesList from '@/data/CountriesList'\nimport { getLineMapData } from '../../../data/maps/LineMapData'\n\nexport default {\n  name: 'billing-address-tab',\n  data () {\n    return {\n      form: {\n        name: 'John Smith',\n        email: 'smith@gmail.com',\n        address: '93  Guild Street',\n        city: { text: 'London' },\n        country: 'United Kingdom',\n        connection: true,\n      },\n      allowedCountriesList: [],\n      allowedCitiesList: [],\n    }\n  },\n  watch: {\n    'form.country' (value) {\n      this.allowedCitiesList = value\n        ? this.citiesList.filter(({ country }) => country === value)\n        : [...this.citiesList]\n    },\n    'form.city': {\n      deep: true,\n      handler ({ country }) {\n        this.form.country = this.countriesList.find(item => item === country)\n      },\n    },\n  },\n  methods: {\n    submit () {\n      this.$emit('submit', this.form)\n    },\n  },\n  computed: {\n    citiesList () {\n      return getLineMapData(this.$themes).cities.map(({ title, country }) => ({ text: title, country }))\n    },\n    countriesList () {\n      return countriesList.filter(item => this.citiesList.filter(({ country }) => country === item).length)\n    },\n    computedStylesTitle () {\n      return {\n        color: this.$themes.dark,\n      }\n    },\n  },\n  mounted () {\n    this.allowedCitiesList = [...this.citiesList]\n  },\n}\n</script>\n"]}]}