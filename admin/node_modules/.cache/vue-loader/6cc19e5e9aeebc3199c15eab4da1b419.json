{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/dashboard/DashboardProfile.vue?vue&type=style&index=0&id=2710f680&lang=scss&scoped=true&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/src/components/dashboard/DashboardProfile.vue","mtime":1604779159747},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wcm9maWxlX19uYW1lIHsNCiAgZm9udC1zaXplOiAxLjRyZW07DQogIG1hcmdpbi1ib3R0b206IDAuNXJlbTsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGRpc3BsYXk6IGZsZXg7DQoNCiAgJl9maXJzdCwNCiAgJl9sYXN0IHsNCiAgICBtYXJnaW46IDAgNXB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["DashboardProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DashboardProfile.vue","sourceRoot":"src/components/dashboard","sourcesContent":["<template>\r\n  <va-card\r\n    :color=\"computedWidgetColor\"\r\n    :style=\"computedStyle\"\r\n    :title=\"$t('dashboard.profile.title')\"\r\n  >\r\n    <va-button\r\n      @click=\"getMyProfile\"\r\n      class=\"mr-0\"\r\n      small\r\n      outline\r\n      slot=\"actions\"\r\n      color=\"info\"\r\n    >\r\n      {{ $t('dashboard.profile.myProfile') }}\r\n    </va-button>\r\n    <div class=\"profile__name\">\r\n      <va-icon name=\"fa fa-user-circle\" class=\"ml-2 mr-2\"></va-icon>\r\n      <div class=\"profile__name_first text--capitalize\">\r\n        {{ user.firstName || 'Loading...' }}\r\n      </div>\r\n      <div class=\"profile__name_last text--bold text--capitalize\">\r\n        {{ user.lastName }}\r\n      </div>\r\n    </div>\r\n    <va-tabs grow v-model=\"tabsState\" :style=\"computedTabsStyle\">\r\n      <va-tab v-for=\"(tab, i) in tabs\" :key=\"i\">\r\n        {{\r\n          $t(\r\n            'dashboard.profile.tabs.' +\r\n              tab.toLowerCase().replace('profile', '') +\r\n              '.title'\r\n          )\r\n        }}\r\n      </va-tab>\r\n    </va-tabs>\r\n    <component\r\n      :loading=\"loadingTabs.includes(tabs[tabsState])\"\r\n      :class=\"['', '', 'pb-4'][this.tabsState]\"\r\n      :is=\"tabs[tabsState]\"\r\n    />\r\n  </va-card>\r\n</template>\r\n\r\n<script>\r\nimport ProfileInfo from './dashboard-profile-tabs/ProfileInfo'\r\nimport ProfileTransactions from './dashboard-profile-tabs/ProfileTransactions'\r\nimport ProfileLog from './dashboard-profile-tabs/ProfileLog'\r\nimport ProfileActions from './dashboard-profile-tabs/ProfileActions'\r\nimport ProfileBind from './dashboard-profile-tabs/ProfileBind'\r\nimport { Me, UserById } from '../../services/Users'\r\n\r\nexport default {\r\n  name: 'DashboardProfile',\r\n  components: {\r\n    ProfileInfo,\r\n    ProfileTransactions,\r\n    ProfileLog,\r\n    ProfileActions,\r\n    ProfileBind,\r\n  },\r\n  provide() {\r\n    return {\r\n      handleSuccess(response) {\r\n        this.showToast(response.message, {\r\n          icon: 'fa-check',\r\n          position: 'bottom-center',\r\n          duration: 4000,\r\n          type: 'primary',\r\n        })\r\n      },\r\n      handleError(response) {\r\n        this.showToast(response.message, {\r\n          icon: 'fa-times',\r\n          position: 'bottom-center',\r\n          duration: 4000,\r\n          type: 'primary',\r\n        })\r\n      },\r\n    }\r\n  },\r\n  data: () => ({\r\n    user: {\r\n      id: '...',\r\n      role: '...',\r\n      username: '...',\r\n      transfers: '...',\r\n      telegramUsername: '...',\r\n      name: '',\r\n      email: '...',\r\n      bindedTo: '...',\r\n      actions: [],\r\n      transactions: [],\r\n      log: [],\r\n      wallets: {\r\n        bitcoin: {\r\n          balance: 0.1,\r\n        },\r\n        litecoin: {\r\n          balance: 0.00012,\r\n        },\r\n        ethereum: {\r\n          balance: 0,\r\n        },\r\n      },\r\n      me: false,\r\n    },\r\n    loadingTabs: [\r\n      'ProfileInfo',\r\n      'ProfileTransactions',\r\n      'ProfileLog',\r\n      'ProfileActions',\r\n    ],\r\n    tabsState: 0,\r\n    myRole: '',\r\n  }),\r\n  provide() {\r\n    return {\r\n      user: this.user,\r\n    }\r\n  },\r\n  computed: {\r\n    computedWidgetColor() {\r\n      return this.$themes.background\r\n    },\r\n    computedStyle() {\r\n      return {\r\n        color: this.$themes.brightForeground,\r\n      }\r\n    },\r\n    computedTabsStyle() {\r\n      return {\r\n        color: this.$themes.secondary,\r\n      }\r\n    },\r\n    tabs() {\r\n      let ts = ['ProfileInfo']\r\n\r\n      if (this.user.role === 'user') ts.push('ProfileTransactions')\r\n      ts.push('ProfileLog')\r\n      ts.push('ProfileActions')\r\n      if (this.myRole === 'manager') ts.push('ProfileBind')\r\n\r\n      this.tabsState =\r\n        this.tabsState > ts.length - 1 ? ts.length - 1 : this.tabsState\r\n\r\n      return ts\r\n    },\r\n  },\r\n  methods: {\r\n    getMyProfile() {\r\n      this.loading()\r\n\r\n      Me()\r\n        .then(({ data: user }) => {\r\n          this.myRole = user.role\r\n          this.updateOpenedProfile(user, true)\r\n          this.$root.$emit('open-dialogue', { user })\r\n        })\r\n        .catch(err => {\r\n          this.loaded()\r\n          this.showToast(\r\n            'Cannot open your profile. Status code ' +\r\n              (err.response ? err.response.status : '%CODE%'),\r\n            {\r\n              icon: 'fa-times',\r\n              position: 'bottom-center',\r\n              duration: 4000,\r\n              type: 'primary',\r\n            }\r\n          )\r\n        })\r\n    },\r\n    updateOpenedProfile(user, me) {\r\n      this.$root.$emit('update-wallet', user)\r\n\r\n      this.loaded()\r\n      this.user.me = !!me\r\n      ;[this.user.firstName, this.user.lastName] = user.name.split(' ')\r\n\r\n      if (Object.keys(user).length) {\r\n        Object.keys(user).forEach(key => {\r\n          this.user[key] = user[key]\r\n        })\r\n      }\r\n    },\r\n    refreshOpenedProfile() {\r\n      this.$root.$emit('getting-dialogue')\r\n\r\n      UserById(this.user.id)\r\n        .then(({ data }) => {\r\n          this.$root.$emit('open-dialogue', this.user)\r\n          this.$root.$emit('open-profile', data)\r\n        })\r\n        .catch(err => {\r\n          this.getMyProfile()\r\n          this.showToast(\r\n            'Cannot open his profile. Status code ' +\r\n              (err.response ? err.response.status : '%CODE%'),\r\n            {\r\n              icon: 'fa-times',\r\n              position: 'bottom-center',\r\n              duration: 4000,\r\n              type: 'primary',\r\n            }\r\n          )\r\n        })\r\n    },\r\n    netToCurrency: net =>\r\n      ({\r\n        BTC: 'bitcoin',\r\n        LTC: 'litecoin',\r\n        ETH: 'ethereum',\r\n      }[net]),\r\n    updateBalance(currency) {\r\n      let balance = this.user.transactions\r\n        .filter(t => t.currency === currency)\r\n        .reduce(\r\n          (balance, t) =>\r\n            balance + (t.type === 'received' ? +t.amount : -t.amount),\r\n          0\r\n        )\r\n\r\n      this.user.wallets[currency.toLowerCase()].balance = balance\r\n    },\r\n    addTransaction(t) {\r\n      this.user.transactions = [t, ...this.user.transactions]\r\n      if (t.name !== 'Deposit') this.updateBalance(t.currency)\r\n    },\r\n    removeTransaction(transaction) {\r\n      this.user.transactions = this.user.transactions.filter(\r\n        t => t.id != transaction.id\r\n      )\r\n      if (transaction.name !== 'Deposit')\r\n        this.updateBalance(transaction.currency)\r\n    },\r\n    loading() {\r\n      this.loadingTabs = [\r\n        'ProfileInfo',\r\n        'ProfileTransactions',\r\n        'ProfileLog',\r\n        'ProfileActions',\r\n      ]\r\n    },\r\n    loaded() {\r\n      this.loadingTabs = []\r\n    },\r\n    gettingProfile() {\r\n      this.loading()\r\n    },\r\n  },\r\n  created() {\r\n    this.getMyProfile()\r\n    this.$root.$on('getting-profile', this.gettingProfile)\r\n    this.$root.$on('open-profile', this.updateOpenedProfile)\r\n    this.$root.$on('refresh-profile', this.refreshOpenedProfile)\r\n    this.$root.$on('add-transaction', this.addTransaction)\r\n    this.$root.$on('remove-transaction', this.removeTransaction)\r\n  },\r\n  beforeDestroy() {\r\n    this.$root.$off('getting-profile', this.loading)\r\n    this.$root.$off('open-profile', this.updateOpenedProfile)\r\n    this.$root.$off('refresh-profile', this.refreshOpenedProfile)\r\n    this.$root.$off('add-transactiff', this.addTransaction)\r\n    this.$root.$off('remove-transaction', this.removeTransaction)\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.profile__name {\r\n  font-size: 1.4rem;\r\n  margin-bottom: 0.5rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  &_first,\r\n  &_last {\r\n    margin: 0 5px;\r\n  }\r\n}\r\n</style>\r\n"]}]}