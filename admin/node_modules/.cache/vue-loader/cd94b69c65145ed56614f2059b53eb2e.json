{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vuestic-ui/src/components/vuestic-components/va-sidebar/TransitionExpand.vue?vue&type=style&index=0&id=31e5b9bd&scoped=true&lang=css&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vuestic-ui/src/components/vuestic-components/va-sidebar/TransitionExpand.vue","mtime":1598034796000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/clean-vuestic/2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKKiB7CiAgd2lsbC1jaGFuZ2U6IGhlaWdodDsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7CiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOwogIHBlcnNwZWN0aXZlOiAxMDAwcHg7Cn0K"},{"version":3,"sources":["TransitionExpand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA","file":"TransitionExpand.vue","sourceRoot":"node_modules/vuestic-ui/src/components/vuestic-components/va-sidebar","sourcesContent":["<script>\r\n/* adopted from https://github.com/maoberlehner/transition-to-height-auto-with-vue */\r\nexport default {\r\n  name: `TransitionExpand`,\r\n  functional: true,\r\n  render (createElement, context) {\r\n    const data = {\r\n      props: {\r\n        name: `expand`,\r\n      },\r\n      on: {\r\n        afterEnter (element) {\r\n          // eslint-disable-next-line no-param-reassign\r\n          element.style.height = `auto`\r\n        },\r\n        enter (element) {\r\n          const { width } = getComputedStyle(element)\r\n\r\n          /* eslint-disable no-param-reassign */\r\n          element.style.width = width\r\n          element.style.position = `absolute`\r\n          element.style.visibility = `hidden`\r\n          element.style.height = `auto`\r\n          /* eslint-enable */\r\n\r\n          const { height } = getComputedStyle(element)\r\n\r\n          /* eslint-disable no-param-reassign */\r\n          element.style.width = null\r\n          element.style.position = null\r\n          element.style.visibility = null\r\n          element.style.height = 0\r\n          /* eslint-enable */\r\n\r\n          // Force repaint to make sure the\r\n          // animation is triggered correctly.\r\n          // eslint-disable-next-line no-unused-expressions\r\n          getComputedStyle(element).height\r\n\r\n          setTimeout(() => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            element.style.height = height\r\n          })\r\n        },\r\n        leave (element) {\r\n          const { height } = getComputedStyle(element)\r\n\r\n          // eslint-disable-next-line no-param-reassign\r\n          element.style.height = height\r\n\r\n          // Force repaint to make sure the\r\n          // animation is triggered correctly.\r\n          // eslint-disable-next-line no-unused-expressions\r\n          getComputedStyle(element).height\r\n\r\n          setTimeout(() => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            element.style.height = 0\r\n          })\r\n        },\r\n      },\r\n    }\r\n\r\n    return createElement(`transition`, data, context.children)\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  * {\r\n    will-change: height;\r\n    transform: translateZ(0);\r\n    backface-visibility: hidden;\r\n    perspective: 1000px;\r\n  }\r\n</style>\r\n\r\n<style>\r\n  .expand-enter-active,\r\n  .expand-leave-active {\r\n    transition: height 0.377s ease;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .expand-enter,\r\n  .expand-leave-to {\r\n    height: 0;\r\n  }\r\n</style>\r\n"]}]}