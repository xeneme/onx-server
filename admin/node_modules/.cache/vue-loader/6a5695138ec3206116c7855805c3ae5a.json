{"remainingRequest":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/components/ui/icons/IconSet.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/src/components/ui/icons/IconSet.vue","mtime":1594635176174},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/d/Working_Area/DEV/CUSTOMERS/onyxian/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaWNvbi1zZXQgewogIC5pY29uLWdyaWQtY29udGFpbmVyIHsKICAgICY6aG92ZXIgewogICAgICBjb2xvcjogJHdoaXRlOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnJhbmQtcHJpbWFyeTsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgfQoKICAgIC5pY29uLXRleHQgewogICAgICBmb250LXNpemU6IDAuNnJlbTsKICAgIH0KICB9CgogICZfX2hlYWRlciB7CiAgICAmX19zaXplIHsKICAgICAgJi0tc21hbGxlciwKICAgICAgJi0tYmlnZ2VyIHsKICAgICAgICBmb250LXdlaWdodDogNjAwOwogICAgICB9CgogICAgICAmLS1zbWFsbGVyIHsKICAgICAgICBsaW5lLWhlaWdodDogMWVtOwogICAgICAgIGZvbnQtc2l6ZTogMWVtOwogICAgICB9CgogICAgICAmLS1iaWdnZXIgewogICAgICAgIGxpbmUtaGVpZ2h0OiAxLjNlbTsKICAgICAgICBmb250LXNpemU6IDEuM2VtOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["IconSet.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IconSet.vue","sourceRoot":"src/components/ui/icons","sourcesContent":["<template>\n  <div class=\"icon-set\">\n    <va-card class=\"icon-set__header mb-4 py-3 ma-0\">\n      <div class=\"row\">\n        <div class=\"flex md3 xs12\">\n          <h2\n            class=\"my-0 ml-2\"\n            :style=\"{ color: this.$themes.dark }\"\n          >\n            {{ iconSet.name }}\n          </h2>\n          <va-button outline :to=\"{ name: 'icon-sets' }\">\n            {{ $t('icons.back') }}\n          </va-button>\n        </div>\n\n        <div class=\"flex md5 xs12 flex-center\">\n          <va-input\n            v-model=\"search\"\n            :label=\"$t('icons.search')\"\n            class=\"mb-0\"\n            style=\"max-width: 300px;\"\n            removable\n            required\n          >\n            <template slot=\"prepend\">\n              <va-icon name=\"fa fa-search icon-left input-icon\"/>\n            </template>\n          </va-input>\n        </div>\n\n        <div class=\"flex md4 xs12 ma-0 flex-center content icon-set__header__size\">\n          <span\n            class=\"ma-2 pr-1 shrink icon-set__header__size--smaller\"\n            :style=\"{ color: this.$themes.dark }\"\n          >\n            A\n          </span>\n          <va-slider\n            value-visible\n            v-model=\"iconSize\"\n            style=\"max-width: 300px;\"\n            :label-value=\"`${iconSize}px`\"\n            :min=\"slider.min\"\n            :max=\"slider.max\"\n          >\n          </va-slider>\n          <span\n            class=\"ma-2 pl-1 shrink icon-set__header__size--bigger\"\n            :style=\"{ color: this.$themes.dark }\"\n          >\n            A\n          </span>\n        </div>\n      </div>\n    </va-card>\n\n    <va-card\n      v-for=\"(list, index) in filteredLists\"\n      :key=\"index\"\n      :title=\"list.name\"\n      class=\"flex md12\"\n    >\n      <span v-if=\"list.icons.length === 0\">\n        {{ $t('icons.none') }}\n      </span>\n      <div class=\"row\">\n        <div\n          class=\"flex flex-center xs3 md1 mb-2 icon-grid-container\"\n          style=\"flex-direction: column;\"\n          v-for=\"icon in list.icons\"\n          :key=\"icon\"\n        >\n          <div class=\"vuestic-icon mb-3 pt-3\">\n            <va-icon :name=\"iconClass(icon)\" :size=\"iconSize\">{{iconData(icon)}}</va-icon>\n          </div>\n          <div class=\"icon-text\">\n            {{ icon }}\n          </div>\n        </div>\n      </div>\n    </va-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'icon-set',\n  props: {\n    name: {\n      type: String,\n    },\n\n    sets: {\n      type: Array,\n    },\n  },\n  data () {\n    return {\n      search: '',\n      iconSize: 30,\n      slider: {\n        formatter: v => `${v}px`,\n        min: 20,\n        max: 40,\n      },\n    }\n  },\n  computed: {\n    iconSet () {\n      for (const set of this.sets) {\n        if (set.href === this.name) return set\n      }\n\n      return {}\n    },\n    filteredLists () {\n      if (!this.search) {\n        // If nothing is searched - we return all sets\n        return this.iconSet.lists\n      }\n\n      const foundIcons = []\n      this.iconSet.lists.forEach(list => {\n        list.icons.forEach(icon => {\n          if (!icon.toUpperCase().includes(this.search.toUpperCase())) {\n            return\n          }\n          // Same icon could be included in different sets.\n          if (foundIcons.includes(icon)) {\n            return\n          }\n          foundIcons.push(icon)\n        })\n      })\n\n      // We return all found icons as a single set.\n      return [{\n        name: 'Found Icons',\n        icons: foundIcons,\n      }]\n    },\n  },\n  methods: {\n    iconClass (icon) {\n      return this.iconSet.prefix === 'material-icons' ? this.iconSet.prefix : `${this.iconSet.prefix} ${this.iconSet.prefix}-${icon}`\n    },\n    iconData (icon) {\n      return this.iconSet.prefix === 'material-icons' ? icon : ''\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.icon-set {\n  .icon-grid-container {\n    &:hover {\n      color: $white;\n      background-color: $brand-primary;\n      cursor: pointer;\n    }\n\n    .icon-text {\n      font-size: 0.6rem;\n    }\n  }\n\n  &__header {\n    &__size {\n      &--smaller,\n      &--bigger {\n        font-weight: 600;\n      }\n\n      &--smaller {\n        line-height: 1em;\n        font-size: 1em;\n      }\n\n      &--bigger {\n        line-height: 1.3em;\n        font-size: 1.3em;\n      }\n    }\n  }\n}\n</style>\n"]}]}