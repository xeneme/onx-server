{"remainingRequest":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/src/components/admin/app-navbar/components/AppNavbarActions.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/src/components/admin/app-navbar/components/AppNavbarActions.vue","mtime":1594635175068},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/vuestic-admin-2.1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcHAtbmF2YmFyLWFjdGlvbnMgewogIGRpc3BsYXk6IGZsZXg7CgogICZfX2l0ZW0gewogICAgbWFyZ2luLXRvcDogMC4zcmVtOwogICAgcGFkZGluZzogMDsKICAgIG1hcmdpbi1sZWZ0OiAxLjI1cmVtOwogICAgbWFyZ2luLXJpZ2h0OiAxLjI1cmVtOwoKICAgICY6bGFzdC1vZi10eXBlIHsKICAgICAgbWFyZ2luLXJpZ2h0OiAwOwogICAgfQoKICAgICYtLXByb2ZpbGUgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgICAgbWFyZ2luOiBhdXRvIDAgYXV0byAxLjI1cmVtOwogICAgfQoKICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihsZykgewogICAgICBtYXJnaW4tcmlnaHQ6IDAuMjVyZW07CiAgICB9CgogICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7CiAgICAgIG1hcmdpbi1yaWdodDogMDsKCiAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7CiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7CiAgICAgIH0KCiAgICAgICYtLXByb2ZpbGUgewogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICByaWdodDogMC43NXJlbTsKICAgICAgICB0b3A6IDEuMjVyZW07CiAgICAgICAgaGVpZ2h0OiBmaXQtY29udGVudDsKICAgICAgICBtYXJnaW46IGF1dG87CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["AppNavbarActions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppNavbarActions.vue","sourceRoot":"src/components/admin/app-navbar/components","sourcesContent":["<template>\n  <div class=\"app-navbar-actions\">\n    <color-dropdown class=\"app-navbar-actions__item\"/>\n    <message-dropdown class=\"app-navbar-actions__item\"/>\n    <notification-dropdown class=\"app-navbar-actions__item\"/>\n    <settings-dropdown\n      :is-top-bar.sync=\"isTopBarProxy\"\n      class=\"app-navbar-actions__item\"\n    />\n    <language-dropdown class=\"app-navbar-actions__item\"/>\n    <profile-dropdown class=\"app-navbar-actions__item app-navbar-actions__item--profile\">\n      <span>{{userName}}</span>\n    </profile-dropdown>\n  </div>\n</template>\n\n<script>\nimport LanguageDropdown from './dropdowns/LanguageDropdown'\nimport ProfileDropdown from './dropdowns/ProfileDropdown'\nimport NotificationDropdown from './dropdowns/NotificationDropdown'\nimport MessageDropdown from './dropdowns/MessageDropdown'\nimport ColorDropdown from './dropdowns/ColorDropdown'\nimport SettingsDropdown from './dropdowns/SettingsDropdown'\nimport { ColorThemeMixin } from '../../../../services/vuestic-ui'\n\nexport default {\n  name: 'app-navbar-actions',\n  mixins: [ColorThemeMixin],\n  inject: ['contextConfig'],\n  components: {\n    SettingsDropdown,\n    ColorDropdown,\n    MessageDropdown,\n    NotificationDropdown,\n    LanguageDropdown,\n    ProfileDropdown,\n  },\n  props: {\n    userName: {\n      type: String,\n      default: '',\n    },\n    isTopBar: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    isTopBarProxy: {\n      get () {\n        return this.isTopBar\n      },\n      set (isTopBar) {\n        this.$emit('update:isTopBar', isTopBar)\n      },\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.app-navbar-actions {\n  display: flex;\n\n  &__item {\n    margin-top: 0.3rem;\n    padding: 0;\n    margin-left: 1.25rem;\n    margin-right: 1.25rem;\n\n    &:last-of-type {\n      margin-right: 0;\n    }\n\n    &--profile {\n      display: flex;\n      justify-content: center;\n      margin: auto 0 auto 1.25rem;\n    }\n\n    @include media-breakpoint-down(lg) {\n      margin-right: 0.25rem;\n    }\n\n    @include media-breakpoint-down(sm) {\n      margin-right: 0;\n\n      &:first-of-type {\n        margin-left: 0;\n      }\n\n      &--profile {\n        position: absolute;\n        right: 0.75rem;\n        top: 1.25rem;\n        height: fit-content;\n        margin: auto;\n      }\n    }\n  }\n}\n</style>\n"]}]}