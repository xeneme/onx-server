{"remainingRequest":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/src/components/auth/InputWorm.vue?vue&type=style&index=0&id=55179574&lang=sass&scoped=true&","dependencies":[{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/src/components/auth/InputWorm.vue","mtime":1593582484350},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/Users/PC_CREATOR/Documents/03backup/_DEV/_CUSTOMERS'_STUFF/onyxian/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICcuLi8uLi9zY3NzL3NtYXJ0LWdyaWQnDQpAaW1wb3J0ICcuLi8uLi9zY3NzL3ZhcmlhYmxlcycNCg0KLmlucHV0X3dvcm0NCiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKQ0KICBoZWlnaHQ6IDM4LjY1cHgNCiAgd2lkdGg6IDUwMHB4DQoNCiAgQGluY2x1ZGUgeHMtYmxvY2sNCiAgICBoZWlnaHQ6IDM4LjY1cHgNCiAgQGluY2x1ZGUgc20tYmxvY2sNCiAgICBoZWlnaHQ6IDM4LjY1cHgNCg0KICBzdmcNCiAgICBAaW5jbHVkZSB4cy1ibG9jaw0KICAgICAgZGlzcGxheTogbm9uZQ0KICAgIEBpbmNsdWRlIHNtLWJsb2NrDQogICAgICBkaXNwbGF5OiBibG9jaw0KDQogICAgcGF0aA0KICAgICAgc3Ryb2tlOiAkY3lhbg0K"},{"version":3,"sources":["InputWorm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"InputWorm.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\r\n  <div class=\"input_worm\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" viewBox=\"0 0 595 46\">\r\n      <path\r\n        fill=\"none\"\r\n        stroke-miterlimit=\"10\"\r\n        stroke-width=\"3\"\r\n        d=\"M538 44H57c-11 0-21-9-21-21v0C36 11 46 2 57 2h481c12 0 21 9 21 21v0c0 12-9 21-21 21z\"\r\n      />\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'InputWorm',\r\n  data() {\r\n    return {\r\n      speed: 500,\r\n    };\r\n  },\r\n  props: ['top', 'bottom', 'compare'],\r\n  watch: {\r\n    top(val, oldVal) {\r\n      this.compareValues();\r\n\r\n      if (!this.bottom) {\r\n        this.$el.style.transform = 'rotate(180deg)';\r\n        if (!oldVal) {\r\n          this.halfFilled();\r\n        } else if (!val) {\r\n          this.everythingRemoved();\r\n        }\r\n      } else {\r\n        if (!oldVal) {\r\n          this.everythingFilled();\r\n        } else if (!val) {\r\n          if (this.$el.style.transform === 'rotate(180deg)') {\r\n            let self = this;\r\n\r\n            this.$anime({\r\n              targets: '.input_worm svg path',\r\n              strokeDashoffset: [68, 0],\r\n              easing: 'easeInOutSine',\r\n              duration: self.speed,\r\n              complete() {\r\n                self.$el.style.transform = 'rotate(0deg)';\r\n                if (self.bottom) self.halfRemoved();\r\n                else self.everythingRemoved();\r\n              },\r\n            });\r\n          } else {\r\n            this.halfRemoved();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    bottom(val, oldVal) {\r\n      this.compareValues();\r\n\r\n      if (!this.top) {\r\n        this.$el.style.transform = 'rotate(0deg)';\r\n        if (!oldVal) {\r\n          this.halfFilled();\r\n        } else if (!val) {\r\n          this.everythingRemoved();\r\n        }\r\n      } else {\r\n        if (!oldVal) {\r\n          this.everythingFilled();\r\n        } else if (!val) {\r\n          if (this.$el.style.transform === 'rotate(0deg)') {\r\n            let self = this;\r\n\r\n            this.$anime({\r\n              targets: '.input_worm svg path',\r\n              strokeDashoffset: [68, 0],\r\n              easing: 'easeInOutSine',\r\n              duration: self.speed,\r\n              complete() {\r\n                self.$el.style.transform = 'rotate(180deg)';\r\n                if (self.top) self.halfRemoved();\r\n                else self.everythingRemoved();\r\n              },\r\n            });\r\n          } else {\r\n            this.halfRemoved();\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    hideWorm(immediately) {\r\n      this.$anime({\r\n        targets: '.input_worm svg path',\r\n        strokeDashoffset: [68, this.$anime.setDashoffset],\r\n        easing: 'easeInOutSine',\r\n        duration: !immediately ? this.speed : 0,\r\n      });\r\n    },\r\n    halfFilled() {\r\n      let self = this;\r\n\r\n      this.$anime({\r\n        targets: '.input_worm svg path',\r\n        strokeDashoffset: [this.$anime.setDashoffset, 613],\r\n        easing: 'easeInOutSine',\r\n        duration: self.speed,\r\n      });\r\n    },\r\n    everythingFilled() {\r\n      let self = this;\r\n\r\n      this.$anime({\r\n        targets: '.input_worm svg path',\r\n        strokeDashoffset: 68,\r\n        easing: 'easeInOutSine',\r\n        duration: self.speed,\r\n      });\r\n    },\r\n    everythingRemoved() {\r\n      let self = this;\r\n\r\n      this.$anime({\r\n        targets: '.input_worm svg path',\r\n        strokeDashoffset: [613, this.$anime.setDashoffset],\r\n        easing: 'easeInOutSine',\r\n        duration: self.speed,\r\n      });\r\n    },\r\n    halfRemoved() {\r\n      let self = this;\r\n\r\n      this.$anime({\r\n        targets: '.input_worm svg path',\r\n        strokeDashoffset: [68, 613],\r\n        easing: 'easeInOutSine',\r\n        duration: self.speed,\r\n      });\r\n    },\r\n    compareValues() {\r\n      if (!this.compare) return;\r\n\r\n      const stroke = this.$el.querySelector('.input_worm svg path');\r\n\r\n      this.$anime({\r\n        targets: stroke,\r\n        stroke: this.top == this.bottom && this.top ? '#0075ff' : '#ff0000',\r\n        duration: this.speed * 2,\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.hideWorm(true);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"sass\" scoped>\r\n@import '../../scss/smart-grid'\r\n@import '../../scss/variables'\r\n\r\n.input_worm\r\n  transform: rotate(180deg)\r\n  height: 38.65px\r\n  width: 500px\r\n\r\n  @include xs-block\r\n    height: 38.65px\r\n  @include sm-block\r\n    height: 38.65px\r\n\r\n  svg\r\n    @include xs-block\r\n      display: none\r\n    @include sm-block\r\n      display: block\r\n\r\n    path\r\n      stroke: $cyan\r\n</style>\r\n"]}]}